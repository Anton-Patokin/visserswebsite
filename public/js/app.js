/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 14);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.2.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2017-03-20T18:59Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};



	function DOMEval( code, doc ) {
		doc = doc || document;

		var script = doc.createElement( "script" );

		script.text = code;
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.2.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && Array.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {

		// As of jQuery 3.0, isNumeric is limited to
		// strings and numbers (primitives or objects)
		// that can be coerced to finite numbers (gh-2662)
		var type = jQuery.type( obj );
		return ( type === "number" || type === "string" ) &&

			// parseFloat NaNs numeric-cast false positives ("")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			!isNaN( obj - parseFloat( obj ) );
	},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}

		// Support: Android <=2.3 only (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE <=9 - 11, Edge 12 - 13
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Simple selector that can be filtered directly, removing non-Elements
	if ( risSimple.test( qualifier ) ) {
		return jQuery.filter( qualifier, elements, not );
	}

	// Complex selector, compare the two sets, removing non-Elements
	qualifier = jQuery.filter( qualifier, elements );
	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
        if ( nodeName( elem, "iframe" ) ) {
            return elem.contentDocument;
        }

        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
        // Treat the template element as a regular one in browsers that
        // don't support it.
        if ( nodeName( elem, "template" ) ) {
            elem = elem.content || elem;
        }

        return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && jQuery.isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( jQuery.isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				jQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ jQuery.camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ jQuery.camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( jQuery.camelCase );
			} else {
				key = jQuery.camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: jQuery.isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( ">tbody", elem )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		div.style.cssText =
			"box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";
		div.innerHTML = "";
		documentElement.appendChild( container );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = divStyle.marginLeft === "2px";
		boxSizingReliableVal = divStyle.width === "4px";

		// Support: Android 4.0 - 4.3 only
		// Some styles come back with percentage values, even though they shouldn't
		div.style.marginRight = "50%";
		pixelMarginRightVal = divStyle.marginRight === "4px";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	container.appendChild( div );

	jQuery.extend( support, {
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelMarginRight: function() {
			computeStyleTests();
			return pixelMarginRightVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a property mapped along what jQuery.cssProps suggests or to
// a vendor prefixed property.
function finalPropName( name ) {
	var ret = jQuery.cssProps[ name ];
	if ( !ret ) {
		ret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;
	}
	return ret;
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i,
		val = 0;

	// If we already have the right measurement, avoid augmentation
	if ( extra === ( isBorderBox ? "border" : "content" ) ) {
		i = 4;

	// Otherwise initialize for horizontal or vertical properties
	} else {
		i = name === "width" ? 1 : 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with computed style
	var valueIsBorderBox,
		styles = getStyles( elem ),
		val = curCSS( elem, name, styles ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Computed unit is not pixels. Stop here and return.
	if ( rnumnonpx.test( val ) ) {
		return val;
	}

	// Check for style in case a browser which returns unreliable values
	// for getComputedStyle silently falls back to the reliable elem.style
	valueIsBorderBox = isBorderBox &&
		( support.boxSizingReliable() || val === elem.style[ name ] );

	// Fall back to offsetWidth/Height when value is "auto"
	// This happens for inline elements with no explicit setting (gh-3571)
	if ( val === "auto" ) {
		val = elem[ "offset" + name[ 0 ].toUpperCase() + name.slice( 1 ) ];
	}

	// Normalize "", auto, and prepare for extra
	val = parseFloat( val ) || 0;

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = extra && getStyles( elem ),
				subtract = extra && augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				);

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ name ] = value;
				value = jQuery.css( elem, name );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 13
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnothtmlwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




support.focusin = "onfocusin" in window;


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = jQuery.isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 13
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( jQuery.isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var doc, docElem, rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		rect = elem.getBoundingClientRect();

		doc = elem.ownerDocument;
		docElem = doc.documentElement;
		win = doc.defaultView;

		return {
			top: rect.top + win.pageYOffset - docElem.clientTop,
			left: rect.left + win.pageXOffset - docElem.clientLeft
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset = {
				top: parentOffset.top + jQuery.css( offsetParent[ 0 ], "borderTopWidth", true ),
				left: parentOffset.left + jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true )
			};
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( jQuery.isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
		return jQuery;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),
/* 1 */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ }),
/* 2 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var center = { latitude: 51.218826, longitude: 4.402950 };

__webpack_require__(6);
__webpack_require__(11);
__webpack_require__(9);
__webpack_require__(8);
__webpack_require__(10);

var myApp = angular.module('myApp', ['uiGmapgoogle-maps']);

myApp.config(function (uiGmapGoogleMapApiProvider) {
    uiGmapGoogleMapApiProvider.configure({
        key: 'AIzaSyDJBGY58S0ptq6KlFxYIpNLTIEW8mBKhk4',
        v: '3.20', //defaults to latest 3.X anyhow
        libraries: 'weather,geometry,visualization'
    });
});

myApp.controller('GoogleMapsConroller', ['$scope', 'uiGmapGoogleMapApi', function ($scope, uiGmapGoogleMapApi) {
    $scope.map = {
        center: {
            latitude: center.latitude,
            longitude: center.longitude
        },
        options: {
            scrollwheel: false
        },
        zoom: 8
    };
    uiGmapGoogleMapApi.then(function (maps) {});
}]);

myApp.controller('MainController', ['$scope', 'uiGmapGoogleMapApi', function ($scope, uiGmapGoogleMapApi) {
    $scope.greeting = 'Hola!';
    $scope.show_exampale = 1;

    $scope.input = {
        type: ""
    };

    $scope.currentStep = 1;
    $scope.steps = [{
        step: 1,
        url: '',
        glyphicon: "glyphicon-bullhorn",
        name: "First step",
        template: "step1"
    }, {
        step: 2,
        url: '',
        glyphicon: "glyphicon-map-marker",
        name: "Second step",
        template: "step2"
    }, {
        step: 3,
        url: '',
        glyphicon: "glyphicon-pencil",
        name: "Third step",
        template: "step3"
    }, {
        step: 4,
        url: '',
        glyphicon: "glyphicon-ok",
        name: "Third step",
        template: "step3"
    }];
    console.log($scope.steps);

    //Functions
    $scope.gotoStep = function (newStep) {
        $scope.currentStep = newStep;
        editSteps($scope.currentStep);
    };
    $scope.progress_clicked = function ($step) {
        if ($step < $scope.currentStep) $scope.gotoStep($step);
    };
    $scope.prev = function () {

        if ($scope.currentStep > 1) $scope.currentStep--;
    };
    $scope.next = function () {
        if ($scope.currentStep < 4) $scope.currentStep++;
    };

    $scope.putValue = function (type) {
        $scope.input.type = type;
        switch (type) {
            case "recept":
                $scope.steps[1]["glyphicon"] = "glyphicon-map-marker";
                $scope.steps[2]["glyphicon"] = "glyphicon-pencil";
                break;
            case "contest":
                break;
            case 4:
                break;
            default:
        }
    };

    function editSteps($currentStep) {
        switch ($currentStep) {
            case 1:
                $scope.steps[0]["url"] = "#step1";
                break;
            case 2:
                $scope.steps[1]["url"] = "#step2";
                break;
            case 3:
                $scope.steps[2]["url"] = "#step3";
                break;
            case 4:
                $scope.steps[3]["url"] = "#step4";
                break;
            default:
        }
        console.log($scope.steps);
    }

    $scope.mapAdd = {
        center: {
            latitude: center.latitude,
            longitude: center.longitude
        },
        options: {
            scrollwheel: false
        },
        control: {
            refresh: {
                latitude: center.latitude,
                longitude: center.longitude
            }
        },
        zoom: 8,
        events: {
            click: function click($marker, $event, $position) {
                var coordinats = $position[0].latLng;
                $scope.marker.coords = {
                    latitude: coordinats.lat(),
                    longitude: coordinats.lng()
                };
                $scope.$apply();
            }
        }
    };
    $scope.marker = {
        id: 1,
        coords: {
            latitude: "",
            longitude: ""
        },
        options: ''

    };
    uiGmapGoogleMapApi.then(function (maps) {});
}]);

myApp.controller('WizardController', ['$scope', function ($scope) {

    //Model

}]);

/***/ }),
/* 5 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {


window._ = __webpack_require__(13);

/**
 * We'll load jQuery and the Bootstrap jQuery plugin which provides support
 * for JavaScript based Bootstrap features such as modals and tabs. This
 * code may be modified to fit the specific needs of your application.
 */

window.$ = window.jQuery = __webpack_require__(0);

__webpack_require__(12);

// window.axios.defaults.headers.common = {
//     'X-CSRF-TOKEN': window.Laravel.csrfToken,
//     'X-Requested-With': 'XMLHttpRequest'
// };

/**
 * Echo exposes an expressive API for subscribing to channels and listening
 * for events that are broadcast by Laravel. Echo and event broadcasting
 * allows your team to easily build robust real-time web applications.
 */

// import Echo from 'laravel-echo'

// window.Pusher = require('pusher-js');

// window.Echo = new Echo({
//     broadcaster: 'pusher',
//     key: 'your-pusher-key'
// });

/***/ }),
/* 7 */,
/* 8 */
/***/ (function(module, exports) {

var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/*! angular-google-maps 2.4.1 2017-01-05
 *  AngularJS directives for Google Maps
 *  git: https://github.com/angular-ui/angular-google-maps.git
 */;(function(window,angular,_,undefined){'use strict';/*
     !
     The MIT License

     Copyright (c) 2010-2013 Google, Inc. http://angularjs.org

     Permission is hereby granted, free of charge, to any person obtaining a copy
     of this software and associated documentation files (the 'Software'), to deal
     in the Software without restriction, including without limitation the rights
     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     copies of the Software, and to permit persons to whom the Software is
     furnished to do so, subject to the following conditions:

     The above copyright notice and this permission notice shall be included in
     all copies or substantial portions of the Software.

     THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     THE SOFTWARE.

     angular-google-maps
     https://github.com/angular-ui/angular-google-maps

     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     */(function(){angular.module('uiGmapgoogle-maps.providers',['nemLogging']);angular.module('uiGmapgoogle-maps.wrapped',[]);angular.module('uiGmapgoogle-maps.extensions',['uiGmapgoogle-maps.wrapped','uiGmapgoogle-maps.providers']);angular.module('uiGmapgoogle-maps.directives.api.utils',['uiGmapgoogle-maps.extensions']);angular.module('uiGmapgoogle-maps.directives.api.managers',[]);angular.module('uiGmapgoogle-maps.directives.api.options',['uiGmapgoogle-maps.directives.api.utils']);angular.module('uiGmapgoogle-maps.directives.api.options.builders',[]);angular.module('uiGmapgoogle-maps.directives.api.models.child',['uiGmapgoogle-maps.directives.api.utils','uiGmapgoogle-maps.directives.api.options','uiGmapgoogle-maps.directives.api.options.builders']);angular.module('uiGmapgoogle-maps.directives.api.models.parent',['uiGmapgoogle-maps.directives.api.managers','uiGmapgoogle-maps.directives.api.models.child','uiGmapgoogle-maps.providers']);angular.module('uiGmapgoogle-maps.directives.api',['uiGmapgoogle-maps.directives.api.models.parent']);angular.module('uiGmapgoogle-maps',['uiGmapgoogle-maps.directives.api','uiGmapgoogle-maps.providers']);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.providers').factory('uiGmapMapScriptLoader',['$q','uiGmapuuid',function($q,uuid){var getScriptUrl,includeScript,isGoogleMapsLoaded,scriptId,usedConfiguration;scriptId=void 0;usedConfiguration=void 0;getScriptUrl=function getScriptUrl(options){if(options.china){return'http://maps.google.cn/maps/api/js?';}else{if(options.transport==='auto'){return'//maps.googleapis.com/maps/api/js?';}else{return options.transport+'://maps.googleapis.com/maps/api/js?';}}};includeScript=function includeScript(options){var omitOptions,query,script,scriptElem;omitOptions=['transport','isGoogleMapsForWork','china','preventLoad'];if(options.isGoogleMapsForWork){omitOptions.push('key');}query=_.map(_.omit(options,omitOptions),function(v,k){return k+'='+v;});if(scriptId){scriptElem=document.getElementById(scriptId);scriptElem.parentNode.removeChild(scriptElem);}query=query.join('&');script=document.createElement('script');script.id=scriptId="ui_gmap_map_load_"+uuid.generate();script.type='text/javascript';script.src=getScriptUrl(options)+query;return document.head.appendChild(script);};isGoogleMapsLoaded=function isGoogleMapsLoaded(){return angular.isDefined(window.google)&&angular.isDefined(window.google.maps);};return{load:function load(options){var deferred,randomizedFunctionName;deferred=$q.defer();if(isGoogleMapsLoaded()){deferred.resolve(window.google.maps);return deferred.promise;}randomizedFunctionName=options.callback='onGoogleMapsReady'+Math.round(Math.random()*1000);window[randomizedFunctionName]=function(){window[randomizedFunctionName]=null;deferred.resolve(window.google.maps);};if(window.navigator.connection&&window.Connection&&window.navigator.connection.type===window.Connection.NONE&&!options.preventLoad){document.addEventListener('online',function(){if(!isGoogleMapsLoaded()){return includeScript(options);}});}else if(!options.preventLoad){includeScript(options);}usedConfiguration=options;usedConfiguration.randomizedFunctionName=randomizedFunctionName;return deferred.promise;},manualLoad:function manualLoad(){var config;config=usedConfiguration;if(!isGoogleMapsLoaded()){return includeScript(config);}else{if(window[config.randomizedFunctionName]){return window[config.randomizedFunctionName]();}}}};}]).provider('uiGmapGoogleMapApi',function(){this.options={transport:'https',isGoogleMapsForWork:false,china:false,v:'3',libraries:'',language:'en',preventLoad:false};this.configure=function(options){angular.extend(this.options,options);};this.$get=['uiGmapMapScriptLoader',function(_this){return function(loader){return loader.load(_this.options);};}(this)];return this;}).service('uiGmapGoogleMapApiManualLoader',['uiGmapMapScriptLoader',function(loader){return{load:function load(){loader.manualLoad();}};}]);}).call(this);;(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.extensions').service('uiGmapExtendGWin',function(){return{init:_.once(function(){var uiGmapInfoBox;if(!(google||(typeof google!=="undefined"&&google!==null?google.maps:void 0)||google.maps.InfoWindow!=null)){return;}google.maps.InfoWindow.prototype._open=google.maps.InfoWindow.prototype.open;google.maps.InfoWindow.prototype._close=google.maps.InfoWindow.prototype.close;google.maps.InfoWindow.prototype._isOpen=false;google.maps.InfoWindow.prototype.open=function(map,anchor,recurse){if(recurse!=null){return;}this._isOpen=true;this._open(map,anchor,true);};google.maps.InfoWindow.prototype.close=function(recurse){if(recurse!=null){return;}this._isOpen=false;this._close(true);};google.maps.InfoWindow.prototype.isOpen=function(val){if(val==null){val=void 0;}if(val==null){return this._isOpen;}else{return this._isOpen=val;}};/*
                     Do the same for InfoBox
                     TODO: Clean this up so the logic is defined once, wait until develop becomes master as this will be easier
                     */if(window.InfoBox){window.InfoBox.prototype._open=window.InfoBox.prototype.open;window.InfoBox.prototype._close=window.InfoBox.prototype.close;window.InfoBox.prototype._isOpen=false;window.InfoBox.prototype.open=function(map,anchor){this._isOpen=true;this._open(map,anchor);};window.InfoBox.prototype.close=function(){this._isOpen=false;this._close();};window.InfoBox.prototype.isOpen=function(val){if(val==null){val=void 0;}if(val==null){return this._isOpen;}else{return this._isOpen=val;}};uiGmapInfoBox=function(superClass){extend(uiGmapInfoBox,superClass);function uiGmapInfoBox(opts){this.getOrigCloseBoxImg_=bind(this.getOrigCloseBoxImg_,this);this.getCloseBoxDiv_=bind(this.getCloseBoxDiv_,this);var box;box=new window.InfoBox(opts);_.extend(this,box);if(opts.closeBoxDiv!=null){this.closeBoxDiv_=opts.closeBoxDiv;}}uiGmapInfoBox.prototype.getCloseBoxDiv_=function(){return this.closeBoxDiv_;};uiGmapInfoBox.prototype.getCloseBoxImg_=function(){var div,img;div=this.getCloseBoxDiv_();img=this.getOrigCloseBoxImg_();return div||img;};uiGmapInfoBox.prototype.getOrigCloseBoxImg_=function(){var img;img="";if(this.closeBoxURL_!==""){img="<img";img+=" src='"+this.closeBoxURL_+"'";img+=" align=right";img+=" style='";img+=" position: relative;";img+=" cursor: pointer;";img+=" margin: "+this.closeBoxMargin_+";";img+="'>";}return img;};return uiGmapInfoBox;}(window.InfoBox);window.uiGmapInfoBox=uiGmapInfoBox;}if(window.MarkerLabel_){return window.MarkerLabel_.prototype.setContent=function(){var content;content=this.marker_.get('labelContent');if(!content||_.isEqual(this.oldContent,content)){return;}if(typeof(content!=null?content.nodeType:void 0)==='undefined'){this.labelDiv_.innerHTML=content;this.eventDiv_.innerHTML=this.labelDiv_.innerHTML;this.oldContent=content;}else{this.labelDiv_.innerHTML='';this.labelDiv_.appendChild(content);content=content.cloneNode(true);this.labelDiv_.innerHTML='';this.eventDiv_.appendChild(content);this.oldContent=content;}};}})};});}).call(this);;/*global _:true, angular:true */(function(){angular.module('uiGmapgoogle-maps.extensions').service('uiGmapLodash',function(){var baseGet,baseToString,fixLodash,get,reEscapeChar,rePropName,toObject,toPath;rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;reEscapeChar=/\\(\\)?/g;/*
             For Lodash 4 compatibility (some aliases are removed)
             */fixLodash=function fixLodash(arg){var isProto,missingName,swapName;missingName=arg.missingName,swapName=arg.swapName,isProto=arg.isProto;if(_[missingName]==null){_[missingName]=_[swapName];if(isProto){return _.prototype[missingName]=_[swapName];}}};[{missingName:'contains',swapName:'includes',isProto:true},{missingName:'includes',swapName:'contains',isProto:true},{missingName:'object',swapName:'zipObject'},{missingName:'zipObject',swapName:'object'},{missingName:'all',swapName:'every'},{missingName:'every',swapName:'all'},{missingName:'any',swapName:'some'},{missingName:'some',swapName:'any'},{missingName:'first',swapName:'head'},{missingName:'head',swapName:'first'}].forEach(function(toMonkeyPatch){return fixLodash(toMonkeyPatch);});if(_.get==null){/**
                 * Converts `value` to an object if it's not one.
                 *
                 * @private
                 * @param {*} value The value to process.
                 * @returns {Object} Returns the object.
                 */toObject=function toObject(value){if(_.isObject(value)){return value;}else{return Object(value);}};/**
                 * Converts `value` to a string if it's not one. An empty string is returned
                 * for `null` or `undefined` values.
                 *
                 * @private
                 * @param {*} value The value to process.
                 * @returns {string} Returns the string.
                 */baseToString=function baseToString(value){if(value===null){return'';}else{return value+'';}};/**
                 * Converts `value` to property path array if it's not one.
                 *
                 * @private
                 * @param {*} value The value to process.
                 * @returns {Array} Returns the property path array.
                 */toPath=function toPath(value){var result;if(_.isArray(value)){return value;}result=[];baseToString(value).replace(rePropName,function(match,number,quote,string){result.push(quote?string.replace(reEscapeChar,'$1'):number||match);});return result;};/**
                 * The base implementation of `get` without support for string paths
                 * and default values.
                 *
                 * @private
                 * @param {Object} object The object to query.
                 * @param {Array} path The path of the property to get.
                 * @param {string} [pathKey] The key representation of path.
                 * @returns {*} Returns the resolved value.
                 */baseGet=function baseGet(object,path,pathKey){var index,length;if(object===null){return;}if(pathKey!==void 0&&pathKey in toObject(object)){path=[pathKey];}index=0;length=path.length;while(!_.isUndefined(object)&&index<length){object=object[path[index++]];}if(index&&index===length){return object;}else{return void 0;}};/**
                 * Gets the property value at `path` of `object`. If the resolved value is
                 * `undefined` the `defaultValue` is used in its place.
                 *
                 * @static
                 * @memberOf _
                 * @category Object
                 * @param {Object} object The object to query.
                 * @param {Array|string} path The path of the property to get.
                 * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.
                 * @returns {*} Returns the resolved value.
                 * @example
                 *
                 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
                 *
                 * _.get(object, 'a[0].b.c');
                 * // => 3
                 *
                 * _.get(object, ['a', '0', 'b', 'c']);
                 * // => 3
                 *
                 * _.get(object, 'a.b.c', 'default');
                 * // => 'default'
                 */get=function get(object,path,defaultValue){var result;result=object===null?void 0:baseGet(object,toPath(path),path+'');if(result===void 0){return defaultValue;}else{return result;}};_.get=get;}/*
             Author Nick McCready
             Intersection of Objects if the arrays have something in common each intersecting object will be returned
             in an new array.
             */this.intersectionObjects=function(array1,array2,comparison){var res;if(comparison==null){comparison=void 0;}res=_.map(array1,function(obj1){return _.find(array2,function(obj2){if(comparison!=null){return comparison(obj1,obj2);}else{return _.isEqual(obj1,obj2);}});});return _.filter(res,function(o){return o!=null;});};this.containsObject=_.includeObject=function(obj,target,comparison){if(comparison==null){comparison=void 0;}if(obj===null){return false;}return _.some(obj,function(value){if(comparison!=null){return comparison(value,target);}else{return _.isEqual(value,target);}});};this.differenceObjects=function(array1,array2,comparison){if(comparison==null){comparison=void 0;}return _.filter(array1,function(_this){return function(value){return!_this.containsObject(array2,value,comparison);};}(this));};this.withoutObjects=this.differenceObjects;this.indexOfObject=function(array,item,comparison,isSorted){var i,length;if(array==null){return-1;}i=0;length=array.length;if(isSorted){if(typeof isSorted==="number"){i=isSorted<0?Math.max(0,length+isSorted):isSorted;}else{i=_.sortedIndex(array,item);return array[i]===item?i:-1;}}while(i<length){if(comparison!=null){if(comparison(array[i],item)){return i;}}else{if(_.isEqual(array[i],item)){return i;}}i++;}return-1;};this.isNullOrUndefined=function(thing){return _.isNull(thing||_.isUndefined(thing));};return this;});}).call(this);;(function(){angular.module('uiGmapgoogle-maps.extensions').factory('uiGmapString',function(){return function(str){this.contains=function(value,fromIndex){return str.indexOf(value,fromIndex)!==-1;};return this;};});}).call(this);;/*global _:true,angular:true, */(function(){angular.module('uiGmapgoogle-maps.directives.api.utils').service('uiGmap_sync',[function(){return{fakePromise:function fakePromise(){var _cb;_cb=void 0;return{then:function then(cb){return _cb=cb;},resolve:function resolve(){return _cb.apply(void 0,arguments);}};}};}]).service('uiGmap_async',['$timeout','uiGmapPromise','uiGmapLogger','$q','uiGmapDataStructures','uiGmapGmapUtil',function($timeout,uiGmapPromise,$log,$q,uiGmapDataStructures,uiGmapGmapUtil){var ExposedPromise,PromiseQueueManager,SniffedPromise,_getIterateeValue,_ignoreFields,defaultChunkSize,_doChunk,doSkippPromise,each,errorObject,getArrayAndKeys,isInProgress,kickPromise,logTryCatch,managePromiseQueue,map,maybeCancelPromises,promiseStatus,promiseTypes,tryCatch;promiseTypes=uiGmapPromise.promiseTypes;isInProgress=uiGmapPromise.isInProgress;promiseStatus=uiGmapPromise.promiseStatus;ExposedPromise=uiGmapPromise.ExposedPromise;SniffedPromise=uiGmapPromise.SniffedPromise;kickPromise=function kickPromise(sniffedPromise,cancelCb){var promise;promise=sniffedPromise.promise();promise.promiseType=sniffedPromise.promiseType;if(promise.$$state){$log.debug("promiseType: "+promise.promiseType+", state: "+promiseStatus(promise.$$state.status));}promise.cancelCb=cancelCb;return promise;};doSkippPromise=function doSkippPromise(sniffedPromise,lastPromise){if(sniffedPromise.promiseType===promiseTypes.create&&lastPromise.promiseType!==promiseTypes["delete"]&&lastPromise.promiseType!==promiseTypes.init){$log.debug("lastPromise.promiseType "+lastPromise.promiseType+", newPromiseType: "+sniffedPromise.promiseType+", SKIPPED MUST COME AFTER DELETE ONLY");return true;}return false;};maybeCancelPromises=function maybeCancelPromises(queue,sniffedPromise,lastPromise){var first;if(sniffedPromise.promiseType===promiseTypes["delete"]&&lastPromise.promiseType!==promiseTypes["delete"]){if(lastPromise.cancelCb!=null&&_.isFunction(lastPromise.cancelCb)&&isInProgress(lastPromise)){$log.debug("promiseType: "+sniffedPromise.promiseType+", CANCELING LAST PROMISE type: "+lastPromise.promiseType);lastPromise.cancelCb('cancel safe');first=queue.peek();if(first!=null&&isInProgress(first)){if(first.hasOwnProperty("cancelCb")&&_.isFunction(first.cancelCb)){$log.debug("promiseType: "+first.promiseType+", CANCELING FIRST PROMISE type: "+first.promiseType);return first.cancelCb('cancel safe');}else{return $log.warn('first promise was not cancelable');}}}}};/*
                 From a High Level:
                 This is a SniffedPromiseQueueManager (looking to rename) where the queue is existingPiecesObj.existingPieces.
                 This is a function and should not be considered a class.
                 So it is run to manage the state (cancel, skip, link) as needed.
                 Purpose:
                 The whole point is to check if there is existing async work going on. If so we wait on it.

                 arguments:
                 - existingPiecesObj =  Queue<Promises>
                 - sniffedPromise = object wrapper holding a function to a pending (function) promise (promise: fnPromise)
                 with its intended type.
                 - cancelCb = callback which accepts a string, this string is intended to be returned at the end of _async.each iterator

                 Where the cancelCb passed msg is 'cancel safe' _async.each will drop out and fall through. Thus canceling the promise
                 gracefully without messing up state.

                 Synopsis:

                 - Promises have been broken down to 4 states create, update,delete (3 main) and init. (Helps boil down problems in ordering)
                 where (init) is special to indicate that it is one of the first or to allow a create promise to work beyond being after a delete

                 - Every Promise that comes in is enqueued and linked to the last promise in the queue.

                 - A promise can be skipped or canceled to save cycles.

                 Saved Cycles:
                 - Skipped - This will only happen if async work comes in out of order. Where a pending create promise (un-executed) comes in
                 after a delete promise.
                 - Canceled - Where an incoming promise (un-executed promise) is of type delete and the any lastPromise is not a delete type.


                 NOTE:
                 - You should not muck with existingPieces as its state is dependent on this functional loop.
                 - PromiseQueueManager should not be thought of as a class that has a life expectancy (it has none). It's sole
                 purpose is to link, skip, and kill promises. It also manages the promise queue existingPieces.
                 */PromiseQueueManager=function PromiseQueueManager(existingPiecesObj,sniffedPromise,cancelCb){var lastPromise,newPromise;if(!existingPiecesObj.existingPieces){existingPiecesObj.existingPieces=new uiGmapDataStructures.Queue();return existingPiecesObj.existingPieces.enqueue(kickPromise(sniffedPromise,cancelCb));}else{lastPromise=_.last(existingPiecesObj.existingPieces._content);if(doSkippPromise(sniffedPromise,lastPromise)){return;}maybeCancelPromises(existingPiecesObj.existingPieces,sniffedPromise,lastPromise);newPromise=ExposedPromise(lastPromise["finally"](function(){return kickPromise(sniffedPromise,cancelCb);}));newPromise.cancelCb=cancelCb;newPromise.promiseType=sniffedPromise.promiseType;existingPiecesObj.existingPieces.enqueue(newPromise);return lastPromise["finally"](function(){return existingPiecesObj.existingPieces.dequeue();});}};managePromiseQueue=function managePromiseQueue(objectToLock,promiseType,msg,cancelCb,fnPromise){var cancelLogger;if(msg==null){msg='';}cancelLogger=function cancelLogger(msg){$log.debug(msg+": "+msg);if(cancelCb!=null&&_.isFunction(cancelCb)){return cancelCb(msg);}};return PromiseQueueManager(objectToLock,SniffedPromise(fnPromise,promiseType),cancelLogger);};defaultChunkSize=80;errorObject={value:null};tryCatch=function tryCatch(fn,ctx,args){var e,error1;try{return fn.apply(ctx,args);}catch(error1){e=error1;errorObject.value=e;return errorObject;}};logTryCatch=function logTryCatch(fn,ctx,deferred,args){var msg,result;result=tryCatch(fn,ctx,args);if(result===errorObject){msg="error within chunking iterator: "+errorObject.value;$log.error(msg);deferred.reject(msg);}if(result==='cancel safe'){return false;}return true;};_getIterateeValue=function _getIterateeValue(collection,array,index){var _isArray,valOrKey;_isArray=collection===array;valOrKey=array[index];if(_isArray){return valOrKey;}return collection[valOrKey];};_ignoreFields=['length','forEach','map'];getArrayAndKeys=function getArrayAndKeys(collection,keys,bailOutCb,cb){var array,propName,val;if(angular.isArray(collection)){array=collection;}else{if(keys){array=keys;}else{array=[];for(propName in collection){val=collection[propName];if(collection.hasOwnProperty(propName)&&!_.includes(_ignoreFields,propName)){array.push(propName);}}}}if(cb==null){cb=bailOutCb;}if(angular.isArray(array)&&!(array!=null?array.length:void 0)){if(cb!==bailOutCb){return bailOutCb();}}return cb(array,keys);};/*
                 Author: Nicholas McCready & jfriend00
                 _async handles things asynchronous-like :), to allow the UI to be free'd to do other things
                 Code taken from http://stackoverflow.com/questions/10344498/best-way-to-iterate-over-an-array-without-blocking-the-ui

                 The design of any functionality of _async is to be like lodash/underscore and replicate it but call things
                 asynchronously underneath. Each should be sufficient for most things to be derived from.

                 Optional Asynchronous Chunking via promises.
                 */_doChunk=function doChunk(collection,chunkSizeOrDontChunk,pauseMilli,chunkCb,pauseCb,overallD,index,_keys){return getArrayAndKeys(collection,_keys,function(array,keys){var cnt,i,keepGoing,val;if(chunkSizeOrDontChunk&&chunkSizeOrDontChunk<array.length){cnt=chunkSizeOrDontChunk;}else{cnt=array.length;}i=index;keepGoing=true;while(keepGoing&&cnt--&&i<(array?array.length:i+1)){val=_getIterateeValue(collection,array,i);keepGoing=angular.isFunction(val)?true:logTryCatch(chunkCb,void 0,overallD,[val,i]);++i;}if(array){if(keepGoing&&i<array.length){index=i;if(chunkSizeOrDontChunk){if(pauseCb!=null&&_.isFunction(pauseCb)){logTryCatch(pauseCb,void 0,overallD,[]);}return $timeout(function(){return _doChunk(collection,chunkSizeOrDontChunk,pauseMilli,chunkCb,pauseCb,overallD,index,keys);},pauseMilli,false);}}else{return overallD.resolve();}}});};each=function each(collection,chunk,chunkSizeOrDontChunk,pauseCb,index,pauseMilli,_keys){var error,overallD,ret;if(chunkSizeOrDontChunk==null){chunkSizeOrDontChunk=defaultChunkSize;}if(index==null){index=0;}if(pauseMilli==null){pauseMilli=1;}ret=void 0;overallD=uiGmapPromise.defer();ret=overallD.promise;if(!pauseMilli){error='pause (delay) must be set from _async!';$log.error(error);overallD.reject(error);return ret;}return getArrayAndKeys(collection,_keys,function(){overallD.resolve();return ret;},function(array,keys){_doChunk(collection,chunkSizeOrDontChunk,pauseMilli,chunk,pauseCb,overallD,index,keys);return ret;});};map=function map(collection,iterator,chunkSizeOrDontChunk,pauseCb,index,pauseMilli,_keys){var results;results=[];return getArrayAndKeys(collection,_keys,function(){return uiGmapPromise.resolve(results);},function(array,keys){return each(collection,function(o){return results.push(iterator(o));},chunkSizeOrDontChunk,pauseCb,index,pauseMilli,keys).then(function(){return results;});});};return{each:each,map:map,managePromiseQueue:managePromiseQueue,promiseLock:managePromiseQueue,defaultChunkSize:defaultChunkSize,getArrayAndKeys:getArrayAndKeys,chunkSizeFrom:function chunkSizeFrom(fromSize,ret){if(ret==null){ret=void 0;}if(_.isNumber(fromSize)){ret=fromSize;}if(uiGmapGmapUtil.isFalse(fromSize)||fromSize===false){ret=false;}return ret;}};}]);}).call(this);;(function(){var indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item)return i;}return-1;};angular.module('uiGmapgoogle-maps.directives.api.utils').factory('uiGmapBaseObject',function(){var BaseObject,baseObjectKeywords;baseObjectKeywords=['extended','included'];BaseObject=function(){function BaseObject(){}BaseObject.extend=function(obj){var key,ref,value;for(key in obj){value=obj[key];if(indexOf.call(baseObjectKeywords,key)<0){this[key]=value;}}if((ref=obj.extended)!=null){ref.apply(this);}return this;};BaseObject.include=function(obj){var key,ref,value;for(key in obj){value=obj[key];if(indexOf.call(baseObjectKeywords,key)<0){this.prototype[key]=value;}}if((ref=obj.included)!=null){ref.apply(this);}return this;};return BaseObject;}();return BaseObject;});}).call(this);;/*
     Useful function callbacks that should be defined at later time.
     Mainly to be used for specs to verify creation / linking.

     This is to lead a common design in notifying child stuff.
     */(function(){angular.module('uiGmapgoogle-maps.directives.api.utils').factory('uiGmapChildEvents',function(){return{onChildCreation:function onChildCreation(child){}};});}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api.utils').service('uiGmapCtrlHandle',['$q',function($q){var CtrlHandle;return CtrlHandle={handle:function handle($scope,$element){$scope.$on('$destroy',function(){return CtrlHandle.handle($scope);});$scope.deferred=$q.defer();return{getScope:function getScope(){return $scope;}};},mapPromise:function mapPromise(scope,ctrl){var mapScope;mapScope=ctrl.getScope();mapScope.deferred.promise.then(function(map){return scope.map=map;});return mapScope.deferred.promise;}};}]);}).call(this);;(function(){angular.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapEventsHelper",["uiGmapLogger",function($log){var _getEventsObj,_hasEvents;_hasEvents=function _hasEvents(obj){return angular.isDefined(obj.events)&&obj.events!=null&&angular.isObject(obj.events);};_getEventsObj=function _getEventsObj(scope,model){if(_hasEvents(scope)){return scope;}if(_hasEvents(model)){return model;}};return{setEvents:function setEvents(gObject,scope,model,ignores){var eventObj;eventObj=_getEventsObj(scope,model);if(eventObj!=null){return _.compact(_.map(eventObj.events,function(eventHandler,eventName){var doIgnore;if(ignores){doIgnore=_(ignores).includes(eventName);}if(eventObj.events.hasOwnProperty(eventName)&&angular.isFunction(eventObj.events[eventName])&&!doIgnore){return google.maps.event.addListener(gObject,eventName,function(){if(!scope.$evalAsync){scope.$evalAsync=function(){};}return scope.$evalAsync(eventHandler.apply(scope,[gObject,eventName,model,arguments]));});}}));}},removeEvents:function removeEvents(listeners){var key,l;if(!listeners){return;}for(key in listeners){l=listeners[key];if(l&&listeners.hasOwnProperty(key)){google.maps.event.removeListener(l);}}}};}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api.utils').service('uiGmapFitHelper',['uiGmapLogger','$timeout',function($log,$timeout){return{fit:function fit(markersOrPoints,gMap){var bounds,everSet,key,markerOrPoint,point;if(gMap&&(markersOrPoints!=null?markersOrPoints.length:void 0)){bounds=new google.maps.LatLngBounds();everSet=false;for(key in markersOrPoints){markerOrPoint=markersOrPoints[key];if(markerOrPoint){if(!everSet){everSet=true;}point=_.isFunction(markerOrPoint.getPosition)?markerOrPoint.getPosition():markerOrPoint;}bounds.extend(point);}if(everSet){return $timeout(function(){return gMap.fitBounds(bounds);});}}}};}]);}).call(this);;/*global _:true, angular:true, google:true */(function(){angular.module('uiGmapgoogle-maps.directives.api.utils').service('uiGmapGmapUtil',['uiGmapLogger','$compile',function(Logger,$compile){var _isFalse,_isTruthy,getCoords,getLatitude,getLongitude,validateCoords;_isTruthy=function _isTruthy(value,bool,optionsArray){return value===bool||optionsArray.indexOf(value)!==-1;};_isFalse=function _isFalse(value){return _isTruthy(value,false,['false','FALSE',0,'n','N','no','NO']);};getLatitude=function getLatitude(value){if(Array.isArray(value)&&value.length===2){return value[1];}else if(angular.isDefined(value.type)&&value.type==='Point'){return value.coordinates[1];}else{return value.latitude;}};getLongitude=function getLongitude(value){if(Array.isArray(value)&&value.length===2){return value[0];}else if(angular.isDefined(value.type)&&value.type==='Point'){return value.coordinates[0];}else{return value.longitude;}};getCoords=function getCoords(value){if(!value){return;}if(value instanceof google.maps.LatLng){return value;}else if(Array.isArray(value)&&value.length===2){return new google.maps.LatLng(value[1],value[0]);}else if(angular.isDefined(value.type)&&value.type==='Point'){return new google.maps.LatLng(value.coordinates[1],value.coordinates[0]);}else{return new google.maps.LatLng(value.latitude,value.longitude);}};validateCoords=function validateCoords(coords){if(angular.isUndefined(coords)){return false;}if(_.isArray(coords)){if(coords.length===2){return true;}}else if(coords!=null&&(coords!=null?coords.type:void 0)){if(coords.type==='Point'&&_.isArray(coords.coordinates)&&coords.coordinates.length===2){return true;}}if(coords&&angular.isDefined((coords!=null?coords.latitude:void 0)&&angular.isDefined(coords!=null?coords.longitude:void 0))){return true;}return false;};return{setCoordsFromEvent:function setCoordsFromEvent(prevValue,newLatLon){if(!prevValue){return;}if(Array.isArray(prevValue)&&prevValue.length===2){prevValue[1]=newLatLon.lat();prevValue[0]=newLatLon.lng();}else if(angular.isDefined(prevValue.type)&&prevValue.type==='Point'){prevValue.coordinates[1]=newLatLon.lat();prevValue.coordinates[0]=newLatLon.lng();}else{prevValue.latitude=newLatLon.lat();prevValue.longitude=newLatLon.lng();}return prevValue;},getLabelPositionPoint:function getLabelPositionPoint(anchor){var xPos,yPos;if(anchor===void 0){return void 0;}anchor=/^([-\d\.]+)\s([-\d\.]+)$/.exec(anchor);xPos=parseFloat(anchor[1]);yPos=parseFloat(anchor[2]);if(xPos!=null&&yPos!=null){return new google.maps.Point(xPos,yPos);}},createWindowOptions:function createWindowOptions(gMarker,scope,content,defaults){var options;if(content!=null&&defaults!=null&&$compile!=null){options=angular.extend({},defaults,{content:this.buildContent(scope,defaults,content),position:defaults.position!=null?defaults.position:angular.isObject(gMarker)?gMarker.getPosition():getCoords(scope.coords)});if(gMarker!=null&&(options!=null?options.pixelOffset:void 0)==null){if(options.boxClass==null){}else{options.pixelOffset={height:0,width:-2};}}return options;}else{if(!defaults){Logger.error('infoWindow defaults not defined');if(!content){return Logger.error('infoWindow content not defined');}}else{return defaults;}}},buildContent:function buildContent(scope,defaults,content){var parsed,ret;if(defaults.content!=null){ret=defaults.content;}else{if($compile!=null){content=content.replace(/^\s+|\s+$/g,'');parsed=content===''?'':$compile(content)(scope);if(parsed.length>0){ret=parsed[0];}}else{ret=content;}}return ret;},defaultDelay:50,isTrue:function isTrue(value){return _isTruthy(value,true,['true','TRUE',1,'y','Y','yes','YES']);},isFalse:_isFalse,isFalsy:function isFalsy(value){return _isTruthy(value,false,[void 0,null])||_isFalse(value);},getCoords:getCoords,validateCoords:validateCoords,equalCoords:function equalCoords(coord1,coord2){return getLatitude(coord1)===getLatitude(coord2)&&getLongitude(coord1)===getLongitude(coord2);},validatePath:function validatePath(path){var array,i,polygon,trackMaxVertices;i=0;if(angular.isUndefined(path.type)){if(!Array.isArray(path)||path.length<2){return false;}while(i<path.length){if(!(angular.isDefined(path[i].latitude)&&angular.isDefined(path[i].longitude)||typeof path[i].lat==='function'&&typeof path[i].lng==='function')){return false;}i++;}return true;}else{if(angular.isUndefined(path.coordinates)){return false;}if(path.type==='Polygon'){if(path.coordinates[0].length<4){return false;}array=path.coordinates[0];}else if(path.type==='MultiPolygon'){trackMaxVertices={max:0,index:0};_.forEach(path.coordinates,function(polygon,index){if(polygon[0].length>this.max){this.max=polygon[0].length;return this.index=index;}},trackMaxVertices);polygon=path.coordinates[trackMaxVertices.index];array=polygon[0];if(array.length<4){return false;}}else if(path.type==='LineString'){if(path.coordinates.length<2){return false;}array=path.coordinates;}else{return false;}while(i<array.length){if(array[i].length!==2){return false;}i++;}return true;}},convertPathPoints:function convertPathPoints(path){var array,i,latlng,result,trackMaxVertices;i=0;result=new google.maps.MVCArray();if(angular.isUndefined(path.type)){while(i<path.length){latlng;if(angular.isDefined(path[i].latitude)&&angular.isDefined(path[i].longitude)){latlng=new google.maps.LatLng(path[i].latitude,path[i].longitude);}else if(typeof path[i].lat==='function'&&typeof path[i].lng==='function'){latlng=path[i];}result.push(latlng);i++;}}else{array;if(path.type==='Polygon'){array=path.coordinates[0];}else if(path.type==='MultiPolygon'){trackMaxVertices={max:0,index:0};_.forEach(path.coordinates,function(polygon,index){if(polygon[0].length>this.max){this.max=polygon[0].length;return this.index=index;}},trackMaxVertices);array=path.coordinates[trackMaxVertices.index][0];}else if(path.type==='LineString'){array=path.coordinates;}while(i<array.length){result.push(new google.maps.LatLng(array[i][1],array[i][0]));i++;}}return result;},getPath:function getPath(object,key){var obj;if(key==null||!_.isString(key)){return key;}obj=object;_.each(key.split('.'),function(value){if(obj){return obj=obj[value];}});return obj;},validateBoundPoints:function validateBoundPoints(bounds){if(angular.isUndefined(bounds.sw.latitude)||angular.isUndefined(bounds.sw.longitude)||angular.isUndefined(bounds.ne.latitude)||angular.isUndefined(bounds.ne.longitude)){return false;}return true;},convertBoundPoints:function convertBoundPoints(bounds){var result;result=new google.maps.LatLngBounds(new google.maps.LatLng(bounds.sw.latitude,bounds.sw.longitude),new google.maps.LatLng(bounds.ne.latitude,bounds.ne.longitude));return result;},fitMapBounds:function fitMapBounds(map,bounds){return map.fitBounds(bounds);}};}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api.utils').service('uiGmapIsReady',['$q','$timeout',function($q,$timeout){var _checkIfReady2,_ctr,_promises,_proms;_ctr=0;_proms=[];_promises=function _promises(){return $q.all(_proms);};_checkIfReady2=function _checkIfReady(deferred,expectedInstances,retriesLeft){return $timeout(function(){if(retriesLeft<=0){deferred.reject('Your maps are not found we have checked the maximum amount of times. :)');return;}if(_ctr!==expectedInstances){_checkIfReady2(deferred,expectedInstances,retriesLeft-1);}else{deferred.resolve(_promises());}},100);};return{spawn:function spawn(){var d;d=$q.defer();_proms.push(d.promise);_ctr+=1;return{instance:_ctr,deferred:d};},promises:_promises,instances:function instances(){return _ctr;},promise:function promise(expectedInstances,numRetries){var d;if(expectedInstances==null){expectedInstances=1;}if(numRetries==null){numRetries=50;}d=$q.defer();_checkIfReady2(d,expectedInstances,numRetries);return d.promise;},reset:function reset(){_ctr=0;_proms.length=0;},decrement:function decrement(){if(_ctr>0){_ctr-=1;}if(_proms.length){_proms.length-=1;}}};}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapLinked",["uiGmapBaseObject",function(BaseObject){var Linked;Linked=function(superClass){extend(Linked,superClass);function Linked(scope,element,attrs,ctrls){this.scope=scope;this.element=element;this.attrs=attrs;this.ctrls=ctrls;}return Linked;}(BaseObject);return Linked;}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api.utils').service('uiGmapLogger',['nemSimpleLogger',function(nemSimpleLogger){return nemSimpleLogger.spawn();}]);}).call(this);;/*global _:true, angular:true */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.utils').factory('uiGmapModelKey',['uiGmapBaseObject','uiGmapGmapUtil',function(BaseObject,GmapUtil){return function(superClass){extend(_Class,superClass);function _Class(scope1,_interface){this.scope=scope1;this["interface"]=_interface!=null?_interface:{scopeKeys:[]};this.modelsLength=bind(this.modelsLength,this);this.updateChild=bind(this.updateChild,this);this.destroy=bind(this.destroy,this);this.setChildScope=bind(this.setChildScope,this);this.getChanges=bind(this.getChanges,this);this.getProp=bind(this.getProp,this);this.setIdKey=bind(this.setIdKey,this);this.modelKeyComparison=bind(this.modelKeyComparison,this);_Class.__super__.constructor.call(this);this.defaultIdKey='id';this.idKey=void 0;}_Class.prototype.evalModelHandle=function(model,modelKey){if(model==null||modelKey==null){return;}if(modelKey==='self'){return model;}else{if(_.isFunction(modelKey)){modelKey=modelKey();}return GmapUtil.getPath(model,modelKey);}};_Class.prototype.modelKeyComparison=function(model1,model2){var coord1,coord2,hasCoords,isEqual,scope,without;hasCoords=this["interface"].scopeKeys.indexOf('coords')>=0;if(hasCoords&&this.scope.coords!=null||!hasCoords){scope=this.scope;}if(scope==null){throw'No scope set!';}if(hasCoords){coord1=this.scopeOrModelVal('coords',scope,model1);coord2=this.scopeOrModelVal('coords',scope,model2);isEqual=GmapUtil.equalCoords(coord1,coord2);if(!isEqual){return isEqual;}}without=_.without(this["interface"].scopeKeys,'coords');isEqual=_.every(without,function(_this){return function(k){var m1,m2;m1=_this.scopeOrModelVal(scope[k],scope,model1);m2=_this.scopeOrModelVal(scope[k],scope,model2);if(scope.deepComparison){return _.isEqual(m1,m2);}else{return m1===m2;}};}(this));return isEqual;};_Class.prototype.setIdKey=function(scope){return this.idKey=scope.idKey!=null?scope.idKey:this.defaultIdKey;};_Class.prototype.setVal=function(model,key,newValue){this.modelOrKey(model,key=newValue);return model;};_Class.prototype.modelOrKey=function(model,key){if(key==null){return;}if(key!=='self'){return GmapUtil.getPath(model,key);}return model;};_Class.prototype.getProp=function(propName,scope,model){return this.scopeOrModelVal(propName,scope,model);};/*
                     For the cases were watching a large object we only want to know the list of props
                     that actually changed.
                     Also we want to limit the amount of props we analyze to whitelisted props that are
                     actually tracked by scope. (should make things faster with whitelisted)
                     */_Class.prototype.getChanges=function(now,prev,whitelistedProps){var c,changes,prop;if(whitelistedProps){prev=_.pick(prev,whitelistedProps);now=_.pick(now,whitelistedProps);}changes={};prop={};c={};for(prop in now){if(!prev||prev[prop]!==now[prop]){if(_.isArray(now[prop])){changes[prop]=now[prop];}else if(_.isObject(now[prop])){c=this.getChanges(now[prop],prev?prev[prop]:null);if(!_.isEmpty(c)){changes[prop]=c;}}else{changes[prop]=now[prop];}}}return changes;};_Class.prototype.scopeOrModelVal=function(key,scope,model,doWrap){var maybeWrap,modelKey,modelProp,scopeProp;if(doWrap==null){doWrap=false;}maybeWrap=function maybeWrap(isScope,ret,doWrap){if(doWrap==null){doWrap=false;}if(doWrap){return{isScope:isScope,value:ret};}return ret;};scopeProp=_.get(scope,key);if(_.isFunction(scopeProp)){return maybeWrap(true,scopeProp(model),doWrap);}if(_.isObject(scopeProp)){return maybeWrap(true,scopeProp,doWrap);}if(!_.isString(scopeProp)){return maybeWrap(true,scopeProp,doWrap);}modelKey=scopeProp;if(!modelKey){modelProp=_.get(model,key);}else{modelProp=modelKey==='self'?model:_.get(model,modelKey);}if(_.isFunction(modelProp)){return maybeWrap(false,modelProp(),doWrap);}return maybeWrap(false,modelProp,doWrap);};_Class.prototype.setChildScope=function(keys,childScope,model){var isScopeObj,key,name,newValue;for(key in keys){name=keys[key];isScopeObj=this.scopeOrModelVal(name,childScope,model,true);if((isScopeObj!=null?isScopeObj.value:void 0)!=null){newValue=isScopeObj.value;if(newValue!==childScope[name]){childScope[name]=newValue;}}}return childScope.model=model;};_Class.prototype.onDestroy=function(scope){};_Class.prototype.destroy=function(manualOverride){var ref;if(manualOverride==null){manualOverride=false;}if(this.scope!=null&&!((ref=this.scope)!=null?ref.$$destroyed:void 0)&&(this.needToManualDestroy||manualOverride)){return this.scope.$destroy();}else{return this.clean();}};_Class.prototype.updateChild=function(child,model){if(model[this.idKey]==null){this.$log.error("Model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");return;}return child.updateModel(model);};_Class.prototype.modelsLength=function(arrayOrObjModels){var len,toCheck;if(arrayOrObjModels==null){arrayOrObjModels=void 0;}len=0;toCheck=arrayOrObjModels?arrayOrObjModels:this.scope.models;if(toCheck==null){return len;}if(angular.isArray(toCheck)||toCheck.length!=null){len=toCheck.length;}else{len=Object.keys(toCheck).length;}return len;};return _Class;}(BaseObject);}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api.utils').factory('uiGmapModelsWatcher',['uiGmapLogger','uiGmap_async','$q','uiGmapPromise',function(Logger,_async,$q,uiGmapPromise){return{didQueueInitPromise:function didQueueInitPromise(existingPiecesObj,scope){if(scope.models.length===0){_async.promiseLock(existingPiecesObj,uiGmapPromise.promiseTypes.init,null,null,function(){return uiGmapPromise.resolve();});return true;}return false;},figureOutState:function figureOutState(idKey,scope,childObjects,comparison,callBack){var adds,children,mappedScopeModelIds,removals,updates;adds=[];mappedScopeModelIds={};removals=[];updates=[];scope.models.forEach(function(m){var child;if(m[idKey]!=null){mappedScopeModelIds[m[idKey]]={};if(childObjects.get(m[idKey])==null){return adds.push(m);}else{child=childObjects.get(m[idKey]);if(!comparison(m,child.clonedModel,scope)){return updates.push({model:m,child:child});}}}else{return Logger.error(' id missing for model #{m.toString()},\ncan not use do comparison/insertion');}});children=childObjects.values();children.forEach(function(c){var id;if(c==null){Logger.error('child undefined in ModelsWatcher.');return;}if(c.model==null){Logger.error('child.model undefined in ModelsWatcher.');return;}id=c.model[idKey];if(mappedScopeModelIds[id]==null){return removals.push(c);}});return{adds:adds,removals:removals,updates:updates};}};}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api.utils').service('uiGmapPromise',['$q','$timeout','uiGmapLogger',function($q,$timeout,$log){var ExposedPromise,SniffedPromise,defer,isInProgress,isResolved,promise,promiseStatus,promiseStatuses,promiseTypes,resolve,strPromiseStatuses;promiseTypes={create:'create',update:'update',"delete":'delete',init:'init'};promiseStatuses={IN_PROGRESS:0,RESOLVED:1,REJECTED:2};strPromiseStatuses=function(){var obj;obj={};obj[""+promiseStatuses.IN_PROGRESS]='in-progress';obj[""+promiseStatuses.RESOLVED]='resolved';obj[""+promiseStatuses.REJECTED]='rejected';return obj;}();isInProgress=function isInProgress(promise){if(promise.$$state){return promise.$$state.status===promiseStatuses.IN_PROGRESS;}if(!promise.hasOwnProperty("$$v")){return true;}};isResolved=function isResolved(promise){if(promise.$$state){return promise.$$state.status===promiseStatuses.RESOLVED;}if(promise.hasOwnProperty("$$v")){return true;}};promiseStatus=function promiseStatus(status){return strPromiseStatuses[status]||'done w error';};ExposedPromise=function ExposedPromise(promise){var cancelDeferred,combined,wrapped;cancelDeferred=$q.defer();combined=$q.all([promise,cancelDeferred.promise]);wrapped=$q.defer();promise.then(cancelDeferred.resolve,function(){},function(notify){cancelDeferred.notify(notify);return wrapped.notify(notify);});combined.then(function(successes){return wrapped.resolve(successes[0]||successes[1]);},function(error){return wrapped.reject(error);});wrapped.promise.cancel=function(reason){if(reason==null){reason='canceled';}return cancelDeferred.reject(reason);};wrapped.promise.notify=function(msg){if(msg==null){msg='cancel safe';}wrapped.notify(msg);if(promise.hasOwnProperty('notify')){return promise.notify(msg);}};if(promise.promiseType!=null){wrapped.promise.promiseType=promise.promiseType;}return wrapped.promise;};SniffedPromise=function SniffedPromise(fnPromise,promiseType){return{promise:fnPromise,promiseType:promiseType};};defer=function defer(){return $q.defer();};resolve=function resolve(){var d;d=$q.defer();d.resolve.apply(void 0,arguments);return d.promise;};promise=function promise(fnToWrap){var d;if(!_.isFunction(fnToWrap)){$log.error("uiGmapPromise.promise() only accepts functions");return;}d=$q.defer();$timeout(function(){var result;result=fnToWrap();return d.resolve(result);});return d.promise;};return{defer:defer,promise:promise,resolve:resolve,promiseTypes:promiseTypes,isInProgress:isInProgress,isResolved:isResolved,promiseStatus:promiseStatus,ExposedPromise:ExposedPromise,SniffedPromise:SniffedPromise};}]);}).call(this);;(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};};angular.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapPropMap",function(){/*
             Simple Object Map with a length property to make it easy to track length/size
             */var PropMap;return PropMap=function(){function PropMap(){this.removeAll=bind(this.removeAll,this);this.slice=bind(this.slice,this);this.push=bind(this.push,this);this.keys=bind(this.keys,this);this.values=bind(this.values,this);this.remove=bind(this.remove,this);this.put=bind(this.put,this);this.stateChanged=bind(this.stateChanged,this);this.get=bind(this.get,this);this.length=0;this.dict={};this.didValsStateChange=false;this.didKeysStateChange=false;this.allVals=[];this.allKeys=[];}PropMap.prototype.get=function(key){return this.dict[key];};PropMap.prototype.stateChanged=function(){this.didValsStateChange=true;return this.didKeysStateChange=true;};PropMap.prototype.put=function(key,value){if(this.get(key)==null){this.length++;}this.stateChanged();return this.dict[key]=value;};PropMap.prototype.remove=function(key,isSafe){var value;if(isSafe==null){isSafe=false;}if(isSafe&&!this.get(key)){return void 0;}value=this.dict[key];delete this.dict[key];this.length--;this.stateChanged();return value;};PropMap.prototype.valuesOrKeys=function(str){var keys,vals;if(str==null){str='Keys';}if(!this["did"+str+"StateChange"]){return this['all'+str];}vals=[];keys=[];_.each(this.dict,function(v,k){vals.push(v);return keys.push(k);});this.didKeysStateChange=false;this.didValsStateChange=false;this.allVals=vals;this.allKeys=keys;return this['all'+str];};PropMap.prototype.values=function(){return this.valuesOrKeys('Vals');};PropMap.prototype.keys=function(){return this.valuesOrKeys();};PropMap.prototype.push=function(obj,key){if(key==null){key="key";}return this.put(obj[key],obj);};PropMap.prototype.slice=function(){return this.keys().map(function(_this){return function(k){return _this.remove(k);};}(this));};PropMap.prototype.removeAll=function(){return this.slice();};PropMap.prototype.each=function(cb){return _.each(this.dict,function(v,k){return cb(v);});};PropMap.prototype.map=function(cb){return _.map(this.dict,function(v,k){return cb(v);});};return PropMap;}();});}).call(this);;/*globals angular,_ */(function(){angular.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapPropertyAction",["uiGmapLogger",function(Logger){var PropertyAction;PropertyAction=function PropertyAction(setterFn){this.setIfChange=function(callingKey){return function(newVal,oldVal){if(!_.isEqual(oldVal,newVal)){return setterFn(callingKey,newVal);}};};this.sic=this.setIfChange;return this;};return PropertyAction;}]);}).call(this);;(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};};angular.module('uiGmapgoogle-maps.directives.api.managers').factory('uiGmapClustererMarkerManager',['uiGmapLogger','uiGmapFitHelper','uiGmapPropMap','uiGmapEventsHelper',function($log,FitHelper,PropMap,EventsHelper){var ClustererMarkerManager;ClustererMarkerManager=function(){ClustererMarkerManager.type='ClustererMarkerManager';function ClustererMarkerManager(gMap,opt_markers,opt_options,opt_events){if(opt_markers==null){opt_markers={};}this.opt_options=opt_options!=null?opt_options:{};this.opt_events=opt_events;this.getGMarkers=bind(this.getGMarkers,this);this.fit=bind(this.fit,this);this.destroy=bind(this.destroy,this);this.attachEvents=bind(this.attachEvents,this);this.clear=bind(this.clear,this);this.draw=bind(this.draw,this);this.removeMany=bind(this.removeMany,this);this.remove=bind(this.remove,this);this.addMany=bind(this.addMany,this);this.update=bind(this.update,this);this.add=bind(this.add,this);this.type=ClustererMarkerManager.type;this.clusterer=new NgMapMarkerClusterer(gMap,opt_markers,this.opt_options);this.propMapGMarkers=new PropMap();this.attachEvents(this.opt_events,'opt_events');this.clusterer.setIgnoreHidden(true);this.noDrawOnSingleAddRemoves=true;$log.info(this);}ClustererMarkerManager.prototype.checkKey=function(gMarker){var msg;if(gMarker.key==null){msg='gMarker.key undefined and it is REQUIRED!!';return $log.error(msg);}};ClustererMarkerManager.prototype.add=function(gMarker){this.checkKey(gMarker);this.clusterer.addMarker(gMarker,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.put(gMarker.key,gMarker);return this.checkSync();};ClustererMarkerManager.prototype.update=function(gMarker){this.remove(gMarker);return this.add(gMarker);};ClustererMarkerManager.prototype.addMany=function(gMarkers){return gMarkers.forEach(function(_this){return function(gMarker){return _this.add(gMarker);};}(this));};ClustererMarkerManager.prototype.remove=function(gMarker){var exists;this.checkKey(gMarker);exists=this.propMapGMarkers.get(gMarker.key);if(exists){this.clusterer.removeMarker(gMarker,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.remove(gMarker.key);}return this.checkSync();};ClustererMarkerManager.prototype.removeMany=function(gMarkers){return gMarkers.forEach(function(_this){return function(gMarker){return _this.remove(gMarker);};}(this));};ClustererMarkerManager.prototype.draw=function(){return this.clusterer.repaint();};ClustererMarkerManager.prototype.clear=function(){this.removeMany(this.getGMarkers());return this.clusterer.repaint();};ClustererMarkerManager.prototype.attachEvents=function(options,optionsName){var eventHandler,eventName,results;this.listeners=[];if(angular.isDefined(options)&&options!=null&&angular.isObject(options)){results=[];for(eventName in options){eventHandler=options[eventName];if(options.hasOwnProperty(eventName)&&angular.isFunction(options[eventName])){$log.info(optionsName+": Attaching event: "+eventName+" to clusterer");results.push(this.listeners.push(google.maps.event.addListener(this.clusterer,eventName,options[eventName])));}else{results.push(void 0);}}return results;}};ClustererMarkerManager.prototype.clearEvents=function(){EventsHelper.removeEvents(this.listeners);return this.listeners=[];};ClustererMarkerManager.prototype.destroy=function(){this.clearEvents();return this.clear();};ClustererMarkerManager.prototype.fit=function(){return FitHelper.fit(this.getGMarkers(),this.clusterer.getMap());};ClustererMarkerManager.prototype.getGMarkers=function(){return this.clusterer.getMarkers().values();};ClustererMarkerManager.prototype.checkSync=function(){};return ClustererMarkerManager;}();return ClustererMarkerManager;}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api.managers').service('uiGmapGoogleMapObjectManager',[function(){var _availableInstances,_usedInstances;_availableInstances=[];_usedInstances=[];return{createMapInstance:function createMapInstance(parentElement,options){var instance;instance=null;if(_availableInstances.length===0){instance=new google.maps.Map(parentElement,options);_usedInstances.push(instance);}else{instance=_availableInstances.pop();angular.element(parentElement).append(instance.getDiv());instance.setOptions(options);_usedInstances.push(instance);}return instance;},recycleMapInstance:function recycleMapInstance(instance){var index;index=_usedInstances.indexOf(instance);if(index<0){throw new Error('Expected map instance to be a previously used instance');}_usedInstances.splice(index,1);return _availableInstances.push(instance);}};}]);}).call(this);;(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};};angular.module("uiGmapgoogle-maps.directives.api.managers").factory("uiGmapMarkerManager",["uiGmapLogger","uiGmapFitHelper","uiGmapPropMap",function(Logger,FitHelper,PropMap){var MarkerManager;MarkerManager=function(){MarkerManager.type='MarkerManager';function MarkerManager(gMap,opt_markers,opt_options){this.getGMarkers=bind(this.getGMarkers,this);this.fit=bind(this.fit,this);this.handleOptDraw=bind(this.handleOptDraw,this);this.clear=bind(this.clear,this);this.destroy=bind(this.destroy,this);this.draw=bind(this.draw,this);this.removeMany=bind(this.removeMany,this);this.remove=bind(this.remove,this);this.addMany=bind(this.addMany,this);this.update=bind(this.update,this);this.add=bind(this.add,this);this.type=MarkerManager.type;this.gMap=gMap;this.gMarkers=new PropMap();this.$log=Logger;this.$log.info(this);}MarkerManager.prototype.add=function(gMarker,optDraw){var exists,msg;if(optDraw==null){optDraw=true;}if(gMarker.key==null){msg="gMarker.key undefined and it is REQUIRED!!";Logger.error(msg);throw msg;}exists=this.gMarkers.get(gMarker.key);if(!exists){this.handleOptDraw(gMarker,optDraw,true);return this.gMarkers.put(gMarker.key,gMarker);}};MarkerManager.prototype.update=function(gMarker,optDraw){if(optDraw==null){optDraw=true;}this.remove(gMarker,optDraw);return this.add(gMarker,optDraw);};MarkerManager.prototype.addMany=function(gMarkers){return gMarkers.forEach(function(_this){return function(gMarker){return _this.add(gMarker);};}(this));};MarkerManager.prototype.remove=function(gMarker,optDraw){if(optDraw==null){optDraw=true;}this.handleOptDraw(gMarker,optDraw,false);if(this.gMarkers.get(gMarker.key)){return this.gMarkers.remove(gMarker.key);}};MarkerManager.prototype.removeMany=function(gMarkers){return gMarkers.forEach(function(_this){return function(marker){return _this.remove(marker);};}(this));};MarkerManager.prototype.draw=function(){var deletes;deletes=[];this.gMarkers.each(function(_this){return function(gMarker){if(!gMarker.isDrawn){if(gMarker.doAdd){gMarker.setMap(_this.gMap);return gMarker.isDrawn=true;}else{return deletes.push(gMarker);}}};}(this));return deletes.forEach(function(_this){return function(gMarker){gMarker.isDrawn=false;return _this.remove(gMarker,true);};}(this));};MarkerManager.prototype.destroy=function(){return this.clear();};MarkerManager.prototype.clear=function(){this.gMarkers.each(function(gMarker){return gMarker.setMap(null);});delete this.gMarkers;return this.gMarkers=new PropMap();};MarkerManager.prototype.handleOptDraw=function(gMarker,optDraw,doAdd){if(optDraw===true){if(doAdd){gMarker.setMap(this.gMap);}else{gMarker.setMap(null);}return gMarker.isDrawn=true;}else{gMarker.isDrawn=false;return gMarker.doAdd=doAdd;}};MarkerManager.prototype.fit=function(){return FitHelper.fit(this.getGMarkers(),this.gMap);};MarkerManager.prototype.getGMarkers=function(){return this.gMarkers.values();};return MarkerManager;}();return MarkerManager;}]);}).call(this);;(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};};angular.module('uiGmapgoogle-maps.directives.api.managers').factory('uiGmapSpiderfierMarkerManager',['uiGmapLogger','uiGmapFitHelper','uiGmapPropMap','uiGmapMarkerSpiderfier',function($log,FitHelper,PropMap,MarkerSpiderfier){var SpiderfierMarkerManager;return SpiderfierMarkerManager=function(){SpiderfierMarkerManager.type='SpiderfierMarkerManager';function SpiderfierMarkerManager(gMap,opt_markers,opt_options,opt_events,scope){if(opt_markers==null){opt_markers={};}this.opt_options=opt_options!=null?opt_options:{};this.opt_events=opt_events;this.scope=scope;this.isSpiderfied=bind(this.isSpiderfied,this);this.getGMarkers=bind(this.getGMarkers,this);this.fit=bind(this.fit,this);this.destroy=bind(this.destroy,this);this.attachEvents=bind(this.attachEvents,this);this.clear=bind(this.clear,this);this.removeMany=bind(this.removeMany,this);this.remove=bind(this.remove,this);this.addMany=bind(this.addMany,this);this.update=bind(this.update,this);this.add=bind(this.add,this);this.type=SpiderfierMarkerManager.type;this.markerSpiderfier=new MarkerSpiderfier(gMap,this.opt_options);this.propMapGMarkers=new PropMap();this.attachEvents(this.opt_events,'opt_events');this.noDrawOnSingleAddRemoves=true;$log.info(this);}SpiderfierMarkerManager.prototype.checkKey=function(gMarker){var msg;if(gMarker.key==null){msg='gMarker.key undefined and it is REQUIRED!!';return $log.error(msg);}};SpiderfierMarkerManager.prototype.add=function(gMarker){gMarker.setMap(this.markerSpiderfier.map);this.checkKey(gMarker);this.markerSpiderfier.addMarker(gMarker,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.put(gMarker.key,gMarker);return this.checkSync();};SpiderfierMarkerManager.prototype.update=function(gMarker){this.remove(gMarker);return this.add(gMarker);};SpiderfierMarkerManager.prototype.addMany=function(gMarkers){return gMarkers.forEach(function(_this){return function(gMarker){return _this.add(gMarker);};}(this));};SpiderfierMarkerManager.prototype.remove=function(gMarker){var exists;this.checkKey(gMarker);exists=this.propMapGMarkers.get(gMarker.key);if(exists){gMarker.setMap(null);this.markerSpiderfier.removeMarker(gMarker,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.remove(gMarker.key);}return this.checkSync();};SpiderfierMarkerManager.prototype.removeMany=function(gMarkers){return gMarkers.forEach(function(_this){return function(gMarker){return _this.remove(gMarker);};}(this));};SpiderfierMarkerManager.prototype.draw=function(){};SpiderfierMarkerManager.prototype.clear=function(){return this.removeMany(this.getGMarkers());};SpiderfierMarkerManager.prototype.attachEvents=function(options,optionsName){if(angular.isDefined(options)&&options!=null&&angular.isObject(options)){return _.each(options,function(_this){return function(eventHandler,eventName){if(options.hasOwnProperty(eventName)&&angular.isFunction(options[eventName])){$log.info(optionsName+": Attaching event: "+eventName+" to markerSpiderfier");return _this.markerSpiderfier.addListener(eventName,function(){if(eventName==='spiderfy'||eventName==='unspiderfy'){return _this.scope.$evalAsync(options[eventName].apply(options,arguments));}else{return _this.scope.$evalAsync(options[eventName].apply(options,[arguments[0],eventName,arguments[0].model,arguments]));}});}};}(this));}};SpiderfierMarkerManager.prototype.clearEvents=function(options,optionsName){var eventHandler,eventName;if(angular.isDefined(options)&&options!=null&&angular.isObject(options)){for(eventName in options){eventHandler=options[eventName];if(options.hasOwnProperty(eventName)&&angular.isFunction(options[eventName])){$log.info(optionsName+": Clearing event: "+eventName+" to markerSpiderfier");this.markerSpiderfier.clearListeners(eventName);}}}};SpiderfierMarkerManager.prototype.destroy=function(){this.clearEvents(this.opt_events,'opt_events');return this.clear();};SpiderfierMarkerManager.prototype.fit=function(){return FitHelper.fit(this.getGMarkers(),this.markerSpiderfier.map);};SpiderfierMarkerManager.prototype.getGMarkers=function(){return this.markerSpiderfier.getMarkers();};SpiderfierMarkerManager.prototype.isSpiderfied=function(){return _.find(this.getGMarkers(),function(gMarker){return(gMarker!=null?gMarker._omsData:void 0)!=null;});};SpiderfierMarkerManager.prototype.checkSync=function(){};return SpiderfierMarkerManager;}();}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps').factory('uiGmapadd-events',['$timeout',function($timeout){var addEvent,addEvents;addEvent=function addEvent(target,eventName,handler){return google.maps.event.addListener(target,eventName,function(){handler.apply(this,arguments);return $timeout(function(){},true);});};addEvents=function addEvents(target,eventName,handler){var remove;if(handler){return addEvent(target,eventName,handler);}remove=[];angular.forEach(eventName,function(_handler,key){return remove.push(addEvent(target,key,_handler));});return function(){angular.forEach(remove,function(listener){return google.maps.event.removeListener(listener);});return remove=null;};};return addEvents;}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps').factory('uiGmaparray-sync',['uiGmapadd-events',function(mapEvents){return function(mapArray,scope,pathEval,pathChangedFn){var geojsonArray,geojsonHandlers,geojsonWatcher,isSetFromScope,legacyHandlers,legacyWatcher,mapArrayListener,scopePath,watchListener;isSetFromScope=false;scopePath=scope.$eval(pathEval);if(!scope["static"]){legacyHandlers={set_at:function set_at(index){var value;if(isSetFromScope){return;}value=mapArray.getAt(index);if(!value){return;}if(!value.lng||!value.lat){return scopePath[index]=value;}else{scopePath[index].latitude=value.lat();return scopePath[index].longitude=value.lng();}},insert_at:function insert_at(index){var value;if(isSetFromScope){return;}value=mapArray.getAt(index);if(!value){return;}if(!value.lng||!value.lat){return scopePath.splice(index,0,value);}else{return scopePath.splice(index,0,{latitude:value.lat(),longitude:value.lng()});}},remove_at:function remove_at(index){if(isSetFromScope){return;}return scopePath.splice(index,1);}};geojsonArray;if(scopePath.type==='Polygon'){geojsonArray=scopePath.coordinates[0];}else if(scopePath.type==='LineString'){geojsonArray=scopePath.coordinates;}geojsonHandlers={set_at:function set_at(index){var value;if(isSetFromScope){return;}value=mapArray.getAt(index);if(!(value&&value.lng&&value.lat)){return;}geojsonArray[index][1]=value.lat();return geojsonArray[index][0]=value.lng();},insert_at:function insert_at(index){var value;if(isSetFromScope){return;}value=mapArray.getAt(index);if(!value){return;}if(!value.lng||!value.lat){return;}return geojsonArray.splice(index,0,[value.lng(),value.lat()]);},remove_at:function remove_at(index){if(isSetFromScope){return;}return geojsonArray.splice(index,1);}};mapArrayListener=mapEvents(mapArray,angular.isUndefined(scopePath.type)?legacyHandlers:geojsonHandlers);}legacyWatcher=function legacyWatcher(newPath){var changed,i,l,newLength,newValue,oldArray,oldLength,oldValue;isSetFromScope=true;oldArray=mapArray;changed=false;if(newPath){i=0;oldLength=oldArray.getLength();newLength=newPath.length;l=Math.min(oldLength,newLength);newValue=void 0;while(i<l){oldValue=oldArray.getAt(i);newValue=newPath[i];if(typeof newValue.equals==='function'){if(!newValue.equals(oldValue)){oldArray.setAt(i,newValue);changed=true;}}else{if(oldValue.lat()!==newValue.latitude||oldValue.lng()!==newValue.longitude){oldArray.setAt(i,new google.maps.LatLng(newValue.latitude,newValue.longitude));changed=true;}}i++;}while(i<newLength){newValue=newPath[i];if(typeof newValue.lat==='function'&&typeof newValue.lng==='function'){oldArray.push(newValue);}else{oldArray.push(new google.maps.LatLng(newValue.latitude,newValue.longitude));}changed=true;i++;}while(i<oldLength){oldArray.pop();changed=true;i++;}}isSetFromScope=false;if(changed){return pathChangedFn(oldArray);}};geojsonWatcher=function geojsonWatcher(newPath){var array,changed,i,l,newLength,newValue,oldArray,oldLength,oldValue;isSetFromScope=true;oldArray=mapArray;changed=false;if(newPath){array;if(scopePath.type==='Polygon'){array=newPath.coordinates[0];}else if(scopePath.type==='LineString'){array=newPath.coordinates;}i=0;oldLength=oldArray.getLength();newLength=array.length;l=Math.min(oldLength,newLength);newValue=void 0;while(i<l){oldValue=oldArray.getAt(i);newValue=array[i];if(oldValue.lat()!==newValue[1]||oldValue.lng()!==newValue[0]){oldArray.setAt(i,new google.maps.LatLng(newValue[1],newValue[0]));changed=true;}i++;}while(i<newLength){newValue=array[i];oldArray.push(new google.maps.LatLng(newValue[1],newValue[0]));changed=true;i++;}while(i<oldLength){oldArray.pop();changed=true;i++;}}isSetFromScope=false;if(changed){return pathChangedFn(oldArray);}};watchListener;if(!scope["static"]){if(angular.isUndefined(scopePath.type)){watchListener=scope.$watchCollection(pathEval,legacyWatcher);}else{watchListener=scope.$watch(pathEval,geojsonWatcher,true);}}return function(){if(mapArrayListener){mapArrayListener();mapArrayListener=null;}if(watchListener){watchListener();return watchListener=null;}};};}]);}).call(this);;(function(){angular.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapChromeFixes",['$timeout',function($timeout){return{maybeRepaint:function maybeRepaint(el){if(el){el.style.opacity=0.9;return $timeout(function(){return el.style.opacity=1;});}}};}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps').service('uiGmapObjectIterators',function(){var _ignores,_iterators,_slapForEach,_slapMap;_ignores=['length','forEach','map'];_iterators=[];_slapForEach=function _slapForEach(object){object.forEach=function(cb){return _.each(_.omit(object,_ignores),function(val){if(!_.isFunction(val)){return cb(val);}});};return object;};_iterators.push(_slapForEach);_slapMap=function _slapMap(object){object.map=function(cb){return _.map(_.omit(object,_ignores),function(val){if(!_.isFunction(val)){return cb(val);}});};return object;};_iterators.push(_slapMap);return{slapMap:_slapMap,slapForEach:_slapForEach,slapAll:function slapAll(object){_iterators.forEach(function(it){return it(object);});return object;}};});}).call(this);;(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.options.builders').service('uiGmapCommonOptionsBuilder',['uiGmapBaseObject','uiGmapLogger','uiGmapModelKey',function(BaseObject,$log,ModelKey){var CommonOptionsBuilder;return CommonOptionsBuilder=function(superClass){extend(CommonOptionsBuilder,superClass);function CommonOptionsBuilder(){this.watchProps=bind(this.watchProps,this);this.buildOpts=bind(this.buildOpts,this);return CommonOptionsBuilder.__super__.constructor.apply(this,arguments);}CommonOptionsBuilder.prototype.props=['clickable','draggable','editable','visible',{prop:'stroke',isColl:true}];CommonOptionsBuilder.prototype.getCorrectModel=function(scope){if(angular.isDefined(scope!=null?scope.model:void 0)){return scope.model;}else{return scope;}};CommonOptionsBuilder.prototype.buildOpts=function(customOpts,cachedEval,forEachOpts){var model,opts,stroke;if(customOpts==null){customOpts={};}if(forEachOpts==null){forEachOpts={};}if(!this.scope){$log.error('this.scope not defined in CommonOptionsBuilder can not buildOpts');return;}if(!this.gMap){$log.error('this.map not defined in CommonOptionsBuilder can not buildOpts');return;}model=this.getCorrectModel(this.scope);stroke=this.scopeOrModelVal('stroke',this.scope,model);opts=angular.extend(customOpts,this.DEFAULTS,{map:this.gMap,strokeColor:stroke!=null?stroke.color:void 0,strokeOpacity:stroke!=null?stroke.opacity:void 0,strokeWeight:stroke!=null?stroke.weight:void 0});angular.forEach(angular.extend(forEachOpts,{clickable:true,draggable:false,editable:false,"static":false,fit:false,visible:true,zIndex:0,icons:[]}),function(_this){return function(defaultValue,key){var val;val=cachedEval?cachedEval[key]:_this.scopeOrModelVal(key,_this.scope,model);if(angular.isUndefined(val)){return opts[key]=defaultValue;}else{return opts[key]=model[key];}};}(this));if(opts["static"]){opts.editable=false;}return opts;};CommonOptionsBuilder.prototype.watchProps=function(props){if(props==null){props=this.props;}return props.forEach(function(_this){return function(prop){if(_this.attrs[prop]!=null||_this.attrs[prop!=null?prop.prop:void 0]!=null){if(prop!=null?prop.isColl:void 0){return _this.scope.$watchCollection(prop.prop,_this.setMyOptions);}else{return _this.scope.$watch(prop,_this.setMyOptions);}}};}(this));};return CommonOptionsBuilder;}(ModelKey);}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.options.builders').factory('uiGmapPolylineOptionsBuilder',['uiGmapCommonOptionsBuilder',function(CommonOptionsBuilder){var PolylineOptionsBuilder;return PolylineOptionsBuilder=function(superClass){extend(PolylineOptionsBuilder,superClass);function PolylineOptionsBuilder(){return PolylineOptionsBuilder.__super__.constructor.apply(this,arguments);}PolylineOptionsBuilder.prototype.buildOpts=function(pathPoints,cachedEval){return PolylineOptionsBuilder.__super__.buildOpts.call(this,{path:pathPoints},cachedEval,{geodesic:false});};return PolylineOptionsBuilder;}(CommonOptionsBuilder);}]).factory('uiGmapShapeOptionsBuilder',['uiGmapCommonOptionsBuilder',function(CommonOptionsBuilder){var ShapeOptionsBuilder;return ShapeOptionsBuilder=function(superClass){extend(ShapeOptionsBuilder,superClass);function ShapeOptionsBuilder(){return ShapeOptionsBuilder.__super__.constructor.apply(this,arguments);}ShapeOptionsBuilder.prototype.buildOpts=function(customOpts,cachedEval,forEachOpts){var fill,model;model=this.getCorrectModel(this.scope);fill=cachedEval?cachedEval['fill']:this.scopeOrModelVal('fill',this.scope,model);customOpts=angular.extend(customOpts,{fillColor:fill!=null?fill.color:void 0,fillOpacity:fill!=null?fill.opacity:void 0});return ShapeOptionsBuilder.__super__.buildOpts.call(this,customOpts,cachedEval,forEachOpts);};return ShapeOptionsBuilder;}(CommonOptionsBuilder);}]).factory('uiGmapPolygonOptionsBuilder',['uiGmapShapeOptionsBuilder',function(ShapeOptionsBuilder){var PolygonOptionsBuilder;return PolygonOptionsBuilder=function(superClass){extend(PolygonOptionsBuilder,superClass);function PolygonOptionsBuilder(){return PolygonOptionsBuilder.__super__.constructor.apply(this,arguments);}PolygonOptionsBuilder.prototype.buildOpts=function(pathPoints,cachedEval){return PolygonOptionsBuilder.__super__.buildOpts.call(this,{path:pathPoints},cachedEval,{geodesic:false});};return PolygonOptionsBuilder;}(ShapeOptionsBuilder);}]).factory('uiGmapRectangleOptionsBuilder',['uiGmapShapeOptionsBuilder',function(ShapeOptionsBuilder){var RectangleOptionsBuilder;return RectangleOptionsBuilder=function(superClass){extend(RectangleOptionsBuilder,superClass);function RectangleOptionsBuilder(){return RectangleOptionsBuilder.__super__.constructor.apply(this,arguments);}RectangleOptionsBuilder.prototype.buildOpts=function(bounds,cachedEval){return RectangleOptionsBuilder.__super__.buildOpts.call(this,{bounds:bounds},cachedEval);};return RectangleOptionsBuilder;}(ShapeOptionsBuilder);}]).factory('uiGmapCircleOptionsBuilder',['uiGmapShapeOptionsBuilder',function(ShapeOptionsBuilder){var CircleOptionsBuilder;return CircleOptionsBuilder=function(superClass){extend(CircleOptionsBuilder,superClass);function CircleOptionsBuilder(){return CircleOptionsBuilder.__super__.constructor.apply(this,arguments);}CircleOptionsBuilder.prototype.buildOpts=function(center,radius,cachedEval){return CircleOptionsBuilder.__super__.buildOpts.call(this,{center:center,radius:radius},cachedEval);};return CircleOptionsBuilder;}(ShapeOptionsBuilder);}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api.options').service('uiGmapMarkerOptions',['uiGmapLogger','uiGmapGmapUtil',function($log,GmapUtil){return _.extend(GmapUtil,{createOptions:function createOptions(coords,icon,defaults,map){var opts;if(defaults==null){defaults={};}opts=angular.extend({},defaults,{position:defaults.position!=null?defaults.position:GmapUtil.getCoords(coords),visible:defaults.visible!=null?defaults.visible:GmapUtil.validateCoords(coords)});if(defaults.icon!=null||icon!=null){opts=angular.extend(opts,{icon:defaults.icon!=null?defaults.icon:icon});}if(map!=null){opts.map=map;}return opts;},isLabel:function isLabel(options){if(options==null){return false;}return options.labelContent!=null||options.labelAnchor!=null||options.labelClass!=null||options.labelStyle!=null||options.labelVisible!=null;}});}]);}).call(this);;/*global _,angular */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapBasePolyChildModel',['uiGmapLogger','$timeout','uiGmaparray-sync','uiGmapGmapUtil','uiGmapEventsHelper',function($log,$timeout,arraySync,GmapUtil,EventsHelper){return function(Builder,gFactory){var BasePolyChildModel;return BasePolyChildModel=function(superClass){extend(BasePolyChildModel,superClass);BasePolyChildModel.include(GmapUtil);function BasePolyChildModel(arg){var create,gObjectChangeCb,ref;this.scope=arg.scope,this.attrs=arg.attrs,this.gMap=arg.gMap,this.defaults=arg.defaults,this.model=arg.model,gObjectChangeCb=arg.gObjectChangeCb,this.isScopeModel=(ref=arg.isScopeModel)!=null?ref:false;this.clean=bind(this.clean,this);if(this.isScopeModel){this.clonedModel=_.clone(this.model,true);}this.isDragging=false;this.internalEvents={dragend:function(_this){return function(){return _.defer(function(){return _this.isDragging=false;});};}(this),dragstart:function(_this){return function(){return _this.isDragging=true;};}(this)};create=function(_this){return function(){var maybeCachedEval;if(_this.isDragging){return;}_this.pathPoints=_this.convertPathPoints(_this.scope.path);if(_this.gObject!=null){_this.clean();}if(_this.scope.model!=null){maybeCachedEval=_this.scope;}if(_this.pathPoints.length>0){_this.gObject=gFactory(_this.buildOpts(_this.pathPoints,maybeCachedEval));}if(_this.gObject){arraySync(_this.gObject.getPath(),_this.scope,'path',function(pathPoints){_this.pathPoints=pathPoints;if(gObjectChangeCb!=null){return gObjectChangeCb();}});if(angular.isDefined(_this.scope.events)&&angular.isObject(_this.scope.events)){_this.listeners=_this.model?EventsHelper.setEvents(_this.gObject,_this.scope,_this.model):EventsHelper.setEvents(_this.gObject,_this.scope,_this.scope);}return _this.internalListeners=_this.model?EventsHelper.setEvents(_this.gObject,{events:_this.internalEvents},_this.model):EventsHelper.setEvents(_this.gObject,{events:_this.internalEvents},_this.scope);}};}(this);create();this.scope.$watch('path',function(_this){return function(newValue,oldValue){if(!_.isEqual(newValue,oldValue)||!_this.gObject){return create();}};}(this),true);if(!this.scope["static"]&&angular.isDefined(this.scope.editable)){this.scope.$watch('editable',function(_this){return function(newValue,oldValue){var ref1;if(newValue!==oldValue){newValue=!_this.isFalse(newValue);return(ref1=_this.gObject)!=null?ref1.setEditable(newValue):void 0;}};}(this),true);}if(angular.isDefined(this.scope.draggable)){this.scope.$watch('draggable',function(_this){return function(newValue,oldValue){var ref1;if(newValue!==oldValue){newValue=!_this.isFalse(newValue);return(ref1=_this.gObject)!=null?ref1.setDraggable(newValue):void 0;}};}(this),true);}if(angular.isDefined(this.scope.visible)){this.scope.$watch('visible',function(_this){return function(newValue,oldValue){var ref1;if(newValue!==oldValue){newValue=!_this.isFalse(newValue);}return(ref1=_this.gObject)!=null?ref1.setVisible(newValue):void 0;};}(this),true);}if(angular.isDefined(this.scope.geodesic)){this.scope.$watch('geodesic',function(_this){return function(newValue,oldValue){var ref1;if(newValue!==oldValue){newValue=!_this.isFalse(newValue);return(ref1=_this.gObject)!=null?ref1.setOptions(_this.buildOpts(_this.gObject.getPath())):void 0;}};}(this),true);}if(angular.isDefined(this.scope.stroke)&&angular.isDefined(this.scope.stroke.weight)){this.scope.$watch('stroke.weight',function(_this){return function(newValue,oldValue){var ref1;if(newValue!==oldValue){return(ref1=_this.gObject)!=null?ref1.setOptions(_this.buildOpts(_this.gObject.getPath())):void 0;}};}(this),true);}if(angular.isDefined(this.scope.stroke)&&angular.isDefined(this.scope.stroke.color)){this.scope.$watch('stroke.color',function(_this){return function(newValue,oldValue){var ref1;if(newValue!==oldValue){return(ref1=_this.gObject)!=null?ref1.setOptions(_this.buildOpts(_this.gObject.getPath())):void 0;}};}(this),true);}if(angular.isDefined(this.scope.stroke)&&angular.isDefined(this.scope.stroke.opacity)){this.scope.$watch('stroke.opacity',function(_this){return function(newValue,oldValue){var ref1;if(newValue!==oldValue){return(ref1=_this.gObject)!=null?ref1.setOptions(_this.buildOpts(_this.gObject.getPath())):void 0;}};}(this),true);}if(angular.isDefined(this.scope.icons)){this.scope.$watch('icons',function(_this){return function(newValue,oldValue){var ref1;if(newValue!==oldValue){return(ref1=_this.gObject)!=null?ref1.setOptions(_this.buildOpts(_this.gObject.getPath())):void 0;}};}(this),true);}this.scope.$on('$destroy',function(_this){return function(){_this.clean();return _this.scope=null;};}(this));if(angular.isDefined(this.scope.fill)&&angular.isDefined(this.scope.fill.color)){this.scope.$watch('fill.color',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){return _this.gObject.setOptions(_this.buildOpts(_this.gObject.getPath()));}};}(this));}if(angular.isDefined(this.scope.fill)&&angular.isDefined(this.scope.fill.opacity)){this.scope.$watch('fill.opacity',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){return _this.gObject.setOptions(_this.buildOpts(_this.gObject.getPath()));}};}(this));}if(angular.isDefined(this.scope.zIndex)){this.scope.$watch('zIndex',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){return _this.gObject.setOptions(_this.buildOpts(_this.gObject.getPath()));}};}(this));}}BasePolyChildModel.prototype.clean=function(){var ref;EventsHelper.removeEvents(this.listeners);EventsHelper.removeEvents(this.internalListeners);if((ref=this.gObject)!=null){ref.setMap(null);}return this.gObject=null;};return BasePolyChildModel;}(Builder);};}]);}).call(this);;/*
     @authors
     Nicholas McCready - https://twitter.com/nmccready
     Original idea from: http://stackoverflow.com/questions/22758950/google-map-drawing-freehand  , &
     http://jsfiddle.net/YsQdh/88/
     */(function(){angular.module('uiGmapgoogle-maps.directives.api.models.child').factory('uiGmapDrawFreeHandChildModel',['uiGmapLogger','$q',function($log,$q){var drawFreeHand,freeHandMgr;drawFreeHand=function drawFreeHand(map,polys,done){var move,poly;poly=new google.maps.Polyline({map:map,clickable:false});move=google.maps.event.addListener(map,'mousemove',function(e){return poly.getPath().push(e.latLng);});google.maps.event.addListenerOnce(map,'mouseup',function(e){var path;google.maps.event.removeListener(move);path=poly.getPath();poly.setMap(null);polys.push(new google.maps.Polygon({map:map,path:path}));poly=null;google.maps.event.clearListeners(map.getDiv(),'mousedown');return done();});return void 0;};freeHandMgr=function freeHandMgr(map1,scope){var disableMap,enableMap;this.map=map1;disableMap=function(_this){return function(){var mapOptions;mapOptions={draggable:false,disableDefaultUI:true,scrollwheel:false,disableDoubleClickZoom:false};$log.info('disabling map move');return _this.map.setOptions(mapOptions);};}(this);enableMap=function(_this){return function(){var mapOptions,ref;mapOptions={draggable:true,disableDefaultUI:false,scrollwheel:true,disableDoubleClickZoom:true};if((ref=_this.deferred)!=null){ref.resolve();}return _.defer(function(){return _this.map.setOptions(_.extend(mapOptions,scope.options));});};}(this);this.engage=function(_this){return function(polys1){_this.polys=polys1;_this.deferred=$q.defer();disableMap();$log.info('DrawFreeHandChildModel is engaged (drawing).');google.maps.event.addDomListener(_this.map.getDiv(),'mousedown',function(e){return drawFreeHand(_this.map,_this.polys,enableMap);});return _this.deferred.promise;};}(this);return this;};return freeHandMgr;}]);}).call(this);;/*global _:true,angular:true,google:true, RichMarker:true */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.child').factory('uiGmapMarkerChildModel',['uiGmapModelKey','uiGmapGmapUtil','uiGmapLogger','uiGmapEventsHelper','uiGmapPropertyAction','uiGmapMarkerOptions','uiGmapIMarker','uiGmapMarkerManager','uiGmapPromise',function(ModelKey,GmapUtil,$log,EventsHelper,PropertyAction,MarkerOptions,IMarker,MarkerManager,uiGmapPromise){var MarkerChildModel;MarkerChildModel=function(superClass){var destroy;extend(MarkerChildModel,superClass);MarkerChildModel.include(GmapUtil);MarkerChildModel.include(EventsHelper);MarkerChildModel.include(MarkerOptions);destroy=function destroy(child){if((child!=null?child.gObject:void 0)!=null){child.removeEvents(child.externalListeners);child.removeEvents(child.internalListeners);if(child!=null?child.gObject:void 0){if(child.removeFromManager){child.gManager.remove(child.gObject);}child.gObject.setMap(null);return child.gObject=null;}}};function MarkerChildModel(opts){this.internalEvents=bind(this.internalEvents,this);this.setLabelOptions=bind(this.setLabelOptions,this);this.setOptions=bind(this.setOptions,this);this.setIcon=bind(this.setIcon,this);this.setCoords=bind(this.setCoords,this);this.isNotValid=bind(this.isNotValid,this);this.maybeSetScopeValue=bind(this.maybeSetScopeValue,this);this.createMarker=bind(this.createMarker,this);this.setMyScope=bind(this.setMyScope,this);this.updateModel=bind(this.updateModel,this);this.handleModelChanges=bind(this.handleModelChanges,this);this.destroy=bind(this.destroy,this);var action,ref,ref1,ref2,ref3,ref4,scope;scope=opts.scope,this.model=opts.model,this.keys=opts.keys,this.gMap=opts.gMap,this.defaults=(ref=opts.defaults)!=null?ref:{},this.doClick=opts.doClick,this.gManager=opts.gManager,this.doDrawSelf=(ref1=opts.doDrawSelf)!=null?ref1:true,this.trackModel=(ref2=opts.trackModel)!=null?ref2:true,this.needRedraw=(ref3=opts.needRedraw)!=null?ref3:false,this.isScopeModel=(ref4=opts.isScopeModel)!=null?ref4:false;if(this.isScopeModel){this.clonedModel=_.clone(this.model,true);}this.deferred=uiGmapPromise.defer();_.each(this.keys,function(_this){return function(v,k){var keyValue;keyValue=_this.keys[k];if(keyValue!=null&&!_.isFunction(keyValue)&&_.isString(keyValue)){return _this[k+'Key']=keyValue;}};}(this));this.idKey=this.idKeyKey||'id';if(this.model[this.idKey]!=null){this.id=this.model[this.idKey];}MarkerChildModel.__super__.constructor.call(this,scope);this.scope.getGMarker=function(_this){return function(){return _this.gObject;};}(this);this.firstTime=true;if(this.trackModel){this.scope.model=this.model;this.scope.$watch('model',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){return _this.handleModelChanges(newValue,oldValue);}};}(this),true);}else{action=new PropertyAction(function(_this){return function(calledKey){if(_.isFunction(calledKey)){calledKey='all';}if(!_this.firstTime){return _this.setMyScope(calledKey,scope);}};}(this),false);_.each(this.keys,function(v,k){return scope.$watch(k,action.sic(k),true);});}this.scope.$on('$destroy',function(_this){return function(){return destroy(_this);};}(this));this.createMarker(this.model);$log.info(this);}MarkerChildModel.prototype.destroy=function(removeFromManager){if(removeFromManager==null){removeFromManager=true;}this.removeFromManager=removeFromManager;return this.scope.$destroy();};MarkerChildModel.prototype.handleModelChanges=function(newValue,oldValue){var changes,ctr,len;changes=this.getChanges(newValue,oldValue,IMarker.keys);if(!this.firstTime){ctr=0;len=_.keys(changes).length;return _.each(changes,function(_this){return function(v,k){var doDraw;ctr+=1;doDraw=len===ctr;_this.setMyScope(k,newValue,oldValue,false,true,doDraw);return _this.needRedraw=true;};}(this));}};MarkerChildModel.prototype.updateModel=function(model){if(this.isScopeModel){this.clonedModel=_.clone(model,true);}return this.setMyScope('all',model,this.model);};MarkerChildModel.prototype.renderGMarker=function(doDraw,validCb){var coords,isSpiderfied,ref;if(doDraw==null){doDraw=true;}coords=this.getProp('coords',this.scope,this.model);if(((ref=this.gManager)!=null?ref.isSpiderfied:void 0)!=null){isSpiderfied=this.gManager.isSpiderfied();}if(coords!=null){if(!this.validateCoords(coords)){$log.debug('MarkerChild does not have coords yet. They may be defined later.');return;}if(validCb!=null){validCb();}if(doDraw&&this.gObject){this.gManager.add(this.gObject);}if(isSpiderfied){return this.gManager.markerSpiderfier.spiderListener(this.gObject,window.event);}}else{if(doDraw&&this.gObject){return this.gManager.remove(this.gObject);}}};MarkerChildModel.prototype.setMyScope=function(thingThatChanged,model,oldModel,isInit,doDraw){var justCreated;if(oldModel==null){oldModel=void 0;}if(isInit==null){isInit=false;}if(doDraw==null){doDraw=true;}if(model==null){model=this.model;}else{this.model=model;}if(!this.gObject){this.setOptions(this.scope,doDraw);justCreated=true;}switch(thingThatChanged){case'all':return _.each(this.keys,function(_this){return function(v,k){return _this.setMyScope(k,model,oldModel,isInit,doDraw);};}(this));case'icon':return this.maybeSetScopeValue({gSetter:this.setIcon,doDraw:doDraw});case'coords':return this.maybeSetScopeValue({gSetter:this.setCoords,doDraw:doDraw});case'options':if(!justCreated){return this.createMarker(model,oldModel,isInit,doDraw);}}};MarkerChildModel.prototype.createMarker=function(model,oldModel,isInit,doDraw){if(oldModel==null){oldModel=void 0;}if(isInit==null){isInit=false;}if(doDraw==null){doDraw=true;}this.maybeSetScopeValue({gSetter:this.setOptions,doDraw:doDraw});return this.firstTime=false;};MarkerChildModel.prototype.maybeSetScopeValue=function(arg){var doDraw,gSetter,ref;gSetter=arg.gSetter,doDraw=(ref=arg.doDraw)!=null?ref:true;if(gSetter!=null){gSetter(this.scope,doDraw);}if(this.doDrawSelf&&doDraw){return this.gManager.draw();}};MarkerChildModel.prototype.isNotValid=function(scope,doCheckGmarker){var hasIdenticalScopes,hasNoGmarker;if(doCheckGmarker==null){doCheckGmarker=true;}hasNoGmarker=!doCheckGmarker?false:this.gObject===void 0;hasIdenticalScopes=!this.trackModel?scope.$id!==this.scope.$id:false;return hasIdenticalScopes||hasNoGmarker;};MarkerChildModel.prototype.setCoords=function(scope,doDraw){if(doDraw==null){doDraw=true;}if(this.isNotValid(scope)||this.gObject==null){return;}return this.renderGMarker(doDraw,function(_this){return function(){var newGValue,newModelVal,oldGValue;newModelVal=_this.getProp('coords',scope,_this.model);newGValue=_this.getCoords(newModelVal);oldGValue=_this.gObject.getPosition();if(oldGValue!=null&&newGValue!=null){if(newGValue.lng()===oldGValue.lng()&&newGValue.lat()===oldGValue.lat()){return;}}_this.gObject.setPosition(newGValue);return _this.gObject.setVisible(_this.validateCoords(newModelVal));};}(this));};MarkerChildModel.prototype.setIcon=function(scope,doDraw){if(doDraw==null){doDraw=true;}if(this.isNotValid(scope)||this.gObject==null){return;}return this.renderGMarker(doDraw,function(_this){return function(){var coords,newValue,oldValue;oldValue=_this.gObject.getIcon();newValue=_this.getProp('icon',scope,_this.model);if(oldValue===newValue){return;}_this.gObject.setIcon(newValue);coords=_this.getProp('coords',scope,_this.model);_this.gObject.setPosition(_this.getCoords(coords));return _this.gObject.setVisible(_this.validateCoords(coords));};}(this));};MarkerChildModel.prototype.setOptions=function(scope,doDraw){var ref;if(doDraw==null){doDraw=true;}if(this.isNotValid(scope,false)){return;}this.renderGMarker(doDraw,function(_this){return function(){var _options,coords,icon;coords=_this.getProp('coords',scope,_this.model);icon=_this.getProp('icon',scope,_this.model);_options=_this.getProp('options',scope,_this.model);_this.opts=_this.createOptions(coords,icon,_options);if(_this.isLabel(_this.gObject)!==_this.isLabel(_this.opts)&&_this.gObject!=null){_this.gManager.remove(_this.gObject);_this.gObject=void 0;}if(_this.gObject!=null){_this.gObject.setOptions(_this.setLabelOptions(_this.opts));}if(!_this.gObject){if(_this.isLabel(_this.opts)){_this.gObject=new MarkerWithLabel(_this.setLabelOptions(_this.opts));}else if(_this.opts.content){_this.gObject=new RichMarker(_this.opts);_this.gObject.getIcon=_this.gObject.getContent;_this.gObject.setIcon=_this.gObject.setContent;}else{_this.gObject=new google.maps.Marker(_this.opts);}_.extend(_this.gObject,{model:_this.model});}if(_this.externalListeners){_this.removeEvents(_this.externalListeners);}if(_this.internalListeners){_this.removeEvents(_this.internalListeners);}_this.externalListeners=_this.setEvents(_this.gObject,_this.scope,_this.model,['dragend']);_this.internalListeners=_this.setEvents(_this.gObject,{events:_this.internalEvents(),$evalAsync:function $evalAsync(){}},_this.model);if(_this.id!=null){return _this.gObject.key=_this.id;}};}(this));if(this.gObject&&(this.gObject.getMap()||this.gManager.type!==MarkerManager.type)){this.deferred.resolve(this.gObject);}else{if(!this.gObject){return this.deferred.reject('gObject is null');}if(!(((ref=this.gObject)!=null?ref.getMap():void 0)&&this.gManager.type===MarkerManager.type)){$log.debug('gObject has no map yet');this.deferred.resolve(this.gObject);}}if(this.model[this.fitKey]){return this.gManager.fit();}};MarkerChildModel.prototype.setLabelOptions=function(opts){if(opts.labelAnchor){opts.labelAnchor=this.getLabelPositionPoint(opts.labelAnchor);}return opts;};MarkerChildModel.prototype.internalEvents=function(){return{dragend:function(_this){return function(marker,eventName,model,mousearg){var events,modelToSet,newCoords;modelToSet=_this.trackModel?_this.scope.model:_this.model;newCoords=_this.setCoordsFromEvent(_this.modelOrKey(modelToSet,_this.coordsKey),_this.gObject.getPosition());modelToSet=_this.setVal(model,_this.coordsKey,newCoords);events=_this.scope.events;if((events!=null?events.dragend:void 0)!=null){events.dragend(marker,eventName,modelToSet,mousearg);}return _this.scope.$apply();};}(this),click:function(_this){return function(marker,eventName,model,mousearg){var click;click=_this.getProp('click',_this.scope,_this.model);if(_this.doClick&&angular.isFunction(click)){return _this.scope.$evalAsync(click(marker,eventName,_this.model,mousearg));}};}(this)};};return MarkerChildModel;}(ModelKey);return MarkerChildModel;}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapPolygonChildModel',['uiGmapBasePolyChildModel','uiGmapPolygonOptionsBuilder',function(BaseGen,Builder){var PolygonChildModel,base,gFactory;gFactory=function gFactory(opts){return new google.maps.Polygon(opts);};base=new BaseGen(Builder,gFactory);return PolygonChildModel=function(superClass){extend(PolygonChildModel,superClass);function PolygonChildModel(){return PolygonChildModel.__super__.constructor.apply(this,arguments);}return PolygonChildModel;}(base);}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapPolylineChildModel',['uiGmapBasePolyChildModel','uiGmapPolylineOptionsBuilder',function(BaseGen,Builder){var PolylineChildModel,base,gFactory;gFactory=function gFactory(opts){return new google.maps.Polyline(opts);};base=BaseGen(Builder,gFactory);return PolylineChildModel=function(superClass){extend(PolylineChildModel,superClass);function PolylineChildModel(){return PolylineChildModel.__super__.constructor.apply(this,arguments);}return PolylineChildModel;}(base);}]);}).call(this);;/*global _:true,angular:true,google:true */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.child').factory('uiGmapWindowChildModel',['uiGmapBaseObject','uiGmapGmapUtil','uiGmapLogger','$compile','$http','$templateCache','uiGmapChromeFixes','uiGmapEventsHelper',function(BaseObject,GmapUtil,$log,$compile,$http,$templateCache,ChromeFixes,EventsHelper){var WindowChildModel;WindowChildModel=function(superClass){extend(WindowChildModel,superClass);WindowChildModel.include(GmapUtil);WindowChildModel.include(EventsHelper);function WindowChildModel(opts){this.updateModel=bind(this.updateModel,this);this.destroy=bind(this.destroy,this);this.remove=bind(this.remove,this);this.getLatestPosition=bind(this.getLatestPosition,this);this.hideWindow=bind(this.hideWindow,this);this.showWindow=bind(this.showWindow,this);this.handleClick=bind(this.handleClick,this);this.watchOptions=bind(this.watchOptions,this);this.watchCoords=bind(this.watchCoords,this);this.createGWin=bind(this.createGWin,this);this.watchElement=bind(this.watchElement,this);this.watchAndDoShow=bind(this.watchAndDoShow,this);this.doShow=bind(this.doShow,this);var maybeMarker,ref,ref1,ref2,ref3;this.model=(ref=opts.model)!=null?ref:{},this.scope=opts.scope,this.opts=opts.opts,this.isIconVisibleOnClick=opts.isIconVisibleOnClick,this.gMap=opts.gMap,this.markerScope=opts.markerScope,this.element=opts.element,this.needToManualDestroy=(ref1=opts.needToManualDestroy)!=null?ref1:false,this.markerIsVisibleAfterWindowClose=(ref2=opts.markerIsVisibleAfterWindowClose)!=null?ref2:true,this.isScopeModel=(ref3=opts.isScopeModel)!=null?ref3:false;if(this.isScopeModel){this.clonedModel=_.clone(this.model,true);}this.getGmarker=function(){var ref4,ref5;if(((ref4=this.markerScope)!=null?ref4['getGMarker']:void 0)!=null){return(ref5=this.markerScope)!=null?ref5.getGMarker():void 0;}};this.listeners=[];this.createGWin();maybeMarker=this.getGmarker();if(maybeMarker!=null){maybeMarker.setClickable(true);}this.watchElement();this.watchOptions();this.watchCoords();this.watchAndDoShow();this.scope.$on('$destroy',function(_this){return function(){return _this.destroy();};}(this));$log.info(this);}WindowChildModel.prototype.doShow=function(wasOpen){if(this.scope.show===true||wasOpen){return this.showWindow();}else{return this.hideWindow();}};WindowChildModel.prototype.watchAndDoShow=function(){if(this.model.show!=null){this.scope.show=this.model.show;}this.scope.$watch('show',this.doShow,true);return this.doShow();};WindowChildModel.prototype.watchElement=function(){return this.scope.$watch(function(_this){return function(){var ref,wasOpen;if(!(_this.element||_this.html)){return;}if(_this.html!==_this.element.html()&&_this.gObject){if((ref=_this.opts)!=null){ref.content=void 0;}wasOpen=_this.gObject.isOpen();_this.remove();return _this.createGWin(wasOpen);}};}(this));};WindowChildModel.prototype.createGWin=function(isOpen){var _opts,defaults,maybeMarker,ref,ref1;if(isOpen==null){isOpen=false;}maybeMarker=this.getGmarker();defaults={};if(this.opts!=null){if(this.scope.coords){this.opts.position=this.getCoords(this.scope.coords);}defaults=this.opts;}if(this.element){this.html=_.isObject(this.element)?this.element.html():this.element;}_opts=this.scope.options?this.scope.options:defaults;this.opts=this.createWindowOptions(maybeMarker,this.markerScope||this.scope,this.html,_opts);if(this.opts!=null){if(!this.gObject){if(this.opts.boxClass&&window.InfoBox&&typeof window.InfoBox==='function'){this.gObject=new window.InfoBox(this.opts);}else{this.gObject=new google.maps.InfoWindow(this.opts);}this.listeners.push(google.maps.event.addListener(this.gObject,'domready',function(){return ChromeFixes.maybeRepaint(this.content);}));this.listeners.push(google.maps.event.addListener(this.gObject,'closeclick',function(_this){return function(){if(maybeMarker){maybeMarker.setAnimation(_this.oldMarkerAnimation);if(_this.markerIsVisibleAfterWindowClose){_.delay(function(){maybeMarker.setVisible(false);return maybeMarker.setVisible(_this.markerIsVisibleAfterWindowClose);},250);}}_this.gObject.close();_this.model.show=false;if(_this.scope.closeClick!=null){return _this.scope.$evalAsync(_this.scope.closeClick());}else{return _this.scope.$evalAsync();}};}(this)));}this.gObject.setContent(this.opts.content);this.handleClick(((ref=this.scope)!=null?(ref1=ref.options)!=null?ref1.forceClick:void 0:void 0)||isOpen);return this.doShow(this.gObject.isOpen());}};WindowChildModel.prototype.watchCoords=function(){var scope;scope=this.markerScope!=null?this.markerScope:this.scope;return scope.$watch('coords',function(_this){return function(newValue,oldValue){var pos;if(newValue!==oldValue){if(newValue==null){_this.hideWindow();}else if(!_this.validateCoords(newValue)){$log.error("WindowChildMarker cannot render marker as scope.coords as no position on marker: "+JSON.stringify(_this.model));return;}pos=_this.getCoords(newValue);_this.doShow();_this.gObject.setPosition(pos);if(_this.opts){return _this.opts.position=pos;}}};}(this),true);};WindowChildModel.prototype.watchOptions=function(){return this.scope.$watch('options',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){_this.opts=newValue;if(_this.gObject!=null){_this.gObject.setOptions(_this.opts);if(_this.opts.visible!=null&&_this.opts.visible){return _this.showWindow();}else if(_this.opts.visible!=null){return _this.hideWindow();}}}};}(this),true);};WindowChildModel.prototype.handleClick=function(forceClick){var click,maybeMarker;if(this.gObject==null){return;}maybeMarker=this.getGmarker();click=function(_this){return function(){if(_this.gObject==null){_this.createGWin();}_this.showWindow();if(maybeMarker!=null){_this.initialMarkerVisibility=maybeMarker.getVisible();_this.oldMarkerAnimation=maybeMarker.getAnimation();return maybeMarker.setVisible(_this.isIconVisibleOnClick);}};}(this);if(forceClick){click();}if(maybeMarker){return this.listeners=this.listeners.concat(this.setEvents(maybeMarker,{events:{click:click}},this.model));}};WindowChildModel.prototype.showWindow=function(){var compiled,show,templateScope;if(this.gObject==null){return;}templateScope=null;show=function(_this){return function(){var isOpen,maybeMarker,pos;if(!_this.gObject.isOpen()){maybeMarker=_this.getGmarker();if(_this.gObject!=null&&_this.gObject.getPosition!=null){pos=_this.gObject.getPosition();}if(maybeMarker){pos=maybeMarker.getPosition();}if(!pos){return;}_this.gObject.open(_this.gMap,maybeMarker);isOpen=_this.gObject.isOpen();if(_this.model.show!==isOpen){return _this.model.show=isOpen;}}};}(this);if(this.scope.templateUrl){$http.get(this.scope.templateUrl,{cache:$templateCache}).then(function(_this){return function(content){var compiled;templateScope=_this.scope.$new();if(angular.isDefined(_this.scope.templateParameter)){templateScope.parameter=_this.scope.templateParameter;}compiled=$compile(content.data)(templateScope);_this.gObject.setContent(compiled[0]);return show();};}(this));}else if(this.scope.template){templateScope=this.scope.$new();if(angular.isDefined(this.scope.templateParameter)){templateScope.parameter=this.scope.templateParameter;}compiled=$compile(this.scope.template)(templateScope);this.gObject.setContent(compiled[0]);show();}else{show();}return this.scope.$on('destroy',function(){return templateScope.$destroy();});};WindowChildModel.prototype.hideWindow=function(){if(this.gObject!=null&&this.gObject.isOpen()){return this.gObject.close();}};WindowChildModel.prototype.getLatestPosition=function(overridePos){var maybeMarker;maybeMarker=this.getGmarker();if(this.gObject!=null&&maybeMarker!=null&&!overridePos){return this.gObject.setPosition(maybeMarker.getPosition());}else{if(overridePos){return this.gObject.setPosition(overridePos);}}};WindowChildModel.prototype.remove=function(){this.hideWindow();this.removeEvents(this.listeners);this.listeners.length=0;delete this.gObject;return delete this.opts;};WindowChildModel.prototype.destroy=function(manualOverride){var ref;if(manualOverride==null){manualOverride=false;}this.remove();if(this.scope!=null&&!((ref=this.scope)!=null?ref.$$destroyed:void 0)&&(this.needToManualDestroy||manualOverride)){return this.scope.$destroy();}};WindowChildModel.prototype.updateModel=function(model){if(this.isScopeModel){this.clonedModel=_.clone(model,true);}return _.extend(this.model,this.clonedModel||model);};return WindowChildModel;}(BaseObject);return WindowChildModel;}]);}).call(this);;/*global _, angular */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.parent').factory('uiGmapBasePolysParentModel',['$timeout','uiGmapLogger','uiGmapModelKey','uiGmapModelsWatcher','uiGmapPropMap','uiGmap_async','uiGmapPromise','uiGmapFitHelper',function($timeout,$log,ModelKey,ModelsWatcher,PropMap,_async,uiGmapPromise,FitHelper){return function(IPoly,PolyChildModel,gObjectName){var BasePolysParentModel;return BasePolysParentModel=function(superClass){extend(BasePolysParentModel,superClass);BasePolysParentModel.include(ModelsWatcher);function BasePolysParentModel(scope,element,attrs,gMap1,defaults){this.element=element;this.attrs=attrs;this.gMap=gMap1;this.defaults=defaults;this.maybeFit=bind(this.maybeFit,this);this.createChild=bind(this.createChild,this);this.pieceMeal=bind(this.pieceMeal,this);this.createAllNew=bind(this.createAllNew,this);this.watchIdKey=bind(this.watchIdKey,this);this.createChildScopes=bind(this.createChildScopes,this);this.watchDestroy=bind(this.watchDestroy,this);this.onDestroy=bind(this.onDestroy,this);this.rebuildAll=bind(this.rebuildAll,this);this.doINeedToWipe=bind(this.doINeedToWipe,this);this.watchModels=bind(this.watchModels,this);BasePolysParentModel.__super__.constructor.call(this,scope);this["interface"]=IPoly;this.$log=$log;this.plurals=new PropMap();_.each(IPoly.scopeKeys,function(_this){return function(name){return _this[name+'Key']=void 0;};}(this));this.models=void 0;this.firstTime=true;this.$log.info(this);this.createChildScopes();}BasePolysParentModel.prototype.watchModels=function(scope){/*
                             This was watchCollection but not all model changes were being caught.
                             TODO: Make the directive flexible in overriding whether we watch models (and depth) via watch or watchColleciton.
                             */return scope.$watch('models',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){if(_this.doINeedToWipe(newValue)||scope.doRebuildAll){return _this.rebuildAll(scope,true,true);}else{return _this.createChildScopes(false);}}};}(this),true);};BasePolysParentModel.prototype.doINeedToWipe=function(newValue){var newValueIsEmpty;newValueIsEmpty=newValue!=null?newValue.length===0:true;return this.plurals.length>0&&newValueIsEmpty;};BasePolysParentModel.prototype.rebuildAll=function(scope,doCreate,doDelete){return this.onDestroy(doDelete).then(function(_this){return function(){if(doCreate){return _this.createChildScopes();}};}(this));};BasePolysParentModel.prototype.onDestroy=function(){BasePolysParentModel.__super__.onDestroy.call(this,this.scope);return _async.promiseLock(this,uiGmapPromise.promiseTypes["delete"],void 0,void 0,function(_this){return function(){return _async.each(_this.plurals.values(),function(child){return child.destroy(true);},_async.chunkSizeFrom(_this.scope.cleanchunk,false)).then(function(){var ref;return(ref=_this.plurals)!=null?ref.removeAll():void 0;});};}(this));};BasePolysParentModel.prototype.watchDestroy=function(scope){return scope.$on('$destroy',function(_this){return function(){return _this.rebuildAll(scope,false,true);};}(this));};BasePolysParentModel.prototype.createChildScopes=function(isCreatingFromScratch){if(isCreatingFromScratch==null){isCreatingFromScratch=true;}if(angular.isUndefined(this.scope.models)){this.$log.error("No models to create "+gObjectName+"s from! I Need direct models!");return;}if(this.gMap==null||this.scope.models==null){return;}this.watchIdKey(this.scope);if(isCreatingFromScratch){return this.createAllNew(this.scope,false);}else{return this.pieceMeal(this.scope,false);}};BasePolysParentModel.prototype.watchIdKey=function(scope){this.setIdKey(scope);return scope.$watch('idKey',function(_this){return function(newValue,oldValue){if(newValue!==oldValue&&newValue==null){_this.idKey=newValue;return _this.rebuildAll(scope,true,true);}};}(this));};BasePolysParentModel.prototype.createAllNew=function(scope,isArray){var maybeCanceled;if(isArray==null){isArray=false;}this.models=scope.models;if(this.firstTime){this.watchModels(scope);this.watchDestroy(scope);}if(this.didQueueInitPromise(this,scope)){return;}maybeCanceled=null;return _async.promiseLock(this,uiGmapPromise.promiseTypes.create,'createAllNew',function(canceledMsg){return maybeCanceled=canceledMsg;},function(_this){return function(){return _async.map(scope.models,function(model){var child;child=_this.createChild(model,_this.gMap);if(maybeCanceled){$log.debug('createNew should fall through safely');child.isEnabled=false;}maybeCanceled;return child.pathPoints.getArray();},_async.chunkSizeFrom(scope.chunk)).then(function(pathPoints){_this.maybeFit(pathPoints);return _this.firstTime=false;});};}(this));};BasePolysParentModel.prototype.pieceMeal=function(scope,isArray){var maybeCanceled,payload;if(isArray==null){isArray=true;}if(scope.$$destroyed){return;}maybeCanceled=null;payload=null;this.models=scope.models;if(scope!=null&&this.modelsLength()&&this.plurals.length){return _async.promiseLock(this,uiGmapPromise.promiseTypes.update,'pieceMeal',function(canceledMsg){return maybeCanceled=canceledMsg;},function(_this){return function(){return uiGmapPromise.promise(function(){return _this.figureOutState(_this.idKey,scope,_this.plurals,_this.modelKeyComparison);}).then(function(state){payload=state;if(payload.updates.length){_async.each(payload.updates,function(obj){_.extend(obj.child.scope,obj.model);return obj.child.model=obj.model;});}return _async.each(payload.removals,function(child){if(child!=null){child.destroy();_this.plurals.remove(child.model[_this.idKey]);return maybeCanceled;}},_async.chunkSizeFrom(scope.chunk));}).then(function(){return _async.each(payload.adds,function(modelToAdd){if(maybeCanceled){$log.debug('pieceMeal should fall through safely');}_this.createChild(modelToAdd,_this.gMap);return maybeCanceled;},_async.chunkSizeFrom(scope.chunk)).then(function(){return _this.maybeFit();});});};}(this));}else{this.inProgress=false;return this.rebuildAll(this.scope,true,true);}};BasePolysParentModel.prototype.createChild=function(model,gMap){var child,childScope;childScope=this.scope.$new(false);this.setChildScope(IPoly.scopeKeys,childScope,model);childScope.$watch('model',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){return _this.setChildScope(IPoly.scopeKeys,childScope,newValue);}};}(this),true);childScope["static"]=this.scope["static"];child=new PolyChildModel({isScopeModel:true,scope:childScope,attrs:this.attrs,gMap:gMap,defaults:this.defaults,model:model,gObjectChangeCb:function(_this){return function(){return _this.maybeFit();};}(this)});if(model[this.idKey]==null){this.$log.error(gObjectName+" model has no id to assign a child to.\nThis is required for performance. Please assign id,\nor redirect id to a different key.");return;}this.plurals.put(model[this.idKey],child);return child;};BasePolysParentModel.prototype.maybeFit=function(pathPoints){if(pathPoints==null){pathPoints=this.plurals.map(function(p){return p.pathPoints;});}if(this.scope.fit){pathPoints=_.flatten(pathPoints);return FitHelper.fit(pathPoints,this.gMap);}};return BasePolysParentModel;}(ModelKey);};}]);}).call(this);;/*globals angular, _, google */(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.parent').factory('uiGmapCircleParentModel',['uiGmapLogger','$timeout','uiGmapGmapUtil','uiGmapEventsHelper','uiGmapCircleOptionsBuilder',function($log,$timeout,GmapUtil,EventsHelper,Builder){var CircleParentModel,_settingFromDirective;_settingFromDirective=function _settingFromDirective(scope,fn){scope.settingFromDirective=true;fn();return $timeout(function(){return scope.settingFromDirective=false;});};return CircleParentModel=function(superClass){extend(CircleParentModel,superClass);CircleParentModel.include(GmapUtil);CircleParentModel.include(EventsHelper);function CircleParentModel(scope,element,attrs,gMap,DEFAULTS){var clean,gObject,lastRadius;this.attrs=attrs;this.gMap=gMap;this.DEFAULTS=DEFAULTS;this.scope=scope;lastRadius=null;clean=function(_this){return function(){lastRadius=null;if(_this.listeners!=null){_this.removeEvents(_this.listeners);return _this.listeners=void 0;}};}(this);gObject=new google.maps.Circle(this.buildOpts(GmapUtil.getCoords(scope.center),scope.radius));this.setMyOptions=function(_this){return function(newVals,oldVals){if(scope.settingFromDirective){return;}if(!(_.isEqual(newVals,oldVals)&&newVals===oldVals&&(newVals!=null&&oldVals!=null?newVals.coordinates===oldVals.coordinates:true))){return gObject.setOptions(_this.buildOpts(GmapUtil.getCoords(scope.center),scope.radius));}};}(this);this.props=this.props.concat([{prop:'center',isColl:true},{prop:'fill',isColl:true},'radius','zIndex']);this.watchProps();if(this.scope.control!=null){this.scope.control.getCircle=function(){return gObject;};}clean();this.listeners=this.setEvents(gObject,scope,scope,['radius_changed'])||[];this.listeners.push(google.maps.event.addListener(gObject,'radius_changed',function(){/*
                             possible google bug, and or because a circle has two radii
                             radius_changed appears to fire twice (original and new) which is not too helpful
                             therefore we will check for radius changes manually and bail out if nothing has changed
                             */var newRadius,work;newRadius=gObject.getRadius();if(newRadius===lastRadius){return;}lastRadius=newRadius;work=function work(){return _settingFromDirective(scope,function(){var ref,ref1;if(newRadius!==scope.radius){scope.radius=newRadius;}if(((ref=scope.events)!=null?ref.radius_changed:void 0)&&_.isFunction((ref1=scope.events)!=null?ref1.radius_changed:void 0)){return scope.events.radius_changed(gObject,'radius_changed',scope,arguments);}});};if(!angular.mock){return scope.$evalAsync(function(){return work();});}else{return work();}}));this.listeners.push(google.maps.event.addListener(gObject,'center_changed',function(){return scope.$evalAsync(function(){return _settingFromDirective(scope,function(){if(angular.isDefined(scope.center.type)){scope.center.coordinates[1]=gObject.getCenter().lat();return scope.center.coordinates[0]=gObject.getCenter().lng();}else{scope.center.latitude=gObject.getCenter().lat();return scope.center.longitude=gObject.getCenter().lng();}});});}));scope.$on('$destroy',function(){clean();return gObject.setMap(null);});$log.info(this);}return CircleParentModel;}(Builder);}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.parent').factory('uiGmapDrawingManagerParentModel',['uiGmapLogger','$timeout','uiGmapBaseObject','uiGmapEventsHelper',function($log,$timeout,BaseObject,EventsHelper){var DrawingManagerParentModel;return DrawingManagerParentModel=function(superClass){extend(DrawingManagerParentModel,superClass);DrawingManagerParentModel.include(EventsHelper);function DrawingManagerParentModel(scope,element,attrs,map){var gObject,listeners;this.scope=scope;this.attrs=attrs;this.map=map;gObject=new google.maps.drawing.DrawingManager(this.scope.options);gObject.setMap(this.map);listeners=void 0;if(this.scope.control!=null){this.scope.control.getDrawingManager=function(){return gObject;};}if(!this.scope["static"]&&this.scope.options){this.scope.$watch('options',function(newValue){return gObject!=null?gObject.setOptions(newValue):void 0;},true);}if(this.scope.events!=null){listeners=this.setEvents(gObject,this.scope,this.scope);this.scope.$watch('events',function(_this){return function(newValue,oldValue){if(!_.isEqual(newValue,oldValue)){if(listeners!=null){_this.removeEvents(listeners);}return listeners=_this.setEvents(gObject,_this.scope,_this.scope);}};}(this));}this.scope.$on('$destroy',function(_this){return function(){if(listeners!=null){_this.removeEvents(listeners);}gObject.setMap(null);return gObject=null;};}(this));}return DrawingManagerParentModel;}(BaseObject);}]);}).call(this);;/*
     - interface for all markers to derrive from
     - to enforce a minimum set of requirements
     - attributes
     - coords
     - icon
     - implementation needed on watches
     */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapIMarkerParentModel",["uiGmapModelKey","uiGmapLogger",function(ModelKey,Logger){var IMarkerParentModel;IMarkerParentModel=function(superClass){extend(IMarkerParentModel,superClass);IMarkerParentModel.prototype.DEFAULTS={};function IMarkerParentModel(scope1,element,attrs,map){this.scope=scope1;this.element=element;this.attrs=attrs;this.map=map;this.onWatch=bind(this.onWatch,this);this.watch=bind(this.watch,this);this.validateScope=bind(this.validateScope,this);IMarkerParentModel.__super__.constructor.call(this,this.scope);this.$log=Logger;if(!this.validateScope(this.scope)){throw new String("Unable to construct IMarkerParentModel due to invalid scope");}this.doClick=angular.isDefined(this.attrs.click);if(this.scope.options!=null){this.DEFAULTS=this.scope.options;}this.watch('coords',this.scope);this.watch('icon',this.scope);this.watch('options',this.scope);this.scope.$on("$destroy",function(_this){return function(){return _this.onDestroy(_this.scope);};}(this));}IMarkerParentModel.prototype.validateScope=function(scope){var ret;if(scope==null){this.$log.error(this.constructor.name+": invalid scope used");return false;}ret=scope.coords!=null;if(!ret){this.$log.error(this.constructor.name+": no valid coords attribute found");return false;}return ret;};IMarkerParentModel.prototype.watch=function(propNameToWatch,scope,equalityCheck){if(equalityCheck==null){equalityCheck=true;}return scope.$watch(propNameToWatch,function(_this){return function(newValue,oldValue){if(!_.isEqual(newValue,oldValue)){return _this.onWatch(propNameToWatch,scope,newValue,oldValue);}};}(this),equalityCheck);};IMarkerParentModel.prototype.onWatch=function(propNameToWatch,scope,newValue,oldValue){};return IMarkerParentModel;}(ModelKey);return IMarkerParentModel;}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapIWindowParentModel",["uiGmapModelKey","uiGmapGmapUtil","uiGmapLogger",function(ModelKey,GmapUtil,Logger){var IWindowParentModel;return IWindowParentModel=function(superClass){extend(IWindowParentModel,superClass);IWindowParentModel.include(GmapUtil);function IWindowParentModel(scope,element,attrs,ctrls,$timeout,$compile,$http,$templateCache){IWindowParentModel.__super__.constructor.call(this,scope);this.$log=Logger;this.$timeout=$timeout;this.$compile=$compile;this.$http=$http;this.$templateCache=$templateCache;this.DEFAULTS={};if(scope.options!=null){this.DEFAULTS=scope.options;}}IWindowParentModel.prototype.getItem=function(scope,modelsPropToIterate,index){if(modelsPropToIterate==='models'){return scope[modelsPropToIterate][index];}return scope[modelsPropToIterate].get(index);};return IWindowParentModel;}(ModelKey);}]);}).call(this);;(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.parent').factory('uiGmapLayerParentModel',['uiGmapBaseObject','uiGmapLogger','$timeout',function(BaseObject,Logger,$timeout){var LayerParentModel;LayerParentModel=function(superClass){extend(LayerParentModel,superClass);function LayerParentModel(scope,element,attrs,gMap,onLayerCreated,$log){this.scope=scope;this.element=element;this.attrs=attrs;this.gMap=gMap;this.onLayerCreated=onLayerCreated!=null?onLayerCreated:void 0;this.$log=$log!=null?$log:Logger;this.createGoogleLayer=bind(this.createGoogleLayer,this);if(this.attrs.type==null){this.$log.info('type attribute for the layer directive is mandatory. Layer creation aborted!!');return;}this.createGoogleLayer();this.doShow=true;if(angular.isDefined(this.attrs.show)){this.doShow=this.scope.show;}if(this.doShow&&this.gMap!=null){this.gObject.setMap(this.gMap);}this.scope.$watch('show',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){_this.doShow=newValue;if(newValue){return _this.gObject.setMap(_this.gMap);}else{return _this.gObject.setMap(null);}}};}(this),true);this.scope.$watch('options',function(_this){return function(newValue,oldValue){if(newValue!==oldValue&&_this.doShow){return _this.gObject.setOptions(newValue);}};}(this),true);this.scope.$on('$destroy',function(_this){return function(){return _this.gObject.setMap(null);};}(this));}LayerParentModel.prototype.createGoogleLayer=function(){var base;if(this.attrs.options==null){this.gObject=this.attrs.namespace===void 0?new google.maps[this.attrs.type]():new google.maps[this.attrs.namespace][this.attrs.type]();}else{this.gObject=this.attrs.namespace===void 0?new google.maps[this.attrs.type](this.scope.options):new google.maps[this.attrs.namespace][this.attrs.type](this.scope.options);}if(this.gObject!=null&&this.doShow){this.gObject.setMap(this.gMap);}if(this.gObject!=null&&this.onLayerCreated!=null){return typeof(base=this.onLayerCreated(this.scope,this.gObject))==="function"?base(this.gObject):void 0;}};return LayerParentModel;}(BaseObject);return LayerParentModel;}]);}).call(this);;(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.parent').factory('uiGmapMapTypeParentModel',['uiGmapBaseObject','uiGmapLogger',function(BaseObject,Logger){var MapTypeParentModel;MapTypeParentModel=function(superClass){extend(MapTypeParentModel,superClass);function MapTypeParentModel(scope,element,attrs,gMap,$log,childModel,propMap){var watchChildModelOptions,watchChildModelShow,watchOptions,watchShow;this.scope=scope;this.element=element;this.attrs=attrs;this.gMap=gMap;this.$log=$log!=null?$log:Logger;this.childModel=childModel;this.propMap=propMap;this.refreshShown=bind(this.refreshShown,this);this.hideOverlay=bind(this.hideOverlay,this);this.showOverlay=bind(this.showOverlay,this);this.refreshMapType=bind(this.refreshMapType,this);this.createMapType=bind(this.createMapType,this);if(this.scope.options==null){this.$log.info('options attribute for the map-type directive is mandatory. Map type creation aborted!!');return;}this.id=this.gMap.overlayMapTypesCount=this.gMap.overlayMapTypesCount+1||0;this.doShow=true;this.createMapType();this.refreshShown();if(this.doShow&&this.gMap!=null){this.showOverlay();}watchChildModelShow=function(_this){return function(){return _this.childModel[_this.attrs.show];};}(this);watchShow=this.childModel?watchChildModelShow:'show';this.scope.$watch(watchShow,function(_this){return function(newValue,oldValue){if(newValue!==oldValue){_this.doShow=newValue;if(newValue){return _this.showOverlay();}else{return _this.hideOverlay();}}};}(this));watchChildModelOptions=function(_this){return function(){return _this.childModel[_this.attrs.options];};}(this);watchOptions=this.childModel?watchChildModelOptions:'options';this.scope.$watchCollection(watchOptions,function(_this){return function(newValue,oldValue){var different,mapTypeProps;if(!_.isEqual(newValue,oldValue)){mapTypeProps=['tileSize','maxZoom','minZoom','name','alt'];different=_.some(mapTypeProps,function(prop){return!oldValue||!newValue||!_.isEqual(newValue[prop],oldValue[prop]);});if(different){return _this.refreshMapType();}}};}(this));if(angular.isDefined(this.attrs.refresh)){this.scope.$watch('refresh',function(_this){return function(newValue,oldValue){if(!_.isEqual(newValue,oldValue)){return _this.refreshMapType();}};}(this),true);}this.scope.$on('$destroy',function(_this){return function(){_this.hideOverlay();return _this.mapType=null;};}(this));}MapTypeParentModel.prototype.createMapType=function(){var id,idAttr,mapType;mapType=this.childModel?this.attrs.options?this.childModel[this.attrs.options]:this.childModel:this.scope.options;if(mapType.getTile!=null){this.mapType=mapType;}else if(mapType.getTileUrl!=null){this.mapType=new google.maps.ImageMapType(mapType);}else{this.$log.info('options should provide either getTile or getTileUrl methods. Map type creation aborted!!');return;}idAttr=this.attrs.id?this.childModel?this.attrs.id:'id':void 0;id=idAttr?this.childModel?this.childModel[idAttr]:this.scope[idAttr]:void 0;if(id){this.gMap.mapTypes.set(id,this.mapType);if(!angular.isDefined(this.attrs.show)){this.doShow=false;}}this.mapType.layerId=this.id;if(this.childModel&&angular.isDefined(this.scope.index)){return this.propMap.put(this.mapType.layerId,this.scope.index);}};MapTypeParentModel.prototype.refreshMapType=function(){this.hideOverlay();this.mapType=null;this.createMapType();if(this.doShow&&this.gMap!=null){return this.showOverlay();}};MapTypeParentModel.prototype.showOverlay=function(){var found;if(angular.isDefined(this.scope.index)){found=false;if(this.gMap.overlayMapTypes.getLength()){this.gMap.overlayMapTypes.forEach(function(_this){return function(mapType,index){var layerIndex;if(!found){layerIndex=_this.propMap.get(mapType.layerId.toString());if(layerIndex>_this.scope.index||!angular.isDefined(layerIndex)){found=true;_this.gMap.overlayMapTypes.insertAt(index,_this.mapType);}}};}(this));if(!found){return this.gMap.overlayMapTypes.push(this.mapType);}}else{return this.gMap.overlayMapTypes.push(this.mapType);}}else{return this.gMap.overlayMapTypes.push(this.mapType);}};MapTypeParentModel.prototype.hideOverlay=function(){var found;found=false;return this.gMap.overlayMapTypes.forEach(function(_this){return function(mapType,index){if(!found&&mapType.layerId===_this.id){found=true;_this.gMap.overlayMapTypes.removeAt(index);}};}(this));};MapTypeParentModel.prototype.refreshShown=function(){return this.doShow=angular.isDefined(this.attrs.show)?this.childModel?this.childModel[this.attrs.show]:this.scope.show:true;};return MapTypeParentModel;}(BaseObject);return MapTypeParentModel;}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.parent').factory('uiGmapMapTypesParentModel',['uiGmapBaseObject','uiGmapLogger','uiGmapMapTypeParentModel','uiGmapPropMap',function(BaseObject,Logger,MapTypeParentModel,PropMap){var MapTypesParentModel;MapTypesParentModel=function(superClass){extend(MapTypesParentModel,superClass);function MapTypesParentModel(scope,element,attrs,gMap,$log){var pMap;this.scope=scope;this.element=element;this.attrs=attrs;this.gMap=gMap;this.$log=$log!=null?$log:Logger;if(this.attrs.mapTypes==null){this.$log.info('layers attribute for the map-types directive is mandatory. Map types creation aborted!!');return;}pMap=new PropMap();this.scope.mapTypes.forEach(function(_this){return function(l,i){var childScope,mockAttr;mockAttr={options:_this.scope.options,show:_this.scope.show,refresh:_this.scope.refresh};childScope=_this.scope.$new();childScope.index=i;new MapTypeParentModel(childScope,null,mockAttr,_this.gMap,_this.$log,l,pMap);};}(this));}return MapTypesParentModel;}(BaseObject);return MapTypesParentModel;}]);}).call(this);;/*global _:true,angular:true, */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapMarkersParentModel",["uiGmapIMarkerParentModel","uiGmapModelsWatcher","uiGmapPropMap","uiGmapMarkerChildModel","uiGmap_async","uiGmapClustererMarkerManager","uiGmapMarkerManager","$timeout","uiGmapIMarker","uiGmapPromise","uiGmapGmapUtil","uiGmapLogger","uiGmapSpiderfierMarkerManager",function(IMarkerParentModel,ModelsWatcher,PropMap,MarkerChildModel,_async,ClustererMarkerManager,MarkerManager,$timeout,IMarker,uiGmapPromise,GmapUtil,$log,SpiderfierMarkerManager){var MarkersParentModel,_setPlurals;_setPlurals=function _setPlurals(val,objToSet){objToSet.plurals=new PropMap();objToSet.scope.plurals=objToSet.plurals;return objToSet;};MarkersParentModel=function(superClass){extend(MarkersParentModel,superClass);MarkersParentModel.include(GmapUtil);MarkersParentModel.include(ModelsWatcher);function MarkersParentModel(scope,element,attrs,map){this.maybeExecMappedEvent=bind(this.maybeExecMappedEvent,this);this.onDestroy=bind(this.onDestroy,this);this.newChildMarker=bind(this.newChildMarker,this);this.pieceMeal=bind(this.pieceMeal,this);this.rebuildAll=bind(this.rebuildAll,this);this.createAllNew=bind(this.createAllNew,this);this.bindToTypeEvents=bind(this.bindToTypeEvents,this);this.createChildScopes=bind(this.createChildScopes,this);this.validateScope=bind(this.validateScope,this);this.onWatch=bind(this.onWatch,this);MarkersParentModel.__super__.constructor.call(this,scope,element,attrs,map);this["interface"]=IMarker;_setPlurals(new PropMap(),this);this.scope.pluralsUpdate={updateCtr:0};this.$log.info(this);this.doRebuildAll=this.scope.doRebuildAll!=null?this.scope.doRebuildAll:false;this.setIdKey(this.scope);this.scope.$watch('doRebuildAll',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){return _this.doRebuildAll=newValue;}};}(this));if(!this.modelsLength()){this.modelsRendered=false;}this.scope.$watch('models',function(_this){return function(newValue,oldValue){if(!_.isEqual(newValue,oldValue)||!_this.modelsRendered){if(newValue.length===0&&oldValue.length===0){return;}_this.modelsRendered=true;return _this.onWatch('models',_this.scope,newValue,oldValue);}};}(this),!this.isTrue(attrs.modelsbyref));this.watch('doCluster',this.scope);this.watch('type',this.scope);this.watch('clusterOptions',this.scope);this.watch('clusterEvents',this.scope);this.watch('typeOptions',this.scope);this.watch('typeEvents',this.scope);this.watch('fit',this.scope);this.watch('idKey',this.scope);this.gManager=void 0;this.createAllNew(this.scope);}MarkersParentModel.prototype.onWatch=function(propNameToWatch,scope,newValue,oldValue){if(propNameToWatch==="idKey"&&newValue!==oldValue){this.idKey=newValue;}if(this.doRebuildAll||propNameToWatch==='doCluster'||propNameToWatch==='type'){return this.rebuildAll(scope);}else{return this.pieceMeal(scope);}};MarkersParentModel.prototype.validateScope=function(scope){var modelsNotDefined;modelsNotDefined=angular.isUndefined(scope.models)||scope.models===void 0;if(modelsNotDefined){this.$log.error(this.constructor.name+": no valid models attribute found");}return MarkersParentModel.__super__.validateScope.call(this,scope)||modelsNotDefined;};/*
                     Not used internally by this parent
                     created for consistency for external control in the API
                     */MarkersParentModel.prototype.createChildScopes=function(isCreatingFromScratch){if(this.gMap==null||this.scope.models==null){return;}if(isCreatingFromScratch){return this.createAllNew(this.scope,false);}else{return this.pieceMeal(this.scope,false);}};MarkersParentModel.prototype.bindToTypeEvents=function(typeEvents,events){var internalHandles,self;if(events==null){events=['click','mouseout','mouseover'];}/*
                         You should only be binding to events that produce groups/clusters of somthing.
                         Otherwise use the orginal event handle.
                         For Example: Click on a cluster pushes a cluster/group obj through which has getMarkers
                         However Spiderfy's click is for a single marker so this is not ideal for that.
                         */self=this;if(!this.origTypeEvents){this.origTypeEvents={};_.each(events,function(_this){return function(eventName){return _this.origTypeEvents[eventName]=typeEvents!=null?typeEvents[eventName]:void 0;};}(this));}else{angular.extend(typeEvents,this.origTypeEvents);}internalHandles={};_.each(events,function(eventName){return internalHandles[eventName]=function(group){return self.maybeExecMappedEvent(group,eventName);};});return angular.extend(typeEvents,internalHandles);};MarkersParentModel.prototype.createAllNew=function(scope){var isSpiderfied,maybeCanceled,typeEvents,typeOptions;if(this.gManager!=null){if(this.gManager instanceof SpiderfierMarkerManager){isSpiderfied=this.gManager.isSpiderfied();}this.gManager.clear();delete this.gManager;}typeEvents=scope.typeEvents||scope.clusterEvents;typeOptions=scope.typeOptions||scope.clusterOptions;if(scope.doCluster||scope.type==='cluster'){if(typeEvents!=null){this.bindToTypeEvents(typeEvents);}this.gManager=new ClustererMarkerManager(this.map,void 0,typeOptions,typeEvents);}else if(scope.type==='spider'){if(typeEvents!=null){this.bindToTypeEvents(typeEvents,['spiderfy','unspiderfy']);}this.gManager=new SpiderfierMarkerManager(this.map,void 0,typeOptions,typeEvents,this.scope);if(isSpiderfied){this.gManager.spiderfy();}}else{this.gManager=new MarkerManager(this.map);}if(this.didQueueInitPromise(this,scope)){return;}maybeCanceled=null;return _async.promiseLock(this,uiGmapPromise.promiseTypes.create,'createAllNew',function(canceledMsg){return maybeCanceled=canceledMsg;},function(_this){return function(){return _async.each(scope.models,function(model){_this.newChildMarker(model,scope);return maybeCanceled;},_async.chunkSizeFrom(scope.chunk)).then(function(){_this.modelsRendered=true;if(scope.fit){_this.gManager.fit();}_this.gManager.draw();return _this.scope.pluralsUpdate.updateCtr+=1;},_async.chunkSizeFrom(scope.chunk));};}(this));};MarkersParentModel.prototype.rebuildAll=function(scope){var ref;if(!scope.doRebuild&&scope.doRebuild!==void 0){return;}if((ref=this.scope.plurals)!=null?ref.length:void 0){return this.onDestroy(scope).then(function(_this){return function(){return _this.createAllNew(scope);};}(this));}else{return this.createAllNew(scope);}};MarkersParentModel.prototype.pieceMeal=function(scope){var maybeCanceled,payload;if(scope.$$destroyed){return;}maybeCanceled=null;payload=null;if(this.modelsLength()&&this.scope.plurals.length){return _async.promiseLock(this,uiGmapPromise.promiseTypes.update,'pieceMeal',function(canceledMsg){return maybeCanceled=canceledMsg;},function(_this){return function(){return uiGmapPromise.promise(function(){return _this.figureOutState(_this.idKey,scope,_this.scope.plurals,_this.modelKeyComparison);}).then(function(state){payload=state;return _async.each(payload.removals,function(child){if(child!=null){if(child.destroy!=null){child.destroy();}_this.scope.plurals.remove(child.id);return maybeCanceled;}},_async.chunkSizeFrom(scope.chunk));}).then(function(){return _async.each(payload.adds,function(modelToAdd){_this.newChildMarker(modelToAdd,scope);return maybeCanceled;},_async.chunkSizeFrom(scope.chunk));}).then(function(){return _async.each(payload.updates,function(update){_this.updateChild(update.child,update.model);return maybeCanceled;},_async.chunkSizeFrom(scope.chunk));}).then(function(){if(payload.adds.length>0||payload.removals.length>0||payload.updates.length>0){scope.plurals=_this.scope.plurals;if(scope.fit){_this.gManager.fit();}_this.gManager.draw();}return _this.scope.pluralsUpdate.updateCtr+=1;});};}(this));}else{this.inProgress=false;return this.rebuildAll(scope);}};MarkersParentModel.prototype.newChildMarker=function(model,scope){var child,childScope,keys;if(!model){throw'model undefined';}if(model[this.idKey]==null){this.$log.error("Marker model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");return;}this.$log.info('child',child,'markers',this.scope.markerModels);childScope=scope.$new(false);childScope.events=scope.events;keys={};IMarker.scopeKeys.forEach(function(k){return keys[k]=scope[k];});child=new MarkerChildModel({scope:childScope,model:model,keys:keys,gMap:this.map,defaults:this.DEFAULTS,doClick:this.doClick,gManager:this.gManager,doDrawSelf:false,isScopeModel:true});this.scope.plurals.put(model[this.idKey],child);return child;};MarkersParentModel.prototype.onDestroy=function(scope){MarkersParentModel.__super__.onDestroy.call(this,scope);return _async.promiseLock(this,uiGmapPromise.promiseTypes["delete"],void 0,void 0,function(_this){return function(){return _async.each(_this.scope.plurals.values(),function(model){if(model!=null){return model.destroy(false);}},_async.chunkSizeFrom(_this.scope.cleanchunk,false)).then(function(){if(_this.gManager!=null){_this.gManager.destroy();}_this.plurals.removeAll();if(_this.plurals!==_this.scope.plurals){console.error('plurals out of sync for MarkersParentModel');}return _this.scope.pluralsUpdate.updateCtr+=1;});};}(this));};MarkersParentModel.prototype.maybeExecMappedEvent=function(group,fnName){var pair,typeEvents;if(this.scope.$$destroyed){return;}typeEvents=this.scope.typeEvents||this.scope.clusterEvents;if(_.isFunction(typeEvents!=null?typeEvents[fnName]:void 0)){pair=this.mapTypeToPlurals(group);if(this.origTypeEvents[fnName]){return this.origTypeEvents[fnName](pair.group,pair.mapped);}}};MarkersParentModel.prototype.mapTypeToPlurals=function(group){var arrayToMap,mapped,ref;if(_.isArray(group)){arrayToMap=group;}else if(_.isFunction(group.getMarkers)){arrayToMap=group.getMarkers();}if(arrayToMap==null){$log.error("Unable to map event as we cannot find the array group to map");return;}if((ref=this.scope.plurals.values())!=null?ref.length:void 0){mapped=arrayToMap.map(function(_this){return function(g){return _this.scope.plurals.get(g.key).model;};}(this));}else{mapped=[];}return{cluster:group,mapped:mapped,group:group};};MarkersParentModel.prototype.getItem=function(scope,modelsPropToIterate,index){if(modelsPropToIterate==='models'){return scope[modelsPropToIterate][index];}return scope[modelsPropToIterate].get(index);};return MarkersParentModel;}(IMarkerParentModel);return MarkersParentModel;}]);}).call(this);;(function(){['Polygon','Polyline'].forEach(function(name){return angular.module('uiGmapgoogle-maps.directives.api.models.parent').factory("uiGmap"+name+"sParentModel",['uiGmapBasePolysParentModel',"uiGmap"+name+"ChildModel","uiGmapI"+name,function(BasePolysParentModel,ChildModel,IPoly){return BasePolysParentModel(IPoly,ChildModel,name);}]);});}).call(this);;/*globals angular, _, google */(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.parent').factory('uiGmapRectangleParentModel',['uiGmapLogger','uiGmapGmapUtil','uiGmapEventsHelper','uiGmapRectangleOptionsBuilder',function($log,GmapUtil,EventsHelper,Builder){var RectangleParentModel;return RectangleParentModel=function(superClass){extend(RectangleParentModel,superClass);RectangleParentModel.include(GmapUtil);RectangleParentModel.include(EventsHelper);function RectangleParentModel(scope,element,attrs,gMap,DEFAULTS){var bounds,clear,createBounds,dragging,fit,gObject,init,listeners,myListeners,settingBoundsFromScope,updateBounds;this.scope=scope;this.attrs=attrs;this.gMap=gMap;this.DEFAULTS=DEFAULTS;bounds=void 0;dragging=false;myListeners=[];listeners=void 0;fit=function(_this){return function(){if(_this.isTrue(_this.attrs.fit)){return _this.fitMapBounds(_this.gMap,bounds);}};}(this);createBounds=function(_this){return function(){var ref,ref1,ref2;if(_this.scope.bounds!=null&&((ref=_this.scope.bounds)!=null?ref.sw:void 0)!=null&&((ref1=_this.scope.bounds)!=null?ref1.ne:void 0)!=null&&_this.validateBoundPoints(_this.scope.bounds)){bounds=_this.convertBoundPoints(_this.scope.bounds);return $log.info("new new bounds created: "+JSON.stringify(bounds));}else if(_this.scope.bounds.getNorthEast!=null&&_this.scope.bounds.getSouthWest!=null){return bounds=_this.scope.bounds;}else{if(_this.scope.bounds!=null){return $log.error("Invalid bounds for newValue: "+JSON.stringify((ref2=_this.scope)!=null?ref2.bounds:void 0));}}};}(this);createBounds();gObject=new google.maps.Rectangle(this.buildOpts(bounds));$log.info("gObject (rectangle) created: "+gObject);settingBoundsFromScope=false;updateBounds=function(_this){return function(){var b,ne,sw;b=gObject.getBounds();ne=b.getNorthEast();sw=b.getSouthWest();if(settingBoundsFromScope){return;}return _this.scope.$evalAsync(function(s){if(s.bounds!=null&&s.bounds.sw!=null&&s.bounds.ne!=null){s.bounds.ne={latitude:ne.lat(),longitude:ne.lng()};s.bounds.sw={latitude:sw.lat(),longitude:sw.lng()};}if(s.bounds.getNorthEast!=null&&s.bounds.getSouthWest!=null){return s.bounds=b;}});};}(this);init=function(_this){return function(){fit();_this.removeEvents(myListeners);myListeners.push(google.maps.event.addListener(gObject,'dragstart',function(){return dragging=true;}));myListeners.push(google.maps.event.addListener(gObject,'dragend',function(){dragging=false;return updateBounds();}));return myListeners.push(google.maps.event.addListener(gObject,'bounds_changed',function(){if(dragging){return;}return updateBounds();}));};}(this);clear=function(_this){return function(){_this.removeEvents(myListeners);if(listeners!=null){_this.removeEvents(listeners);}return gObject.setMap(null);};}(this);if(bounds!=null){init();}this.scope.$watch('bounds',function(newValue,oldValue){var isNew;if(_.isEqual(newValue,oldValue)&&bounds!=null||dragging){return;}settingBoundsFromScope=true;if(newValue==null){clear();return;}if(bounds==null){isNew=true;}else{fit();}createBounds();gObject.setBounds(bounds);settingBoundsFromScope=false;if(isNew&&bounds!=null){return init();}},true);this.setMyOptions=function(_this){return function(newVals,oldVals){if(!_.isEqual(newVals,oldVals)){if(bounds!=null&&newVals!=null){return gObject.setOptions(_this.buildOpts(bounds));}}};}(this);this.props.push('bounds');this.watchProps(this.props);if(this.attrs.events!=null){listeners=this.setEvents(gObject,this.scope,this.scope);this.scope.$watch('events',function(_this){return function(newValue,oldValue){if(!_.isEqual(newValue,oldValue)){if(listeners!=null){_this.removeEvents(listeners);}return listeners=_this.setEvents(gObject,_this.scope,_this.scope);}};}(this));}this.scope.$on('$destroy',function(){return clear();});$log.info(this);}return RectangleParentModel;}(Builder);}]);}).call(this);;/*global angular:true, google:true */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.parent').factory('uiGmapSearchBoxParentModel',['uiGmapBaseObject','uiGmapLogger','uiGmapEventsHelper',function(BaseObject,Logger,EventsHelper){var SearchBoxParentModel;SearchBoxParentModel=function(superClass){extend(SearchBoxParentModel,superClass);SearchBoxParentModel.include(EventsHelper);function SearchBoxParentModel(scope,element,attrs,gMap,ctrlPosition,template,$log){var controlDiv;this.scope=scope;this.element=element;this.attrs=attrs;this.gMap=gMap;this.ctrlPosition=ctrlPosition;this.template=template;this.$log=$log!=null?$log:Logger;this.setVisibility=bind(this.setVisibility,this);this.getBounds=bind(this.getBounds,this);this.setBounds=bind(this.setBounds,this);this.createSearchBox=bind(this.createSearchBox,this);this.addToParentDiv=bind(this.addToParentDiv,this);this.addAsMapControl=bind(this.addAsMapControl,this);this.init=bind(this.init,this);if(this.attrs.template==null){this.$log.error('template attribute for the search-box directive is mandatory. Places Search Box creation aborted!!');return;}if(angular.isUndefined(this.scope.options)){this.scope.options={};this.scope.options.visible=true;}if(angular.isUndefined(this.scope.options.visible)){this.scope.options.visible=true;}if(angular.isUndefined(this.scope.options.autocomplete)){this.scope.options.autocomplete=false;}this.visible=this.scope.options.visible;this.autocomplete=this.scope.options.autocomplete;controlDiv=angular.element('<div></div>');controlDiv.append(this.template);this.input=controlDiv.find('input')[0];this.init();}SearchBoxParentModel.prototype.init=function(){this.createSearchBox();this.scope.$watch('options',function(_this){return function(newValue,oldValue){if(angular.isObject(newValue)){if(newValue.bounds!=null){_this.setBounds(newValue.bounds);}if(newValue.visible!=null){if(_this.visible!==newValue.visible){return _this.setVisibility(newValue.visible);}}}};}(this),true);if(this.attrs.parentdiv!=null){this.addToParentDiv();}else{this.addAsMapControl();}if(!this.visible){this.setVisibility(this.visible);}if(this.autocomplete){this.listener=google.maps.event.addListener(this.gObject,'place_changed',function(_this){return function(){return _this.places=_this.gObject.getPlace();};}(this));}else{this.listener=google.maps.event.addListener(this.gObject,'places_changed',function(_this){return function(){return _this.places=_this.gObject.getPlaces();};}(this));}this.listeners=this.setEvents(this.gObject,this.scope,this.scope);this.$log.info(this);this.scope.$on('$stateChangeSuccess',function(_this){return function(){if(_this.attrs.parentdiv!=null){return _this.addToParentDiv();}};}(this));return this.scope.$on('$destroy',function(_this){return function(){return _this.gObject=null;};}(this));};SearchBoxParentModel.prototype.addAsMapControl=function(){return this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].push(this.input);};SearchBoxParentModel.prototype.addToParentDiv=function(){var ref;this.parentDiv=angular.element(document.getElementById(this.scope.parentdiv));if((ref=this.parentDiv)!=null?ref.length:void 0){return this.parentDiv.append(this.input);}};SearchBoxParentModel.prototype.createSearchBox=function(){if(this.autocomplete){return this.gObject=new google.maps.places.Autocomplete(this.input,this.scope.options);}else{return this.gObject=new google.maps.places.SearchBox(this.input,this.scope.options);}};SearchBoxParentModel.prototype.setBounds=function(bounds){if(angular.isUndefined(bounds.isEmpty)){this.$log.error('Error: SearchBoxParentModel setBounds. Bounds not an instance of LatLngBounds.');}else{if(bounds.isEmpty()===false){if(this.gObject!=null){return this.gObject.setBounds(bounds);}}}};SearchBoxParentModel.prototype.getBounds=function(){return this.gObject.getBounds();};SearchBoxParentModel.prototype.setVisibility=function(val){if(this.attrs.parentdiv!=null){if(val===false){this.parentDiv.addClass("ng-hide");}else{this.parentDiv.removeClass("ng-hide");}}else{if(val===false){this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].clear();}else{this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].push(this.input);}}return this.visible=val;};return SearchBoxParentModel;}(BaseObject);return SearchBoxParentModel;}]);}).call(this);;/*global _,angular *//*
     WindowsChildModel generator where there are many ChildModels to a parent.
     */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api.models.parent').factory('uiGmapWindowsParentModel',['uiGmapIWindowParentModel','uiGmapModelsWatcher','uiGmapPropMap','uiGmapWindowChildModel','uiGmapLinked','uiGmap_async','uiGmapLogger','$timeout','$compile','$http','$templateCache','$interpolate','uiGmapPromise','uiGmapIWindow','uiGmapGmapUtil',function(IWindowParentModel,ModelsWatcher,PropMap,WindowChildModel,Linked,_async,$log,$timeout,$compile,$http,$templateCache,$interpolate,uiGmapPromise,IWindow,GmapUtil){var WindowsParentModel;WindowsParentModel=function(superClass){extend(WindowsParentModel,superClass);WindowsParentModel.include(ModelsWatcher);function WindowsParentModel(scope,element,attrs,ctrls,gMap1,markersScope){this.gMap=gMap1;this.markersScope=markersScope;this.modelKeyComparison=bind(this.modelKeyComparison,this);this.interpolateContent=bind(this.interpolateContent,this);this.setChildScope=bind(this.setChildScope,this);this.createWindow=bind(this.createWindow,this);this.setContentKeys=bind(this.setContentKeys,this);this.pieceMeal=bind(this.pieceMeal,this);this.createAllNew=bind(this.createAllNew,this);this.watchIdKey=bind(this.watchIdKey,this);this.createChildScopes=bind(this.createChildScopes,this);this.watchOurScope=bind(this.watchOurScope,this);this.watchDestroy=bind(this.watchDestroy,this);this.onDestroy=bind(this.onDestroy,this);this.rebuildAll=bind(this.rebuildAll,this);this.doINeedToWipe=bind(this.doINeedToWipe,this);this.watchModels=bind(this.watchModels,this);this.go=bind(this.go,this);WindowsParentModel.__super__.constructor.call(this,scope,element,attrs,ctrls,$timeout,$compile,$http,$templateCache);this["interface"]=IWindow;this.plurals=new PropMap();_.each(IWindow.scopeKeys,function(_this){return function(name){return _this[name+'Key']=void 0;};}(this));this.linked=new Linked(scope,element,attrs,ctrls);this.contentKeys=void 0;this.isIconVisibleOnClick=void 0;this.firstTime=true;this.firstWatchModels=true;this.$log.info(self);this.parentScope=void 0;this.go(scope);}WindowsParentModel.prototype.go=function(scope){this.watchOurScope(scope);this.doRebuildAll=this.scope.doRebuildAll!=null?this.scope.doRebuildAll:false;scope.$watch('doRebuildAll',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){return _this.doRebuildAll=newValue;}};}(this));return this.createChildScopes();};WindowsParentModel.prototype.watchModels=function(scope){var itemToWatch;itemToWatch=this.markersScope!=null?'pluralsUpdate':'models';return scope.$watch(itemToWatch,function(_this){return function(newValue,oldValue){var doScratch;if(!_.isEqual(newValue,oldValue)||_this.firstWatchModels){_this.firstWatchModels=false;if(_this.doRebuildAll||_this.doINeedToWipe(scope.models)){return _this.rebuildAll(scope,true,true);}else{doScratch=_this.plurals.length===0;if(_this.existingPieces!=null){return _.last(_this.existingPieces._content).then(function(){return _this.createChildScopes(doScratch);});}else{return _this.createChildScopes(doScratch);}}}};}(this),true);};WindowsParentModel.prototype.doINeedToWipe=function(newValue){var newValueIsEmpty;newValueIsEmpty=newValue!=null?newValue.length===0:true;return this.plurals.length>0&&newValueIsEmpty;};WindowsParentModel.prototype.rebuildAll=function(scope,doCreate,doDelete){return this.onDestroy(doDelete).then(function(_this){return function(){if(doCreate){return _this.createChildScopes();}};}(this));};WindowsParentModel.prototype.onDestroy=function(scope){WindowsParentModel.__super__.onDestroy.call(this,this.scope);return _async.promiseLock(this,uiGmapPromise.promiseTypes["delete"],void 0,void 0,function(_this){return function(){return _async.each(_this.plurals.values(),function(child){return child.destroy(true);},_async.chunkSizeFrom(_this.scope.cleanchunk,false)).then(function(){var ref;return(ref=_this.plurals)!=null?ref.removeAll():void 0;});};}(this));};WindowsParentModel.prototype.watchDestroy=function(scope){return scope.$on('$destroy',function(_this){return function(){_this.firstWatchModels=true;_this.firstTime=true;return _this.rebuildAll(scope,false,true);};}(this));};WindowsParentModel.prototype.watchOurScope=function(scope){return _.each(IWindow.scopeKeys,function(_this){return function(name){var nameKey;nameKey=name+'Key';return _this[nameKey]=typeof scope[name]==='function'?scope[name]():scope[name];};}(this));};WindowsParentModel.prototype.createChildScopes=function(isCreatingFromScratch){var modelsNotDefined,ref,ref1;if(isCreatingFromScratch==null){isCreatingFromScratch=true;}/*
                         being that we cannot tell the difference in Key String vs. a normal value string (TemplateUrl)
                         we will assume that all scope values are string expressions either pointing to a key (propName) or using
                         'self' to point the model as container/object of interest.

                         This may force redundant information into the model, but this appears to be the most flexible approach.
                         */this.isIconVisibleOnClick=true;if(angular.isDefined(this.linked.attrs.isiconvisibleonclick)){this.isIconVisibleOnClick=this.linked.scope.isIconVisibleOnClick;}modelsNotDefined=angular.isUndefined(this.linked.scope.models);if(modelsNotDefined&&(this.markersScope===void 0||((ref=this.markersScope)!=null?ref.plurals:void 0)===void 0||((ref1=this.markersScope)!=null?ref1.models:void 0)===void 0)){this.$log.error('No models to create windows from! Need direct models or models derived from markers!');return;}if(this.gMap!=null){if(this.linked.scope.models!=null){this.watchIdKey(this.linked.scope);if(isCreatingFromScratch){return this.createAllNew(this.linked.scope,false);}else{return this.pieceMeal(this.linked.scope,false);}}else{this.parentScope=this.markersScope;this.watchIdKey(this.parentScope);if(isCreatingFromScratch){return this.createAllNew(this.markersScope,true,'plurals',false);}else{return this.pieceMeal(this.markersScope,true,'plurals',false);}}}};WindowsParentModel.prototype.watchIdKey=function(scope){this.setIdKey(scope);return scope.$watch('idKey',function(_this){return function(newValue,oldValue){if(newValue!==oldValue&&newValue==null){_this.idKey=newValue;return _this.rebuildAll(scope,true,true);}};}(this));};WindowsParentModel.prototype.createAllNew=function(scope,hasGMarker,modelsPropToIterate,isArray){var maybeCanceled;if(modelsPropToIterate==null){modelsPropToIterate='models';}if(isArray==null){isArray=false;}if(this.firstTime){this.watchModels(scope);this.watchDestroy(scope);}this.setContentKeys(scope.models);if(this.didQueueInitPromise(this,scope)){return;}maybeCanceled=null;return _async.promiseLock(this,uiGmapPromise.promiseTypes.create,'createAllNew',function(canceledMsg){return maybeCanceled=canceledMsg;},function(_this){return function(){return _async.each(scope.models,function(model){var gMarker,ref;gMarker=hasGMarker?(ref=_this.getItem(scope,modelsPropToIterate,model[_this.idKey]))!=null?ref.gObject:void 0:void 0;if(!maybeCanceled){if(!gMarker&&_this.markersScope){$log.error('Unable to get gMarker from markersScope!');}_this.createWindow(model,gMarker,_this.gMap);}return maybeCanceled;},_async.chunkSizeFrom(scope.chunk)).then(function(){return _this.firstTime=false;});};}(this));};WindowsParentModel.prototype.pieceMeal=function(scope,hasGMarker,modelsPropToIterate,isArray){var maybeCanceled,payload;if(modelsPropToIterate==null){modelsPropToIterate='models';}if(isArray==null){isArray=true;}if(scope.$$destroyed){return;}maybeCanceled=null;payload=null;if(scope!=null&&this.modelsLength()&&this.plurals.length){return _async.promiseLock(this,uiGmapPromise.promiseTypes.update,'pieceMeal',function(canceledMsg){return maybeCanceled=canceledMsg;},function(_this){return function(){return uiGmapPromise.promise(function(){return _this.figureOutState(_this.idKey,scope,_this.plurals,_this.modelKeyComparison);}).then(function(state){payload=state;return _async.each(payload.removals,function(child){if(child!=null){_this.plurals.remove(child.id);if(child.destroy!=null){child.destroy(true);}return maybeCanceled;}},_async.chunkSizeFrom(scope.chunk));}).then(function(){return _async.each(payload.adds,function(modelToAdd){var gMarker,ref;gMarker=(ref=_this.getItem(scope,modelsPropToIterate,modelToAdd[_this.idKey]))!=null?ref.gObject:void 0;if(!gMarker){throw'Gmarker undefined';}_this.createWindow(modelToAdd,gMarker,_this.gMap);return maybeCanceled;});}).then(function(){return _async.each(payload.updates,function(update){_this.updateChild(update.child,update.model);return maybeCanceled;},_async.chunkSizeFrom(scope.chunk));});};}(this));}else{$log.debug('pieceMeal: rebuildAll');return this.rebuildAll(this.scope,true,true);}};WindowsParentModel.prototype.setContentKeys=function(models){if(this.modelsLength(models)){return this.contentKeys=Object.keys(models[0]);}};WindowsParentModel.prototype.createWindow=function(model,gMarker,gMap){var child,childScope,fakeElement,opts,ref,ref1;childScope=this.linked.scope.$new(false);this.setChildScope(childScope,model);childScope.$watch('model',function(_this){return function(newValue,oldValue){if(newValue!==oldValue){return _this.setChildScope(childScope,newValue);}};}(this),true);fakeElement={html:function(_this){return function(){return _this.interpolateContent(_this.linked.element.html(),model);};}(this)};this.DEFAULTS=this.scopeOrModelVal(this.optionsKey,this.scope,model)||{};opts=this.createWindowOptions(gMarker,childScope,fakeElement.html(),this.DEFAULTS);child=new WindowChildModel({model:model,scope:childScope,opts:opts,isIconVisibleOnClick:this.isIconVisibleOnClick,gMap:gMap,markerScope:(ref=this.markersScope)!=null?(ref1=ref.plurals.get(model[this.idKey]))!=null?ref1.scope:void 0:void 0,element:fakeElement,needToManualDestroy:false,markerIsVisibleAfterWindowClose:true,isScopeModel:true});if(model[this.idKey]==null){this.$log.error('Window model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.');return;}this.plurals.put(model[this.idKey],child);return child;};WindowsParentModel.prototype.setChildScope=function(childScope,model){_.each(IWindow.scopeKeys,function(_this){return function(name){var nameKey,newValue;nameKey=name+'Key';newValue=_this[nameKey]==='self'?model:model[_this[nameKey]];if(newValue!==childScope[name]){return childScope[name]=newValue;}};}(this));return childScope.model=model;};WindowsParentModel.prototype.interpolateContent=function(content,model){var exp,i,interpModel,key,len,ref;if(this.contentKeys===void 0||this.contentKeys.length===0){return;}exp=$interpolate(content);interpModel={};ref=this.contentKeys;for(i=0,len=ref.length;i<len;i++){key=ref[i];interpModel[key]=model[key];}return exp(interpModel);};WindowsParentModel.prototype.modelKeyComparison=function(model1,model2){var isEqual,scope;scope=this.scope.coords!=null?this.scope:this.parentScope;if(scope==null){throw'No scope or parentScope set!';}isEqual=GmapUtil.equalCoords(this.evalModelHandle(model1,scope.coords),this.evalModelHandle(model2,scope.coords));if(!isEqual){return isEqual;}isEqual=_.every(_.without(this["interface"].scopeKeys,'coords'),function(_this){return function(k){return _this.evalModelHandle(model1,scope[k])===_this.evalModelHandle(model2,scope[k]);};}(this));return isEqual;};return WindowsParentModel;}(IWindowParentModel);return WindowsParentModel;}]);}).call(this);;/*global angular, _ */(function(){angular.module("uiGmapgoogle-maps.directives.api").factory("uiGmapCircle",["uiGmapICircle","uiGmapCircleParentModel",function(ICircle,CircleParentModel){return _.extend(ICircle,{link:function link(scope,element,attrs,mapCtrl){return mapCtrl.getScope().deferred.promise.then(function(gMap){return new CircleParentModel(scope,element,attrs,gMap);});}});}]);}).call(this);;(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module("uiGmapgoogle-maps.directives.api").factory("uiGmapControl",["uiGmapIControl","$http","$templateCache","$compile","$controller",'uiGmapGoogleMapApi',function(IControl,$http,$templateCache,$compile,$controller,GoogleMapApi){var Control;return Control=function(superClass){extend(Control,superClass);function Control(){this.link=bind(this.link,this);Control.__super__.constructor.call(this);}Control.prototype.transclude=true;Control.prototype.link=function(scope,element,attrs,ctrl,transclude){return GoogleMapApi.then(function(_this){return function(maps){var hasTranscludedContent,index,position;hasTranscludedContent=angular.isUndefined(scope.template);index=angular.isDefined(scope.index&&!isNaN(parseInt(scope.index)))?parseInt(scope.index):void 0;position=angular.isDefined(scope.position)?scope.position.toUpperCase().replace(/-/g,'_'):'TOP_CENTER';if(!maps.ControlPosition[position]){_this.$log.error('mapControl: invalid position property');return;}return IControl.mapPromise(scope,ctrl).then(function(map){var control,controlDiv,pushControl;control=void 0;controlDiv=angular.element('<div></div>');pushControl=function pushControl(map,control,index){if(index){control[0].index=index;}return map.controls[google.maps.ControlPosition[position]].push(control[0]);};if(hasTranscludedContent){return transclude(function(transcludeEl){controlDiv.append(transcludeEl);return pushControl(map,controlDiv.children(),index);});}else{return $http.get(scope.template,{cache:$templateCache}).then(function(arg){var data,templateCtrl,templateScope;data=arg.data;templateScope=scope.$new();controlDiv.append(data);if(angular.isDefined(scope.controller)){templateCtrl=$controller(scope.controller,{$scope:templateScope});controlDiv.children().data('$ngControllerController',templateCtrl);}return control=$compile(controlDiv.children())(templateScope);})["catch"](function(error){return _this.$log.error('mapControl: template could not be found');}).then(function(){return pushControl(map,control,index);});}});};}(this));};return Control;}(IControl);}]);}).call(this);;/*globals angular, _ */(function(){angular.module('uiGmapgoogle-maps.directives.api').service('uiGmapDragZoom',['uiGmapCtrlHandle','uiGmapPropertyAction',function(CtrlHandle,PropertyAction){return{restrict:'EMA',transclude:true,template:'<div class="angular-google-map-dragzoom" ng-transclude style="display: none"></div>',require:'^'+'uiGmapGoogleMap',scope:{keyboardkey:'=',options:'=',spec:'='},controller:['$scope','$element',function($scope,$element){$scope.ctrlType='uiGmapDragZoom';return _.extend(this,CtrlHandle.handle($scope,$element));}],link:function link(scope,element,attrs,ctrl){return CtrlHandle.mapPromise(scope,ctrl).then(function(map){var enableKeyDragZoom,setKeyAction,setOptionsAction;enableKeyDragZoom=function enableKeyDragZoom(opts){return map.enableKeyDragZoom(opts);};setKeyAction=new PropertyAction(function(key,newVal){if(newVal){return enableKeyDragZoom({key:newVal});}else{return enableKeyDragZoom();}});setOptionsAction=new PropertyAction(function(key,newVal){if(newVal){return enableKeyDragZoom(newVal);}});scope.$watch('keyboardkey',setKeyAction.sic('keyboardkey'));setKeyAction.sic(scope.keyboardkey);scope.$watch('options',setOptionsAction.sic('options'));return setOptionsAction.sic(scope.options);});}};}]);}).call(this);;(function(){angular.module("uiGmapgoogle-maps.directives.api").factory("uiGmapDrawingManager",["uiGmapIDrawingManager","uiGmapDrawingManagerParentModel",function(IDrawingManager,DrawingManagerParentModel){return _.extend(IDrawingManager,{link:function link(scope,element,attrs,mapCtrl){return mapCtrl.getScope().deferred.promise.then(function(map){return new DrawingManagerParentModel(scope,element,attrs,map);});}});}]);}).call(this);;/*
     - Link up Polygons to be sent back to a controller
     - inject the draw function into a controllers scope so that controller can call the directive to draw on demand
     - draw function creates the DrawFreeHandChildModel which manages itself
     */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapApiFreeDrawPolygons',['uiGmapLogger','uiGmapBaseObject','uiGmapCtrlHandle','uiGmapDrawFreeHandChildModel','uiGmapLodash',function($log,BaseObject,CtrlHandle,DrawFreeHandChildModel,uiGmapLodash){var FreeDrawPolygons;return FreeDrawPolygons=function(superClass){extend(FreeDrawPolygons,superClass);function FreeDrawPolygons(){this.link=bind(this.link,this);return FreeDrawPolygons.__super__.constructor.apply(this,arguments);}FreeDrawPolygons.include(CtrlHandle);FreeDrawPolygons.prototype.restrict='EMA';FreeDrawPolygons.prototype.replace=true;FreeDrawPolygons.prototype.require='^'+'uiGmapGoogleMap';FreeDrawPolygons.prototype.scope={polygons:'=',draw:'='};FreeDrawPolygons.prototype.link=function(scope,element,attrs,ctrl){return this.mapPromise(scope,ctrl).then(function(_this){return function(map){var freeHand,listener;if(!scope.polygons){return $log.error('No polygons to bind to!');}if(!_.isArray(scope.polygons)){return $log.error('Free Draw Polygons must be of type Array!');}freeHand=new DrawFreeHandChildModel(map,ctrl.getScope());listener=void 0;return scope.draw=function(){if(typeof listener==="function"){listener();}return freeHand.engage(scope.polygons).then(function(){var firstTime;firstTime=true;return listener=scope.$watchCollection('polygons',function(newValue,oldValue){var removals;if(firstTime||newValue===oldValue){firstTime=false;return;}removals=uiGmapLodash.differenceObjects(oldValue,newValue);return removals.forEach(function(p){return p.setMap(null);});});});};};}(this));};return FreeDrawPolygons;}(BaseObject);}]);}).call(this);;(function(){angular.module("uiGmapgoogle-maps.directives.api").service("uiGmapICircle",[function(){return{restrict:"EA",replace:true,require:'^'+'uiGmapGoogleMap',scope:{center:"=center",radius:"=radius",stroke:"=stroke",fill:"=fill",clickable:"=",draggable:"=",editable:"=",geodesic:"=",icons:"=icons",visible:"=",events:"=",control:"=",zIndex:"=zindex"}};}]);}).call(this);;/*
     - interface for all controls to derive from
     - to enforce a minimum set of requirements
     - attributes
     - template
     - position
     - controller
     - index
     */(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIControl",["uiGmapBaseObject","uiGmapLogger","uiGmapCtrlHandle",function(BaseObject,Logger,CtrlHandle){var IControl;return IControl=function(superClass){extend(IControl,superClass);IControl.extend(CtrlHandle);function IControl(){this.restrict='EA';this.replace=true;this.require='^'+'uiGmapGoogleMap';this.scope={template:'@template',position:'@position',controller:'@controller',index:'@index'};this.$log=Logger;}IControl.prototype.link=function(scope,element,attrs,ctrl){throw new Error("Not implemented!!");};return IControl;}(BaseObject);}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api').service('uiGmapIDrawingManager',[function(){return{restrict:'EA',replace:true,require:'^'+'uiGmapGoogleMap',scope:{"static":'@',control:'=',options:'=',events:'='}};}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapIMarker',['uiGmapBaseObject','uiGmapCtrlHandle',function(BaseObject,CtrlHandle){var IMarker;return IMarker=function(superClass){extend(IMarker,superClass);IMarker.scope={coords:'=coords',icon:'=icon',click:'&click',options:'=options',events:'=events',fit:'=fit',idKey:'=idkey',control:'=control'};IMarker.scopeKeys=_.keys(IMarker.scope);IMarker.keys=IMarker.scopeKeys;IMarker.extend(CtrlHandle);function IMarker(){this.restrict='EMA';this.require='^'+'uiGmapGoogleMap';this.priority=-1;this.transclude=true;this.replace=true;this.scope=_.extend(this.scope||{},IMarker.scope);}return IMarker;}(BaseObject);}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapIPolygon',['uiGmapGmapUtil','uiGmapBaseObject','uiGmapLogger','uiGmapCtrlHandle',function(GmapUtil,BaseObject,Logger,CtrlHandle){var IPolygon;return IPolygon=function(superClass){extend(IPolygon,superClass);IPolygon.scope={path:'=path',stroke:'=stroke',clickable:'=',draggable:'=',editable:'=',geodesic:'=',fill:'=',icons:'=icons',visible:'=',"static":'=',events:'=',zIndex:'=zindex',fit:'=',control:'=control'};IPolygon.scopeKeys=_.keys(IPolygon.scope);IPolygon.include(GmapUtil);IPolygon.extend(CtrlHandle);function IPolygon(){}IPolygon.prototype.restrict='EMA';IPolygon.prototype.replace=true;IPolygon.prototype.require='^'+'uiGmapGoogleMap';IPolygon.prototype.scope=IPolygon.scope;IPolygon.prototype.DEFAULTS={};IPolygon.prototype.$log=Logger;return IPolygon;}(BaseObject);}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapIPolyline',['uiGmapGmapUtil','uiGmapBaseObject','uiGmapLogger','uiGmapCtrlHandle',function(GmapUtil,BaseObject,Logger,CtrlHandle){var IPolyline;return IPolyline=function(superClass){extend(IPolyline,superClass);IPolyline.scope={path:'=',stroke:'=',clickable:'=',draggable:'=',editable:'=',geodesic:'=',icons:'=',visible:'=',"static":'=',fit:'=',events:'=',zIndex:'=zindex'};IPolyline.scopeKeys=_.keys(IPolyline.scope);IPolyline.include(GmapUtil);IPolyline.extend(CtrlHandle);function IPolyline(){}IPolyline.prototype.restrict='EMA';IPolyline.prototype.replace=true;IPolyline.prototype.require='^'+'uiGmapGoogleMap';IPolyline.prototype.scope=IPolyline.scope;IPolyline.prototype.DEFAULTS={};IPolyline.prototype.$log=Logger;return IPolyline;}(BaseObject);}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api').service('uiGmapIRectangle',[function(){'use strict';return{restrict:'EMA',require:'^'+'uiGmapGoogleMap',replace:true,scope:{bounds:'=',stroke:'=',clickable:'=',draggable:'=',editable:'=',fill:'=',visible:'=',events:'='}};}]);}).call(this);;(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapIWindow',['uiGmapBaseObject','uiGmapChildEvents','uiGmapCtrlHandle',function(BaseObject,ChildEvents,CtrlHandle){var IWindow;return IWindow=function(superClass){extend(IWindow,superClass);IWindow.scope={coords:'=coords',template:'=template',templateUrl:'=templateurl',templateParameter:'=templateparameter',isIconVisibleOnClick:'=isiconvisibleonclick',closeClick:'&closeclick',options:'=options',control:'=control',show:'=show'};IWindow.scopeKeys=_.keys(IWindow.scope);IWindow.include(ChildEvents);IWindow.extend(CtrlHandle);function IWindow(){this.restrict='EMA';this.template=void 0;this.transclude=true;this.priority=-100;this.require='^'+'uiGmapGoogleMap';this.replace=true;this.scope=_.extend(this.scope||{},IWindow.scope);}return IWindow;}(BaseObject);}]);}).call(this);;/*globals angular,_,google */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapMap',['$timeout','$q','$log','uiGmapGmapUtil','uiGmapBaseObject','uiGmapCtrlHandle','uiGmapIsReady','uiGmapuuid','uiGmapExtendGWin','uiGmapExtendMarkerClusterer','uiGmapGoogleMapsUtilV3','uiGmapGoogleMapApi','uiGmapEventsHelper','uiGmapGoogleMapObjectManager',function($timeout,$q,$log,uiGmapGmapUtil,uiGmapBaseObject,uiGmapCtrlHandle,uiGmapIsReady,uiGmapuuid,uiGmapExtendGWin,uiGmapExtendMarkerClusterer,uiGmapGoogleMapsUtilV3,uiGmapGoogleMapApi,uiGmapEventsHelper,uiGmapGoogleMapObjectManager){var DEFAULTS,Map,initializeItems;DEFAULTS=void 0;initializeItems=[uiGmapGoogleMapsUtilV3,uiGmapExtendGWin,uiGmapExtendMarkerClusterer];return Map=function(superClass){extend(Map,superClass);Map.include(uiGmapGmapUtil);function Map(){this.link=bind(this.link,this);var ctrlFn;ctrlFn=function ctrlFn($scope){var ctrlObj,retCtrl;retCtrl=void 0;$scope.$on('$destroy',function(){return uiGmapIsReady.decrement();});ctrlObj=uiGmapCtrlHandle.handle($scope);$scope.ctrlType='Map';$scope.deferred.promise.then(function(){return initializeItems.forEach(function(i){return i.init();});});ctrlObj.getMap=function(){return $scope.map;};retCtrl=_.extend(this,ctrlObj);return retCtrl;};this.controller=['$scope',ctrlFn];}Map.prototype.restrict='EMA';Map.prototype.transclude=true;Map.prototype.replace=false;Map.prototype.template="<div class=\"angular-google-map\"><div class=\"angular-google-map-container\">\n</div><div ng-transclude style=\"display: none\"></div></div>";Map.prototype.scope={center:'=',zoom:'=',dragging:'=',control:'=',options:'=',events:'=',eventOpts:'=',styles:'=',bounds:'=',update:'='};Map.prototype.link=function(scope,element,attrs){var listeners;listeners=[];scope.$on('$destroy',function(){uiGmapEventsHelper.removeEvents(listeners);if(attrs.recycleMapInstance==='true'&&scope.map){uiGmapGoogleMapObjectManager.recycleMapInstance(scope.map);return scope.map=null;}});scope.idleAndZoomChanged=false;return uiGmapGoogleMapApi.then(function(_this){return function(maps){var _gMap,customListeners,disabledEvents,dragging,el,eventName,getEventHandler,mapOptions,maybeHookToEvent,opts,ref,resolveSpawned,settingFromDirective,spawned,type,updateCenter,zoomPromise;DEFAULTS={mapTypeId:maps.MapTypeId.ROADMAP};spawned=uiGmapIsReady.spawn();resolveSpawned=function resolveSpawned(){return spawned.deferred.resolve({instance:spawned.instance,map:_gMap});};if(!angular.isDefined(scope.center)&&!angular.isDefined(scope.bounds)){$log.error('angular-google-maps: a center or bounds property is required');return;}if(!angular.isDefined(scope.center)){scope.center=new google.maps.LatLngBounds(_this.getCoords(scope.bounds.southwest),_this.getCoords(scope.bounds.northeast)).getCenter();}if(!angular.isDefined(scope.zoom)){scope.zoom=10;}el=angular.element(element);el.addClass('angular-google-map');opts={options:{}};if(attrs.options){opts.options=scope.options;}if(attrs.styles){opts.styles=scope.styles;}if(attrs.type){type=attrs.type.toUpperCase();if(google.maps.MapTypeId.hasOwnProperty(type)){opts.mapTypeId=google.maps.MapTypeId[attrs.type.toUpperCase()];}else{$log.error("angular-google-maps: invalid map type '"+attrs.type+"'");}}mapOptions=angular.extend({},DEFAULTS,opts,{center:_this.getCoords(scope.center),zoom:scope.zoom,bounds:scope.bounds});if(attrs.recycleMapInstance==='true'){_gMap=uiGmapGoogleMapObjectManager.createMapInstance(el.find('div')[1],mapOptions);}else{_gMap=new google.maps.Map(el.find('div')[1],mapOptions);}_gMap['uiGmap_id']=uiGmapuuid.generate();dragging=false;listeners.push(google.maps.event.addListenerOnce(_gMap,'idle',function(){scope.deferred.resolve(_gMap);return resolveSpawned();}));disabledEvents=attrs.events&&((ref=scope.events)!=null?ref.blacklist:void 0)!=null?scope.events.blacklist:[];if(_.isString(disabledEvents)){disabledEvents=[disabledEvents];}maybeHookToEvent=function maybeHookToEvent(eventName,fn,prefn){if(!_.includes(disabledEvents,eventName)){if(prefn){prefn();}return listeners.push(google.maps.event.addListener(_gMap,eventName,function(){var ref1;if(!((ref1=scope.update)!=null?ref1.lazy:void 0)){return fn();}}));}};if(!_.includes(disabledEvents,'all')){maybeHookToEvent('dragstart',function(){dragging=true;return scope.$evalAsync(function(s){if(s.dragging!=null){return s.dragging=dragging;}});});maybeHookToEvent('dragend',function(){dragging=false;return scope.$evalAsync(function(s){if(s.dragging!=null){return s.dragging=dragging;}});});updateCenter=function updateCenter(c,s){var cLat,cLng;if(c==null){c=_gMap.center;}if(s==null){s=scope;}if(!_.includes(disabledEvents,'center')){cLat=c.lat();cLng=c.lng();if(angular.isDefined(s.center.type)){if(s.center.coordinates[1]!==cLat){s.center.coordinates[1]=cLat;}if(s.center.coordinates[0]!==cLng){return s.center.coordinates[0]=cLng;}}else{if(s.center.latitude!==cLat){s.center.latitude=cLat;}if(s.center.longitude!==cLng){return s.center.longitude=cLng;}}}};settingFromDirective=false;maybeHookToEvent('idle',function(){var b,ne,sw;b=_gMap.getBounds();ne=b.getNorthEast();sw=b.getSouthWest();settingFromDirective=true;return scope.$evalAsync(function(s){updateCenter();if(!_.isUndefined(s.bounds)&&!_.includes(disabledEvents,'bounds')){s.bounds.northeast={latitude:ne.lat(),longitude:ne.lng()};s.bounds.southwest={latitude:sw.lat(),longitude:sw.lng()};}if(!_.includes(disabledEvents,'zoom')){s.zoom=_gMap.zoom;scope.idleAndZoomChanged=!scope.idleAndZoomChanged;}return settingFromDirective=false;});});}if(angular.isDefined(scope.events)&&scope.events!==null&&angular.isObject(scope.events)){getEventHandler=function getEventHandler(eventName){return function(){return scope.events[eventName].apply(scope,[_gMap,eventName,arguments]);};};customListeners=[];for(eventName in scope.events){if(scope.events.hasOwnProperty(eventName)&&angular.isFunction(scope.events[eventName])){customListeners.push(google.maps.event.addListener(_gMap,eventName,getEventHandler(eventName)));}}listeners.concat(customListeners);}_gMap.getOptions=function(){return mapOptions;};scope.map=_gMap;if(attrs.control!=null&&scope.control!=null){scope.control.refresh=function(maybeCoords){var coords,ref1,ref2;if(_gMap==null){return;}if((typeof google!=="undefined"&&google!==null?(ref1=google.maps)!=null?(ref2=ref1.event)!=null?ref2.trigger:void 0:void 0:void 0)!=null&&_gMap!=null){google.maps.event.trigger(_gMap,'resize');}if((maybeCoords!=null?maybeCoords.latitude:void 0)!=null&&(maybeCoords!=null?maybeCoords.longitude:void 0)!=null){coords=_this.getCoords(maybeCoords);if(_this.isTrue(attrs.pan)){return _gMap.panTo(coords);}else{return _gMap.setCenter(coords);}}};scope.control.getGMap=function(){return _gMap;};scope.control.getMapOptions=function(){return mapOptions;};scope.control.getCustomEventListeners=function(){return customListeners;};scope.control.removeEvents=function(yourListeners){return uiGmapEventsHelper.removeEvents(yourListeners);};}scope.$watch('center',function(newValue,oldValue){var coords;if(newValue===oldValue||settingFromDirective){return;}coords=_this.getCoords(scope.center);if(coords.lat()===_gMap.center.lat()&&coords.lng()===_gMap.center.lng()){return;}if(!dragging){if(!_this.validateCoords(newValue)){$log.error("Invalid center for newValue: "+JSON.stringify(newValue));}if(_this.isTrue(attrs.pan)&&scope.zoom===_gMap.zoom){return _gMap.panTo(coords);}else{return _gMap.setCenter(coords);}}},true);zoomPromise=null;scope.$watch('zoom',function(newValue,oldValue){var ref1,ref2;if(newValue==null){return;}if(_.isEqual(newValue,oldValue)||(_gMap!=null?_gMap.getZoom():void 0)===(scope!=null?scope.zoom:void 0)||settingFromDirective){return;}if(zoomPromise!=null){$timeout.cancel(zoomPromise);}return zoomPromise=$timeout(function(){return _gMap.setZoom(newValue);},((ref1=scope.eventOpts)!=null?(ref2=ref1.debounce)!=null?ref2.zoomMs:void 0:void 0)+20,false);});scope.$watch('bounds',function(newValue,oldValue){var bounds,ne,ref1,ref2,ref3,ref4,sw;if(newValue===oldValue){return;}if((newValue!=null?(ref1=newValue.northeast)!=null?ref1.latitude:void 0:void 0)==null||(newValue!=null?(ref2=newValue.northeast)!=null?ref2.longitude:void 0:void 0)==null||(newValue!=null?(ref3=newValue.southwest)!=null?ref3.latitude:void 0:void 0)==null||(newValue!=null?(ref4=newValue.southwest)!=null?ref4.longitude:void 0:void 0)==null){$log.error("Invalid map bounds for new value: "+JSON.stringify(newValue));return;}ne=new google.maps.LatLng(newValue.northeast.latitude,newValue.northeast.longitude);sw=new google.maps.LatLng(newValue.southwest.latitude,newValue.southwest.longitude);bounds=new google.maps.LatLngBounds(sw,ne);return _gMap.fitBounds(bounds);});return['options','styles'].forEach(function(toWatch){return scope.$watch(toWatch,function(newValue,oldValue){if(_.isEqual(newValue,oldValue)){return;}if(toWatch==='options'){opts.options=newValue;}else{opts.options[toWatch]=newValue;}if(_gMap!=null){return _gMap.setOptions(opts);}},true);});};}(this));};return Map;}(uiGmapBaseObject);}]);}).call(this);;/*global _:true,angular:true */(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMarker",["uiGmapIMarker","uiGmapMarkerChildModel","uiGmapMarkerManager","uiGmapLogger",function(IMarker,MarkerChildModel,MarkerManager,$log){var Marker;return Marker=function(superClass){extend(Marker,superClass);function Marker(){Marker.__super__.constructor.call(this);this.template='<span class="angular-google-map-marker" ng-transclude></span>';$log.info(this);}Marker.prototype.controller=['$scope','$element',function($scope,$element){$scope.ctrlType='Marker';return _.extend(this,IMarker.handle($scope,$element));}];Marker.prototype.link=function(scope,element,attrs,ctrl){var mapPromise;mapPromise=IMarker.mapPromise(scope,ctrl);mapPromise.then(function(gMap){var gManager,keys,m;gManager=new MarkerManager(gMap);keys=_.object(IMarker.keys,IMarker.keys);m=new MarkerChildModel({scope:scope,model:scope,keys:keys,gMap:gMap,doClick:true,gManager:gManager,doDrawSelf:false,trackModel:false});m.deferred.promise.then(function(gMarker){return scope.deferred.resolve(gMarker);});if(scope.control!=null){return scope.control.getGMarkers=gManager.getGMarkers;}});return scope.$on('$destroy',function(){var gManager;if(typeof gManager!=="undefined"&&gManager!==null){gManager.clear();}return gManager=null;});};return Marker;}(IMarker);}]);}).call(this);;/*global _:true,angular:true */(function(){var extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMarkers",["uiGmapIMarker","uiGmapPlural","uiGmapMarkersParentModel","uiGmap_sync","uiGmapLogger",function(IMarker,Plural,MarkersParentModel,_sync,$log){var Markers;return Markers=function(superClass){extend(Markers,superClass);function Markers(){Markers.__super__.constructor.call(this);this.template='<span class="angular-google-map-markers" ng-transclude></span>';Plural.extend(this,{doCluster:'=?docluster',clusterOptions:'=clusteroptions',clusterEvents:'=clusterevents',modelsByRef:'=modelsbyref',type:'=?type',typeOptions:'=?typeoptions',typeEvents:'=?typeevents',deepComparison:'=?deepcomparison'});$log.info(this);}Markers.prototype.controller=['$scope','$element',function($scope,$element){$scope.ctrlType='Markers';return _.extend(this,IMarker.handle($scope,$element));}];Markers.prototype.link=function(scope,element,attrs,ctrl){var parentModel,ready;parentModel=void 0;ready=function ready(){return scope.deferred.resolve();};return IMarker.mapPromise(scope,ctrl).then(function(map){var mapScope;mapScope=ctrl.getScope();mapScope.$watch('idleAndZoomChanged',function(){return _.defer(parentModel.gManager.draw);});parentModel=new MarkersParentModel(scope,element,attrs,map);Plural.link(scope,parentModel);if(scope.control!=null){scope.control.getGMarkers=function(){var ref;return(ref=parentModel.gManager)!=null?ref.getGMarkers():void 0;};scope.control.getChildMarkers=function(){return parentModel.plurals;};}return _.last(parentModel.existingPieces._content).then(function(){return ready();});});};return Markers;}(IMarker);}]);}).call(this);;/*global angular */(function(){angular.module('uiGmapgoogle-maps.directives.api').service('uiGmapPlural',[function(){var _initControl;_initControl=function _initControl(scope,parent){if(scope.control==null){return;}scope.control.updateModels=function(models){scope.models=models;return parent.createChildScopes(false);};scope.control.newModels=function(models){scope.models=models;return parent.rebuildAll(scope,true,true);};scope.control.clean=function(){return parent.rebuildAll(scope,false,true);};scope.control.getPlurals=function(){return parent.plurals;};scope.control.getManager=function(){return parent.gManager;};scope.control.hasManager=function(){return parent.gManager!=null===true;};return scope.control.managerDraw=function(){var ref;if(scope.control.hasManager()){return(ref=scope.control.getManager())!=null?ref.draw():void 0;}};};return{extend:function extend(obj,obj2){return _.extend(obj.scope||{},obj2||{},{idKey:'=idkey',doRebuildAll:'=dorebuildall',models:'=models',chunk:'=chunk',cleanchunk:'=cleanchunk',control:'=control',deepComparison:'=deepcomparison'});},link:function link(scope,parent){return _initControl(scope,parent);}};}]);}).call(this);;/*global angular */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapPolygon',['uiGmapIPolygon','$timeout','uiGmapPolygonChildModel',function(IPolygon,$timeout,PolygonChild){var Polygon;return Polygon=function(superClass){extend(Polygon,superClass);function Polygon(){this.link=bind(this.link,this);return Polygon.__super__.constructor.apply(this,arguments);}Polygon.prototype.link=function(scope,element,attrs,mapCtrl){var children,promise;children=[];promise=IPolygon.mapPromise(scope,mapCtrl);if(scope.control!=null){scope.control.getInstance=this;scope.control.polygons=children;scope.control.promise=promise;}return promise.then(function(_this){return function(gMap){return children.push(new PolygonChild({scope:scope,attrs:attrs,gMap:gMap,defaults:_this.DEFAULTS}));};}(this));};return Polygon;}(IPolygon);}]);}).call(this);;/*global angular:true */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapPolygons',['uiGmapIPolygon','$timeout','uiGmapPolygonsParentModel','uiGmapPlural',function(Interface,$timeout,ParentModel,Plural){var Polygons;return Polygons=function(superClass){extend(Polygons,superClass);function Polygons(){this.link=bind(this.link,this);Polygons.__super__.constructor.call(this);Plural.extend(this);this.$log.info(this);}Polygons.prototype.link=function(scope,element,attrs,mapCtrl){return mapCtrl.getScope().deferred.promise.then(function(_this){return function(map){if(angular.isUndefined(scope.path)||scope.path===null){_this.$log.warn('polygons: no valid path attribute found');}if(!scope.models){_this.$log.warn('polygons: no models found to create from');}return Plural.link(scope,new ParentModel(scope,element,attrs,map,_this.DEFAULTS));};}(this));};return Polygons;}(Interface);}]);}).call(this);;/*global angular */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapPolyline',['uiGmapIPolyline','$timeout','uiGmapPolylineChildModel',function(IPolyline,$timeout,PolylineChildModel){var Polyline;return Polyline=function(superClass){extend(Polyline,superClass);function Polyline(){this.link=bind(this.link,this);return Polyline.__super__.constructor.apply(this,arguments);}Polyline.prototype.link=function(scope,element,attrs,mapCtrl){return IPolyline.mapPromise(scope,mapCtrl).then(function(_this){return function(gMap){if(angular.isUndefined(scope.path)||scope.path===null||!_this.validatePath(scope.path)){_this.$log.warn('polyline: no valid path attribute found');}return new PolylineChildModel({scope:scope,attrs:attrs,gMap:gMap,defaults:_this.DEFAULTS});};}(this));};return Polyline;}(IPolyline);}]);}).call(this);;/*global angular */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapPolylines',['uiGmapIPolyline','$timeout','uiGmapPolylinesParentModel','uiGmapPlural',function(IPolyline,$timeout,PolylinesParentModel,Plural){var Polylines;return Polylines=function(superClass){extend(Polylines,superClass);function Polylines(){this.link=bind(this.link,this);Polylines.__super__.constructor.call(this);Plural.extend(this);this.$log.info(this);}Polylines.prototype.link=function(scope,element,attrs,mapCtrl){return mapCtrl.getScope().deferred.promise.then(function(_this){return function(gMap){if(angular.isUndefined(scope.path)||scope.path===null){_this.$log.warn('polylines: no valid path attribute found');}if(!scope.models){_this.$log.warn('polylines: no models found to create from');}return Plural.link(scope,new PolylinesParentModel(scope,element,attrs,gMap,_this.DEFAULTS));};}(this));};return Polylines;}(IPolyline);}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapRectangle',['uiGmapLogger','uiGmapGmapUtil','uiGmapIRectangle','uiGmapRectangleParentModel',function($log,GmapUtil,IRectangle,RectangleParentModel){return _.extend(IRectangle,{link:function link(scope,element,attrs,mapCtrl){return mapCtrl.getScope().deferred.promise.then(function(gMap){return new RectangleParentModel(scope,element,attrs,gMap);});}});}]);}).call(this);;/*global angular:true */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapWindow',['uiGmapIWindow','uiGmapGmapUtil','uiGmapWindowChildModel','uiGmapLodash','uiGmapLogger',function(IWindow,GmapUtil,WindowChildModel,uiGmapLodash,$log){var Window;return Window=function(superClass){extend(Window,superClass);Window.include(GmapUtil);function Window(){this.link=bind(this.link,this);Window.__super__.constructor.call(this);this.require=['^'+'uiGmapGoogleMap','^?'+'uiGmapMarker'];this.template='<span class="angular-google-maps-window" ng-transclude></span>';$log.debug(this);this.childWindows=[];}Window.prototype.link=function(scope,element,attrs,ctrls){var markerCtrl,markerScope;markerCtrl=ctrls.length>1&&ctrls[1]!=null?ctrls[1]:void 0;markerScope=markerCtrl!=null?markerCtrl.getScope():void 0;this.mapPromise=IWindow.mapPromise(scope,ctrls[0]);return this.mapPromise.then(function(_this){return function(gMap){var isIconVisibleOnClick;isIconVisibleOnClick=true;if(angular.isDefined(attrs.isiconvisibleonclick)){isIconVisibleOnClick=scope.isIconVisibleOnClick;}if(!markerCtrl){_this.init(scope,element,isIconVisibleOnClick,gMap);return;}return markerScope.deferred.promise.then(function(gMarker){return _this.init(scope,element,isIconVisibleOnClick,gMap,markerScope);});};}(this));};Window.prototype.init=function(scope,element,isIconVisibleOnClick,gMap,markerScope){var childWindow,defaults,gMarker,hasScopeCoords,opts;defaults=scope.options!=null?scope.options:{};hasScopeCoords=scope!=null&&this.validateCoords(scope.coords);if((markerScope!=null?markerScope['getGMarker']:void 0)!=null){gMarker=markerScope.getGMarker();}opts=hasScopeCoords?this.createWindowOptions(gMarker,scope,element.html(),defaults):defaults;if(gMap!=null){childWindow=new WindowChildModel({scope:scope,opts:opts,isIconVisibleOnClick:isIconVisibleOnClick,gMap:gMap,markerScope:markerScope,element:element});this.childWindows.push(childWindow);scope.$on('$destroy',function(_this){return function(){_this.childWindows=uiGmapLodash.withoutObjects(_this.childWindows,[childWindow],function(child1,child2){return child1.scope.$id===child2.scope.$id;});return _this.childWindows.length=0;};}(this));}if(scope.control!=null){scope.control.getGWindows=function(_this){return function(){return _this.childWindows.map(function(child){return child.gObject;});};}(this);scope.control.getChildWindows=function(_this){return function(){return _this.childWindows;};}(this);scope.control.getPlurals=scope.control.getChildWindows;scope.control.showWindow=function(_this){return function(){return _this.childWindows.map(function(child){return child.showWindow();});};}(this);scope.control.hideWindow=function(_this){return function(){return _this.childWindows.map(function(child){return child.hideWindow();});};}(this);}if(this.onChildCreation!=null&&childWindow!=null){return this.onChildCreation(childWindow);}};return Window;}(IWindow);}]);}).call(this);;/*global angular */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},hasProp={}.hasOwnProperty;angular.module('uiGmapgoogle-maps.directives.api').factory('uiGmapWindows',['uiGmapIWindow','uiGmapPlural','uiGmapWindowsParentModel','uiGmapPromise','uiGmapLogger',function(IWindow,Plural,WindowsParentModel,uiGmapPromise,$log){/*
                 Windows directive where many windows map to the models property
                 */var Windows;return Windows=function(superClass){extend(Windows,superClass);function Windows(){this.link=bind(this.link,this);Windows.__super__.constructor.call(this);this.require=['^'+'uiGmapGoogleMap','^?'+'uiGmapMarkers'];this.template='<span class="angular-google-maps-windows" ng-transclude></span>';Plural.extend(this);$log.debug(this);}Windows.prototype.link=function(scope,element,attrs,ctrls){var mapScope,markerCtrl,markerScope;mapScope=ctrls[0].getScope();markerCtrl=ctrls.length>1&&ctrls[1]!=null?ctrls[1]:void 0;markerScope=markerCtrl!=null?markerCtrl.getScope():void 0;return mapScope.deferred.promise.then(function(_this){return function(map){var promise,ref;promise=(markerScope!=null?(ref=markerScope.deferred)!=null?ref.promise:void 0:void 0)||uiGmapPromise.resolve();return promise.then(function(){var pieces,ref1;pieces=(ref1=_this.parentModel)!=null?ref1.existingPieces:void 0;if(pieces){return pieces.then(function(){return _this.init(scope,element,attrs,ctrls,map,markerScope);});}else{return _this.init(scope,element,attrs,ctrls,map,markerScope);}});};}(this));};Windows.prototype.init=function(scope,element,attrs,ctrls,map,additionalScope){var parentModel;parentModel=new WindowsParentModel(scope,element,attrs,ctrls,map,additionalScope);Plural.link(scope,parentModel);if(scope.control!=null){scope.control.getGWindows=function(){return parentModel.plurals.map(function(child){return child.gObject;});};return scope.control.getChildWindows=function(){return parentModel.plurals;};}};return Windows;}(IWindow);}]);}).call(this);;/*
     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     Nick Baugh - https://github.com/niftylettuce
     *//*globals angular */(function(){angular.module("uiGmapgoogle-maps").directive("uiGmapGoogleMap",['uiGmapMap',function(uiGmapMap){return new uiGmapMap();}]);}).call(this);;/*
     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     *//*
     Map marker directive

     This directive is used to create a marker on an existing map.
     This directive creates a new scope.

     {attribute coords required}  object containing latitude and longitude properties
     {attribute icon optional}    string url to image used for marker icon
     {attribute animate optional} if set to false, the marker won't be animated (on by default)
     */(function(){angular.module('uiGmapgoogle-maps').directive('uiGmapMarker',['$timeout','uiGmapMarker',function($timeout,Marker){return new Marker($timeout);}]);}).call(this);;/*
     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     *//*
     Map marker directive

     This directive is used to create a marker on an existing map.
     This directive creates a new scope.

     {attribute coords required}  object containing latitude and longitude properties
     {attribute icon optional}    string url to image used for marker icon
     {attribute animate optional} if set to false, the marker won't be animated (on by default)
     */(function(){angular.module('uiGmapgoogle-maps').directive('uiGmapMarkers',['$timeout','uiGmapMarkers',function($timeout,Markers){return new Markers($timeout);}]);}).call(this);;/*
     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     Rick Huizinga - https://plus.google.com/+RickHuizinga
     */(function(){angular.module('uiGmapgoogle-maps').directive('uiGmapPolygon',['uiGmapPolygon',function(Polygon){return new Polygon();}]);}).call(this);;/*
     @authors
     Julian Popescu - https://github.com/jpopesculian
     Rick Huizinga - https://plus.google.com/+RickHuizinga
     */(function(){angular.module('uiGmapgoogle-maps').directive("uiGmapCircle",["uiGmapCircle",function(Circle){return Circle;}]);}).call(this);;/*
     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     */(function(){angular.module("uiGmapgoogle-maps").directive("uiGmapPolyline",["uiGmapPolyline",function(Polyline){return new Polyline();}]);}).call(this);;/*
     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     */(function(){angular.module('uiGmapgoogle-maps').directive('uiGmapPolylines',['uiGmapPolylines',function(Polylines){return new Polylines();}]);}).call(this);;/*
     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     Chentsu Lin - https://github.com/ChenTsuLin
     */(function(){angular.module("uiGmapgoogle-maps").directive("uiGmapRectangle",["uiGmapLogger","uiGmapRectangle",function($log,Rectangle){return Rectangle;}]);}).call(this);;/*
     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     *//*
     Map info window directive

     This directive is used to create an info window on an existing map.
     This directive creates a new scope.

     {attribute coords required}  object containing latitude and longitude properties
     {attribute show optional}    map will show when this expression returns true
     */(function(){angular.module("uiGmapgoogle-maps").directive("uiGmapWindow",["$timeout","$compile","$http","$templateCache","uiGmapWindow",function($timeout,$compile,$http,$templateCache,Window){return new Window($timeout,$compile,$http,$templateCache);}]);}).call(this);;/*
     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     *//*
     Map info window directive

     This directive is used to create an info window on an existing map.
     This directive creates a new scope.

     {attribute coords required}  object containing latitude and longitude properties
     {attribute show optional}    map will show when this expression returns true
     */(function(){angular.module("uiGmapgoogle-maps").directive("uiGmapWindows",["$timeout","$compile","$http","$templateCache","$interpolate","uiGmapWindows",function($timeout,$compile,$http,$templateCache,$interpolate,Windows){return new Windows($timeout,$compile,$http,$templateCache,$interpolate);}]);}).call(this);;/*
     @authors:
     - Nicolas Laplante https://plus.google.com/108189012221374960701
     - Nicholas McCready - https://twitter.com/nmccready
     *//*
     Map Layer directive

     This directive is used to create any type of Layer from the google maps sdk.
     This directive creates a new scope.

     {attribute show optional}  true (default) shows the trafficlayer otherwise it is hidden
     */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};};angular.module('uiGmapgoogle-maps').directive('uiGmapLayer',['$timeout','uiGmapLogger','uiGmapLayerParentModel',function($timeout,Logger,LayerParentModel){var Layer;Layer=function(){function Layer(){this.link=bind(this.link,this);this.$log=Logger;this.restrict='EMA';this.require='^'+'uiGmapGoogleMap';this.priority=-1;this.transclude=true;this.template='<span class=\'angular-google-map-layer\' ng-transclude></span>';this.replace=true;this.scope={show:'=show',type:'=type',namespace:'=namespace',options:'=options',onCreated:'&oncreated'};}Layer.prototype.link=function(scope,element,attrs,mapCtrl){return mapCtrl.getScope().deferred.promise.then(function(_this){return function(map){if(scope.onCreated!=null){return new LayerParentModel(scope,element,attrs,map,scope.onCreated);}else{return new LayerParentModel(scope,element,attrs,map);}};}(this));};return Layer;}();return new Layer();}]);}).call(this);;/*
     @authors
     Adam Kreitals, kreitals@hotmail.com
     *//*
     mapControl directive

     This directive is used to create a custom control element on an existing map.
     This directive creates a new scope.

     {attribute template required}  	string url of the template to be used for the control
     {attribute position optional}  	string position of the control of the form top-left or TOP_LEFT defaults to TOP_CENTER
     {attribute controller optional}	string controller to be applied to the template
     {attribute index optional}		number index for controlling the order of similarly positioned mapControl elements
     */(function(){angular.module("uiGmapgoogle-maps").directive("uiGmapMapControl",["uiGmapControl",function(Control){return new Control();}]);}).call(this);;/*
     @authors
     Nicholas McCready - https://twitter.com/nmccready
     */(function(){angular.module('uiGmapgoogle-maps').directive('uiGmapDragZoom',['uiGmapDragZoom',function(DragZoom){return DragZoom;}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps').directive("uiGmapDrawingManager",["uiGmapDrawingManager",function(DrawingManager){return DrawingManager;}]);}).call(this);;/*
     @authors
     Nicholas McCready - https://twitter.com/nmccready
     * Brunt of the work is in DrawFreeHandChildModel
     */(function(){angular.module('uiGmapgoogle-maps').directive('uiGmapFreeDrawPolygons',['uiGmapApiFreeDrawPolygons',function(FreeDrawPolygons){return new FreeDrawPolygons();}]);}).call(this);;/*
     Map Layer directive

     This directive is used to create any type of Layer from the google maps sdk.
     This directive creates a new scope.

     {attribute show optional}  true (default) shows the trafficlayer otherwise it is hidden
     */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};};angular.module("uiGmapgoogle-maps").directive("uiGmapMapType",["$timeout","uiGmapLogger","uiGmapMapTypeParentModel",function($timeout,Logger,MapTypeParentModel){var MapType;MapType=function(){function MapType(){this.link=bind(this.link,this);this.$log=Logger;this.restrict="EMA";this.require='^'+'uiGmapGoogleMap';this.priority=-1;this.transclude=true;this.template='<span class=\"angular-google-map-layer\" ng-transclude></span>';this.replace=true;this.scope={show:"=show",options:'=options',refresh:'=refresh',id:'@'};}MapType.prototype.link=function(scope,element,attrs,mapCtrl){return mapCtrl.getScope().deferred.promise.then(function(_this){return function(map){return new MapTypeParentModel(scope,element,attrs,map);};}(this));};return MapType;}();return new MapType();}]);}).call(this);;/*
     Map Layers directive

     This directive is used to create any type of Layer from the google maps sdk.
     This directive creates a new scope.
     */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};};angular.module('uiGmapgoogle-maps').directive("uiGmapMapTypes",["$timeout","uiGmapLogger","uiGmapMapTypesParentModel",function($timeout,Logger,MapTypesParentModel){var MapTypes;MapTypes=function(){function MapTypes(){this.link=bind(this.link,this);this.$log=Logger;this.restrict="EMA";this.require='^'+'uiGmapGoogleMap';this.priority=-1;this.transclude=true;this.template='<span class=\"angular-google-map-layers\" ng-transclude></span>';this.scope={mapTypes:"=mapTypes",show:"=show",options:"=options",refresh:"=refresh",id:"=idKey"};}MapTypes.prototype.link=function(scope,element,attrs,mapCtrl){return mapCtrl.getScope().deferred.promise.then(function(_this){return function(map){return new MapTypesParentModel(scope,element,attrs,map);};}(this));};return MapTypes;}();return new MapTypes();}]);}).call(this);;/*
     @authors
     Nicolas Laplante - https://plus.google.com/108189012221374960701
     Nicholas McCready - https://twitter.com/nmccready
     Rick Huizinga - https://plus.google.com/+RickHuizinga
     */(function(){angular.module('uiGmapgoogle-maps').directive('uiGmapPolygons',['uiGmapPolygons',function(Polygons){return new Polygons();}]);}).call(this);;/*
     @authors:
     - Nicolas Laplante https://plus.google.com/108189012221374960701
     - Nicholas McCready - https://twitter.com/nmccready
     - Carrie Kengle - http://about.me/carrie
     *//*
     Places Search Box directive

     This directive is used to create a Places Search Box.
     This directive creates a new scope.

     {attribute input required}  HTMLInputElement
     {attribute options optional} The options that can be set on a SearchBox object (google.maps.places.SearchBoxOptions object specification)
     */(function(){var bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};};angular.module('uiGmapgoogle-maps').directive('uiGmapSearchBox',['uiGmapGoogleMapApi','uiGmapLogger','uiGmapSearchBoxParentModel','$http','$templateCache','$compile',function(GoogleMapApi,Logger,SearchBoxParentModel,$http,$templateCache,$compile){var SearchBox;SearchBox=function(){SearchBox.prototype.require='ngModel';function SearchBox(){this.link=bind(this.link,this);this.$log=Logger;this.restrict='EMA';this.require='^'+'uiGmapGoogleMap';this.priority=-1;this.transclude=true;this.template='<span class=\'angular-google-map-search\' ng-transclude></span>';this.replace=true;this.scope={template:'=template',events:'=events',position:'=?position',options:'=?options',parentdiv:'=?parentdiv',ngModel:"=?"};}SearchBox.prototype.link=function(scope,element,attrs,mapCtrl){return GoogleMapApi.then(function(_this){return function(maps){if(scope.template==null){$templateCache.put('uigmap-searchbox-default.tpl.html','<input type="text">');scope.template='uigmap-searchbox-default.tpl.html';}return $http.get(scope.template,{cache:$templateCache}).then(function(arg){var data;data=arg.data;if(angular.isUndefined(scope.events)){_this.$log.error('searchBox: the events property is required');return;}return mapCtrl.getScope().deferred.promise.then(function(map){var ctrlPosition;ctrlPosition=angular.isDefined(scope.position)?scope.position.toUpperCase().replace(/-/g,'_'):'TOP_LEFT';if(!maps.ControlPosition[ctrlPosition]){_this.$log.error('searchBox: invalid position property');return;}return new SearchBoxParentModel(scope,element,attrs,map,ctrlPosition,$compile(data)(scope));});});};}(this));};return SearchBox;}();return new SearchBox();}]);}).call(this);;(function(){angular.module('uiGmapgoogle-maps').directive('uiGmapShow',['$animate','uiGmapLogger',function($animate,$log){return{scope:{'uiGmapShow':'=','uiGmapAfterShow':'&','uiGmapAfterHide':'&'},link:function link(scope,element){var angular_post_1_3_handle,angular_pre_1_3_handle,handle;angular_post_1_3_handle=function angular_post_1_3_handle(animateAction,cb){return $animate[animateAction](element,'ng-hide').then(function(){return cb();});};angular_pre_1_3_handle=function angular_pre_1_3_handle(animateAction,cb){return $animate[animateAction](element,'ng-hide',cb);};handle=function handle(animateAction,cb){if(angular.version.major>1){return $log.error("uiGmapShow is not supported for Angular Major greater than 1.\nYour Major is "+angular.version.major+"\"");}if(angular.version.major===1&&angular.version.minor<3){return angular_pre_1_3_handle(animateAction,cb);}return angular_post_1_3_handle(animateAction,cb);};return scope.$watch('uiGmapShow',function(show){if(show){handle('removeClass',scope.uiGmapAfterShow);}if(!show){return handle('addClass',scope.uiGmapAfterHide);}});}};}]);}).call(this);;/*
     @authors:
     - Nicholas McCready - https://twitter.com/nmccready
     *//*
     StreetViewPanorama Directive to care of basic initialization of StreetViewPanorama
     */(function(){angular.module('uiGmapgoogle-maps').directive('uiGmapStreetViewPanorama',['uiGmapGoogleMapApi','uiGmapLogger','uiGmapGmapUtil','uiGmapEventsHelper',function(GoogleMapApi,$log,GmapUtil,EventsHelper){var name;name='uiGmapStreetViewPanorama';return{restrict:'EMA',template:'<div class="angular-google-map-street-view-panorama"></div>',replace:true,scope:{focalcoord:'=',radius:'=?',events:'=?',options:'=?',control:'=?',povoptions:'=?',imagestatus:'='},link:function link(scope,element,attrs){return GoogleMapApi.then(function(_this){return function(maps){var clean,create,didCreateOptionsFromDirective,firstTime,handleSettings,listeners,opts,pano,povOpts,sv;pano=void 0;sv=void 0;didCreateOptionsFromDirective=false;listeners=void 0;opts=null;povOpts=null;clean=function clean(){EventsHelper.removeEvents(listeners);if(pano!=null){pano.unbind('position');pano.setVisible(false);}if(sv!=null){if((sv!=null?sv.setVisible:void 0)!=null){sv.setVisible(false);}return sv=void 0;}};handleSettings=function handleSettings(perspectivePoint,focalPoint){var heading;heading=google.maps.geometry.spherical.computeHeading(perspectivePoint,focalPoint);didCreateOptionsFromDirective=true;scope.radius=scope.radius||50;povOpts=angular.extend({heading:heading,zoom:1,pitch:0},scope.povoptions||{});opts=opts=angular.extend({navigationControl:false,addressControl:false,linksControl:false,position:perspectivePoint,pov:povOpts,visible:true},scope.options||{});return didCreateOptionsFromDirective=false;};create=function create(){var focalPoint;if(!scope.focalcoord){$log.error(name+": focalCoord needs to be defined");return;}if(!scope.radius){$log.error(name+": needs a radius to set the camera view from its focal target.");return;}clean();if(sv==null){sv=new google.maps.StreetViewService();}if(scope.events){listeners=EventsHelper.setEvents(sv,scope,scope);}focalPoint=GmapUtil.getCoords(scope.focalcoord);return sv.getPanoramaByLocation(focalPoint,scope.radius,function(streetViewPanoramaData,status){var ele,perspectivePoint,ref;if(scope.imagestatus!=null){scope.imagestatus=status;}if(((ref=scope.events)!=null?ref.image_status_changed:void 0)!=null){scope.events.image_status_changed(sv,'image_status_changed',scope,status);}if(status==="OK"){perspectivePoint=streetViewPanoramaData.location.latLng;handleSettings(perspectivePoint,focalPoint);ele=element[0];return pano=new google.maps.StreetViewPanorama(ele,opts);}});};if(scope.control!=null){scope.control.getOptions=function(){return opts;};scope.control.getPovOptions=function(){return povOpts;};scope.control.getGObject=function(){return sv;};scope.control.getGPano=function(){return pano;};}scope.$watch('options',function(newValue,oldValue){if(newValue===oldValue||newValue===opts||didCreateOptionsFromDirective){return;}return create();});firstTime=true;scope.$watch('focalcoord',function(newValue,oldValue){if(newValue===oldValue&&!firstTime){return;}if(newValue==null){return;}firstTime=false;return create();});return scope.$on('$destroy',function(){return clean();});};}(this));}};}]);}).call(this);;angular.module('uiGmapgoogle-maps.wrapped').service('uiGmapuuid',function(){//BEGIN REPLACE
/* istanbul ignore next *//*
             Version: core-1.0
             The MIT License: Copyright (c) 2012 LiosK.
             */function UUID(){}UUID.generate=function(){var a=UUID._gri,b=UUID._ha;return b(a(32),8)+"-"+b(a(16),4)+"-"+b(16384|a(12),4)+"-"+b(32768|a(14),4)+"-"+b(a(48),12);};UUID._gri=function(a){return 0>a?NaN:30>=a?0|Math.random()*(1<<a):53>=a?(0|1073741824*Math.random())+1073741824*(0|Math.random()*(1<<a-30)):NaN;};UUID._ha=function(a,b){for(var c=a.toString(16),d=b-c.length,e="0";0<d;d>>>=1,e+=e){d&1&&(c=e+c);}return c;};//END REPLACE
return UUID;});;// wrap the utility libraries needed in ./lib
// http://google-maps-utility-library-v3.googlecode.com/svn/
angular.module('uiGmapgoogle-maps.wrapped').service('uiGmapGoogleMapsUtilV3',function(){return{init:_.once(function(){//BEGIN REPLACE
/* istanbul ignore next */+function(){function ClusterIcon(cluster,styles){cluster.getMarkerClusterer().extend(ClusterIcon,google.maps.OverlayView),this.cluster_=cluster,this.className_=cluster.getMarkerClusterer().getClusterClass(),this.styles_=styles,this.center_=null,this.div_=null,this.sums_=null,this.visible_=!1,this.setMap(cluster.getMap());}function Cluster(mc){this.markerClusterer_=mc,this.map_=mc.getMap(),this.gridSize_=mc.getGridSize(),this.minClusterSize_=mc.getMinimumClusterSize(),this.averageCenter_=mc.getAverageCenter(),this.hideLabel_=mc.getHideLabel(),this.markers_=[],this.center_=null,this.bounds_=null,this.clusterIcon_=new ClusterIcon(this,mc.getStyles());}function MarkerClusterer(map,opt_markers,opt_options){this.extend(MarkerClusterer,google.maps.OverlayView),opt_markers=opt_markers||[],opt_options=opt_options||{},this.markers_=[],this.clusters_=[],this.listeners_=[],this.activeMap_=null,this.ready_=!1,this.gridSize_=opt_options.gridSize||60,this.minClusterSize_=opt_options.minimumClusterSize||2,this.maxZoom_=opt_options.maxZoom||null,this.styles_=opt_options.styles||[],this.title_=opt_options.title||"",this.zoomOnClick_=!0,void 0!==opt_options.zoomOnClick&&(this.zoomOnClick_=opt_options.zoomOnClick),this.averageCenter_=!1,void 0!==opt_options.averageCenter&&(this.averageCenter_=opt_options.averageCenter),this.ignoreHidden_=!1,void 0!==opt_options.ignoreHidden&&(this.ignoreHidden_=opt_options.ignoreHidden),this.enableRetinaIcons_=!1,void 0!==opt_options.enableRetinaIcons&&(this.enableRetinaIcons_=opt_options.enableRetinaIcons),this.hideLabel_=!1,void 0!==opt_options.hideLabel&&(this.hideLabel_=opt_options.hideLabel),this.imagePath_=opt_options.imagePath||MarkerClusterer.IMAGE_PATH,this.imageExtension_=opt_options.imageExtension||MarkerClusterer.IMAGE_EXTENSION,this.imageSizes_=opt_options.imageSizes||MarkerClusterer.IMAGE_SIZES,this.calculator_=opt_options.calculator||MarkerClusterer.CALCULATOR,this.batchSize_=opt_options.batchSize||MarkerClusterer.BATCH_SIZE,this.batchSizeIE_=opt_options.batchSizeIE||MarkerClusterer.BATCH_SIZE_IE,this.clusterClass_=opt_options.clusterClass||"cluster",-1!==navigator.userAgent.toLowerCase().indexOf("msie")&&(this.batchSize_=this.batchSizeIE_),this.setupStyles_(),this.addMarkers(opt_markers,!0),this.setMap(map);}ClusterIcon.prototype.onAdd=function(){var cMouseDownInCluster,cDraggingMapByCluster,cClusterIcon=this;this.div_=document.createElement("div"),this.div_.className=this.className_,this.visible_&&this.show(),this.getPanes().overlayMouseTarget.appendChild(this.div_),this.boundsChangedListener_=google.maps.event.addListener(this.getMap(),"bounds_changed",function(){cDraggingMapByCluster=cMouseDownInCluster;}),google.maps.event.addDomListener(this.div_,"mousedown",function(){cMouseDownInCluster=!0,cDraggingMapByCluster=!1;}),google.maps.event.addDomListener(this.div_,"click",function(e){if(cMouseDownInCluster=!1,!cDraggingMapByCluster){var theBounds,mz,mc=cClusterIcon.cluster_.getMarkerClusterer();google.maps.event.trigger(mc,"click",cClusterIcon.cluster_),google.maps.event.trigger(mc,"clusterclick",cClusterIcon.cluster_),mc.getZoomOnClick()&&(mz=mc.getMaxZoom(),theBounds=cClusterIcon.cluster_.getBounds(),mc.getMap().fitBounds(theBounds),setTimeout(function(){mc.getMap().fitBounds(theBounds),null!==mz&&mc.getMap().getZoom()>mz&&mc.getMap().setZoom(mz+1);},100)),e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation();}}),google.maps.event.addDomListener(this.div_,"mouseover",function(){var mc=cClusterIcon.cluster_.getMarkerClusterer();google.maps.event.trigger(mc,"mouseover",cClusterIcon.cluster_);}),google.maps.event.addDomListener(this.div_,"mouseout",function(){var mc=cClusterIcon.cluster_.getMarkerClusterer();google.maps.event.trigger(mc,"mouseout",cClusterIcon.cluster_);});},ClusterIcon.prototype.onRemove=function(){this.div_&&this.div_.parentNode&&(this.hide(),google.maps.event.removeListener(this.boundsChangedListener_),google.maps.event.clearInstanceListeners(this.div_),this.div_.parentNode.removeChild(this.div_),this.div_=null);},ClusterIcon.prototype.draw=function(){if(this.visible_){var pos=this.getPosFromLatLng_(this.center_);this.div_.style.top=pos.y+"px",this.div_.style.left=pos.x+"px";}},ClusterIcon.prototype.hide=function(){this.div_&&(this.div_.style.display="none"),this.visible_=!1;},ClusterIcon.prototype.show=function(){if(this.div_){var img="",bp=this.backgroundPosition_.split(" "),spriteH=parseInt(bp[0].trim(),10),spriteV=parseInt(bp[1].trim(),10),pos=this.getPosFromLatLng_(this.center_);this.div_.style.cssText=this.createCss(pos),img="<img src='"+this.url_+"' style='position: absolute; top: "+spriteV+"px; left: "+spriteH+"px; ",img+=this.cluster_.getMarkerClusterer().enableRetinaIcons_?"width: "+this.width_+"px;height: "+this.height_+"px;":"clip: rect("+-1*spriteV+"px, "+(-1*spriteH+this.width_)+"px, "+(-1*spriteV+this.height_)+"px, "+-1*spriteH+"px);",img+="'>",this.div_.innerHTML=img+"<div style='position: absolute;top: "+this.anchorText_[0]+"px;left: "+this.anchorText_[1]+"px;color: "+this.textColor_+";font-size: "+this.textSize_+"px;font-family: "+this.fontFamily_+";font-weight: "+this.fontWeight_+";font-style: "+this.fontStyle_+";text-decoration: "+this.textDecoration_+";text-align: center;width: "+this.width_+"px;line-height:"+this.height_+"px;'>"+(this.cluster_.hideLabel_?" ":this.sums_.text)+"</div>",this.div_.title="undefined"==typeof this.sums_.title||""===this.sums_.title?this.cluster_.getMarkerClusterer().getTitle():this.sums_.title,this.div_.style.display="";}this.visible_=!0;},ClusterIcon.prototype.useStyle=function(sums){this.sums_=sums;var index=Math.max(0,sums.index-1);index=Math.min(this.styles_.length-1,index);var style=this.styles_[index];this.url_=style.url,this.height_=style.height,this.width_=style.width,this.anchorText_=style.anchorText||[0,0],this.anchorIcon_=style.anchorIcon||[parseInt(this.height_/2,10),parseInt(this.width_/2,10)],this.textColor_=style.textColor||"black",this.textSize_=style.textSize||11,this.textDecoration_=style.textDecoration||"none",this.fontWeight_=style.fontWeight||"bold",this.fontStyle_=style.fontStyle||"normal",this.fontFamily_=style.fontFamily||"Arial,sans-serif",this.backgroundPosition_=style.backgroundPosition||"0 0";},ClusterIcon.prototype.setCenter=function(center){this.center_=center;},ClusterIcon.prototype.createCss=function(pos){var style=[];return style.push("cursor: pointer;"),style.push("position: absolute; top: "+pos.y+"px; left: "+pos.x+"px;"),style.push("width: "+this.width_+"px; height: "+this.height_+"px;"),style.join("");},ClusterIcon.prototype.getPosFromLatLng_=function(latlng){var pos=this.getProjection().fromLatLngToDivPixel(latlng);return pos.x-=this.anchorIcon_[1],pos.y-=this.anchorIcon_[0],pos.x=parseInt(pos.x,10),pos.y=parseInt(pos.y,10),pos;},Cluster.prototype.getSize=function(){return this.markers_.length;},Cluster.prototype.getMarkers=function(){return this.markers_;},Cluster.prototype.getCenter=function(){return this.center_;},Cluster.prototype.getMap=function(){return this.map_;},Cluster.prototype.getMarkerClusterer=function(){return this.markerClusterer_;},Cluster.prototype.getBounds=function(){var i,bounds=new google.maps.LatLngBounds(this.center_,this.center_),markers=this.getMarkers();for(i=0;i<markers.length;i++){bounds.extend(markers[i].getPosition());}return bounds;},Cluster.prototype.remove=function(){this.clusterIcon_.setMap(null),this.markers_=[],delete this.markers_;},Cluster.prototype.addMarker=function(marker){var i,mCount,mz;if(this.isMarkerAlreadyAdded_(marker))return!1;if(this.center_){if(this.averageCenter_){var l=this.markers_.length+1,lat=(this.center_.lat()*(l-1)+marker.getPosition().lat())/l,lng=(this.center_.lng()*(l-1)+marker.getPosition().lng())/l;this.center_=new google.maps.LatLng(lat,lng),this.calculateBounds_();}}else this.center_=marker.getPosition(),this.calculateBounds_();if(marker.isAdded=!0,this.markers_.push(marker),mCount=this.markers_.length,mz=this.markerClusterer_.getMaxZoom(),null!==mz&&this.map_.getZoom()>mz)marker.getMap()!==this.map_&&marker.setMap(this.map_);else if(mCount<this.minClusterSize_)marker.getMap()!==this.map_&&marker.setMap(this.map_);else if(mCount===this.minClusterSize_)for(i=0;mCount>i;i++){this.markers_[i].setMap(null);}else marker.setMap(null);return!0;},Cluster.prototype.isMarkerInClusterBounds=function(marker){return this.bounds_.contains(marker.getPosition());},Cluster.prototype.calculateBounds_=function(){var bounds=new google.maps.LatLngBounds(this.center_,this.center_);this.bounds_=this.markerClusterer_.getExtendedBounds(bounds);},Cluster.prototype.updateIcon_=function(){var mCount=this.markers_.length,mz=this.markerClusterer_.getMaxZoom();if(null!==mz&&this.map_.getZoom()>mz)return void this.clusterIcon_.hide();if(mCount<this.minClusterSize_)return void this.clusterIcon_.hide();var numStyles=this.markerClusterer_.getStyles().length,sums=this.markerClusterer_.getCalculator()(this.markers_,numStyles);this.clusterIcon_.setCenter(this.center_),this.clusterIcon_.useStyle(sums),this.clusterIcon_.show();},Cluster.prototype.isMarkerAlreadyAdded_=function(marker){for(var i=0,n=this.markers_.length;n>i;i++){if(marker===this.markers_[i])return!0;}return!1;},MarkerClusterer.prototype.onAdd=function(){var cMarkerClusterer=this;this.activeMap_=this.getMap(),this.ready_=!0,this.repaint(),this.listeners_=[google.maps.event.addListener(this.getMap(),"zoom_changed",function(){cMarkerClusterer.resetViewport_(!1),(this.getZoom()===(this.get("minZoom")||0)||this.getZoom()===this.get("maxZoom"))&&google.maps.event.trigger(this,"idle");}),google.maps.event.addListener(this.getMap(),"idle",function(){cMarkerClusterer.redraw_();})];},MarkerClusterer.prototype.onRemove=function(){var i;for(i=0;i<this.markers_.length;i++){this.markers_[i].getMap()!==this.activeMap_&&this.markers_[i].setMap(this.activeMap_);}for(i=0;i<this.clusters_.length;i++){this.clusters_[i].remove();}for(this.clusters_=[],i=0;i<this.listeners_.length;i++){google.maps.event.removeListener(this.listeners_[i]);}this.listeners_=[],this.activeMap_=null,this.ready_=!1;},MarkerClusterer.prototype.draw=function(){},MarkerClusterer.prototype.setupStyles_=function(){var i,size;if(!(this.styles_.length>0))for(i=0;i<this.imageSizes_.length;i++){size=this.imageSizes_[i],this.styles_.push({url:this.imagePath_+(i+1)+"."+this.imageExtension_,height:size,width:size});}},MarkerClusterer.prototype.fitMapToMarkers=function(){var i,markers=this.getMarkers(),bounds=new google.maps.LatLngBounds();for(i=0;i<markers.length;i++){bounds.extend(markers[i].getPosition());}this.getMap().fitBounds(bounds);},MarkerClusterer.prototype.getGridSize=function(){return this.gridSize_;},MarkerClusterer.prototype.setGridSize=function(gridSize){this.gridSize_=gridSize;},MarkerClusterer.prototype.getMinimumClusterSize=function(){return this.minClusterSize_;},MarkerClusterer.prototype.setMinimumClusterSize=function(minimumClusterSize){this.minClusterSize_=minimumClusterSize;},MarkerClusterer.prototype.getMaxZoom=function(){return this.maxZoom_;},MarkerClusterer.prototype.setMaxZoom=function(maxZoom){this.maxZoom_=maxZoom;},MarkerClusterer.prototype.getStyles=function(){return this.styles_;},MarkerClusterer.prototype.setStyles=function(styles){this.styles_=styles;},MarkerClusterer.prototype.getTitle=function(){return this.title_;},MarkerClusterer.prototype.setTitle=function(title){this.title_=title;},MarkerClusterer.prototype.getZoomOnClick=function(){return this.zoomOnClick_;},MarkerClusterer.prototype.setZoomOnClick=function(zoomOnClick){this.zoomOnClick_=zoomOnClick;},MarkerClusterer.prototype.getAverageCenter=function(){return this.averageCenter_;},MarkerClusterer.prototype.setAverageCenter=function(averageCenter){this.averageCenter_=averageCenter;},MarkerClusterer.prototype.getIgnoreHidden=function(){return this.ignoreHidden_;},MarkerClusterer.prototype.setIgnoreHidden=function(ignoreHidden){this.ignoreHidden_=ignoreHidden;},MarkerClusterer.prototype.getEnableRetinaIcons=function(){return this.enableRetinaIcons_;},MarkerClusterer.prototype.setEnableRetinaIcons=function(enableRetinaIcons){this.enableRetinaIcons_=enableRetinaIcons;},MarkerClusterer.prototype.getImageExtension=function(){return this.imageExtension_;},MarkerClusterer.prototype.setImageExtension=function(imageExtension){this.imageExtension_=imageExtension;},MarkerClusterer.prototype.getImagePath=function(){return this.imagePath_;},MarkerClusterer.prototype.setImagePath=function(imagePath){this.imagePath_=imagePath;},MarkerClusterer.prototype.getImageSizes=function(){return this.imageSizes_;},MarkerClusterer.prototype.setImageSizes=function(imageSizes){this.imageSizes_=imageSizes;},MarkerClusterer.prototype.getCalculator=function(){return this.calculator_;},MarkerClusterer.prototype.setCalculator=function(calculator){this.calculator_=calculator;},MarkerClusterer.prototype.setHideLabel=function(hideLabel){this.hideLabel_=hideLabel;},MarkerClusterer.prototype.getHideLabel=function(){return this.hideLabel_;},MarkerClusterer.prototype.getBatchSizeIE=function(){return this.batchSizeIE_;},MarkerClusterer.prototype.setBatchSizeIE=function(batchSizeIE){this.batchSizeIE_=batchSizeIE;},MarkerClusterer.prototype.getClusterClass=function(){return this.clusterClass_;},MarkerClusterer.prototype.setClusterClass=function(clusterClass){this.clusterClass_=clusterClass;},MarkerClusterer.prototype.getMarkers=function(){return this.markers_;},MarkerClusterer.prototype.getTotalMarkers=function(){return this.markers_.length;},MarkerClusterer.prototype.getClusters=function(){return this.clusters_;},MarkerClusterer.prototype.getTotalClusters=function(){return this.clusters_.length;},MarkerClusterer.prototype.addMarker=function(marker,opt_nodraw){this.pushMarkerTo_(marker),opt_nodraw||this.redraw_();},MarkerClusterer.prototype.addMarkers=function(markers,opt_nodraw){var key;for(key in markers){markers.hasOwnProperty(key)&&this.pushMarkerTo_(markers[key]);}opt_nodraw||this.redraw_();},MarkerClusterer.prototype.pushMarkerTo_=function(marker){if(marker.getDraggable()){var cMarkerClusterer=this;google.maps.event.addListener(marker,"dragend",function(){cMarkerClusterer.ready_&&(this.isAdded=!1,cMarkerClusterer.repaint());});}marker.isAdded=!1,this.markers_.push(marker);},MarkerClusterer.prototype.removeMarker=function(marker,opt_nodraw,opt_noMapRemove){var removeFromMap=!0&&!opt_noMapRemove,removed=this.removeMarker_(marker,removeFromMap);return!opt_nodraw&&removed&&this.repaint(),removed;},MarkerClusterer.prototype.removeMarkers=function(markers,opt_nodraw,opt_noMapRemove){var i,r,removed=!1,removeFromMap=!0&&!opt_noMapRemove;for(i=0;i<markers.length;i++){r=this.removeMarker_(markers[i],removeFromMap),removed=removed||r;}return!opt_nodraw&&removed&&this.repaint(),removed;},MarkerClusterer.prototype.removeMarker_=function(marker,removeFromMap){var i,index=-1;if(this.markers_.indexOf)index=this.markers_.indexOf(marker);else for(i=0;i<this.markers_.length;i++){if(marker===this.markers_[i]){index=i;break;}}return-1===index?!1:(removeFromMap&&marker.setMap(null),this.markers_.splice(index,1),!0);},MarkerClusterer.prototype.clearMarkers=function(){this.resetViewport_(!0),this.markers_=[];},MarkerClusterer.prototype.repaint=function(){var oldClusters=this.clusters_.slice();this.clusters_=[],this.resetViewport_(!1),this.redraw_(),setTimeout(function(){var i;for(i=0;i<oldClusters.length;i++){oldClusters[i].remove();}},0);},MarkerClusterer.prototype.getExtendedBounds=function(bounds){var projection=this.getProjection(),tr=new google.maps.LatLng(bounds.getNorthEast().lat(),bounds.getNorthEast().lng()),bl=new google.maps.LatLng(bounds.getSouthWest().lat(),bounds.getSouthWest().lng()),trPix=projection.fromLatLngToDivPixel(tr);trPix.x+=this.gridSize_,trPix.y-=this.gridSize_;var blPix=projection.fromLatLngToDivPixel(bl);blPix.x-=this.gridSize_,blPix.y+=this.gridSize_;var ne=projection.fromDivPixelToLatLng(trPix),sw=projection.fromDivPixelToLatLng(blPix);return bounds.extend(ne),bounds.extend(sw),bounds;},MarkerClusterer.prototype.redraw_=function(){this.createClusters_(0);},MarkerClusterer.prototype.resetViewport_=function(opt_hide){var i,marker;for(i=0;i<this.clusters_.length;i++){this.clusters_[i].remove();}for(this.clusters_=[],i=0;i<this.markers_.length;i++){marker=this.markers_[i],marker.isAdded=!1,opt_hide&&marker.setMap(null);}},MarkerClusterer.prototype.distanceBetweenPoints_=function(p1,p2){var R=6371,dLat=(p2.lat()-p1.lat())*Math.PI/180,dLon=(p2.lng()-p1.lng())*Math.PI/180,a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(p1.lat()*Math.PI/180)*Math.cos(p2.lat()*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2),c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)),d=R*c;return d;},MarkerClusterer.prototype.isMarkerInBounds_=function(marker,bounds){return bounds.contains(marker.getPosition());},MarkerClusterer.prototype.addToClosestCluster_=function(marker){var i,d,cluster,center,distance=4e4,clusterToAddTo=null;for(i=0;i<this.clusters_.length;i++){cluster=this.clusters_[i],center=cluster.getCenter(),center&&(d=this.distanceBetweenPoints_(center,marker.getPosition()),distance>d&&(distance=d,clusterToAddTo=cluster));}clusterToAddTo&&clusterToAddTo.isMarkerInClusterBounds(marker)?clusterToAddTo.addMarker(marker):(cluster=new Cluster(this),cluster.addMarker(marker),this.clusters_.push(cluster));},MarkerClusterer.prototype.createClusters_=function(iFirst){var i,marker,mapBounds,cMarkerClusterer=this;if(this.ready_){0===iFirst&&(google.maps.event.trigger(this,"clusteringbegin",this),"undefined"!=typeof this.timerRefStatic&&(clearTimeout(this.timerRefStatic),delete this.timerRefStatic)),mapBounds=this.getMap().getZoom()>3?new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),this.getMap().getBounds().getNorthEast()):new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625));var bounds=this.getExtendedBounds(mapBounds),iLast=Math.min(iFirst+this.batchSize_,this.markers_.length);for(i=iFirst;iLast>i;i++){marker=this.markers_[i],!marker.isAdded&&this.isMarkerInBounds_(marker,bounds)&&(!this.ignoreHidden_||this.ignoreHidden_&&marker.getVisible())&&this.addToClosestCluster_(marker);}if(iLast<this.markers_.length)this.timerRefStatic=setTimeout(function(){cMarkerClusterer.createClusters_(iLast);},0);else for(delete this.timerRefStatic,google.maps.event.trigger(this,"clusteringend",this),i=0;i<this.clusters_.length;i++){this.clusters_[i].updateIcon_();}}},MarkerClusterer.prototype.extend=function(obj1,obj2){return function(object){var property;for(property in object.prototype){this.prototype[property]=object.prototype[property];}return this;}.apply(obj1,[obj2]);},MarkerClusterer.CALCULATOR=function(markers,numStyles){for(var index=0,title="",count=markers.length.toString(),dv=count;0!==dv;){dv=parseInt(dv/10,10),index++;}return index=Math.min(index,numStyles),{text:count,index:index,title:title};},MarkerClusterer.BATCH_SIZE=2e3,MarkerClusterer.BATCH_SIZE_IE=500,MarkerClusterer.IMAGE_PATH="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/images/m",MarkerClusterer.IMAGE_EXTENSION="png",MarkerClusterer.IMAGE_SIZES=[53,56,66,78,90],"function"!=typeof String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"");});/**
                         *  google-maps-utility-library-v3-infobox
                         *
                         * @version: 1.1.14
                         * @author: Gary Little (inspired by proof-of-concept code from Pamela Fox of Google)
                         * @contributors: Nicholas McCready
                         * @date: Fri May 13 2016 16:35:27 GMT-0400 (EDT)
                         * @license: Apache License 2.0
                         *//**
                         * @fileoverview InfoBox extends the Google Maps JavaScript API V3 <tt>OverlayView</tt> class.
                         *  <p>
                         *  An InfoBox behaves like a <tt>google.maps.InfoWindow</tt>, but it supports several
                         *  additional properties for advanced styling. An InfoBox can also be used as a map label.
                         *  <p>
                         *  An InfoBox also fires the same events as a <tt>google.maps.InfoWindow</tt>.
                         *//*jslint browser:true *//*global google *//**
                         * @name InfoBoxOptions
                         * @class This class represents the optional parameter passed to the {@link InfoBox} constructor.
                         * @property {string|Node} content The content of the InfoBox (plain text or an HTML DOM node).
                         * @property {boolean} [disableAutoPan=false] Disable auto-pan on <tt>open</tt>.
                         * @property {number} maxWidth The maximum width (in pixels) of the InfoBox. Set to 0 if no maximum.
                         * @property {Size} pixelOffset The offset (in pixels) from the top left corner of the InfoBox
                         *  (or the bottom left corner if the <code>alignBottom</code> property is <code>true</code>)
                         *  to the map pixel corresponding to <tt>position</tt>.
                         * @property {LatLng} position The geographic location at which to display the InfoBox.
                         * @property {number} zIndex The CSS z-index style value for the InfoBox.
                         *  Note: This value overrides a zIndex setting specified in the <tt>boxStyle</tt> property.
                         * @property {string} [boxClass="infoBox"] The name of the CSS class defining the styles for the InfoBox container.
                         * @property {Object} [boxStyle] An object literal whose properties define specific CSS
                         *  style values to be applied to the InfoBox. Style values defined here override those that may
                         *  be defined in the <code>boxClass</code> style sheet. If this property is changed after the
                         *  InfoBox has been created, all previously set styles (except those defined in the style sheet)
                         *  are removed from the InfoBox before the new style values are applied.
                         * @property {string} closeBoxMargin The CSS margin style value for the close box.
                         *  The default is "2px" (a 2-pixel margin on all sides).
                         * @property {string} closeBoxURL The URL of the image representing the close box.
                         *  Note: The default is the URL for Google's standard close box.
                         *  Set this property to "" if no close box is required.
                         * @property {Size} infoBoxClearance Minimum offset (in pixels) from the InfoBox to the
                         *  map edge after an auto-pan.
                         * @property {boolean} [isHidden=false] Hide the InfoBox on <tt>open</tt>.
                         *  [Deprecated in favor of the <tt>visible</tt> property.]
                         * @property {boolean} [visible=true] Show the InfoBox on <tt>open</tt>.
                         * @property {boolean} alignBottom Align the bottom left corner of the InfoBox to the <code>position</code>
                         *  location (default is <tt>false</tt> which means that the top left corner of the InfoBox is aligned).
                         * @property {string} pane The pane where the InfoBox is to appear (default is "floatPane").
                         *  Set the pane to "mapPane" if the InfoBox is being used as a map label.
                         *  Valid pane names are the property names for the <tt>google.maps.MapPanes</tt> object.
                         * @property {boolean} enableEventPropagation Propagate mousedown, mousemove, mouseover, mouseout,
                         *  mouseup, click, dblclick, touchstart, touchend, touchmove, and contextmenu events in the InfoBox
                         *  (default is <tt>false</tt> to mimic the behavior of a <tt>google.maps.InfoWindow</tt>). Set
                         *  this property to <tt>true</tt> if the InfoBox is being used as a map label.
                         *//**
                         * Creates an InfoBox with the options specified in {@link InfoBoxOptions}.
                         *  Call <tt>InfoBox.open</tt> to add the box to the map.
                         * @constructor
                         * @param {InfoBoxOptions} [opt_opts]
                         */function InfoBox(opt_opts){opt_opts=opt_opts||{};google.maps.OverlayView.apply(this,arguments);// Standard options (in common with google.maps.InfoWindow):
//
this.content_=opt_opts.content||"";this.disableAutoPan_=opt_opts.disableAutoPan||false;this.maxWidth_=opt_opts.maxWidth||0;this.pixelOffset_=opt_opts.pixelOffset||new google.maps.Size(0,0);this.position_=opt_opts.position||new google.maps.LatLng(0,0);this.zIndex_=opt_opts.zIndex||null;// Additional options (unique to InfoBox):
//
this.boxClass_=opt_opts.boxClass||"infoBox";this.boxStyle_=opt_opts.boxStyle||{};this.closeBoxMargin_=opt_opts.closeBoxMargin||"2px";this.closeBoxURL_=opt_opts.closeBoxURL||"http://www.google.com/intl/en_us/mapfiles/close.gif";if(opt_opts.closeBoxURL===""){this.closeBoxURL_="";}this.infoBoxClearance_=opt_opts.infoBoxClearance||new google.maps.Size(1,1);if(typeof opt_opts.visible==="undefined"){if(typeof opt_opts.isHidden==="undefined"){opt_opts.visible=true;}else{opt_opts.visible=!opt_opts.isHidden;}}this.isHidden_=!opt_opts.visible;this.alignBottom_=opt_opts.alignBottom||false;this.pane_=opt_opts.pane||"floatPane";this.enableEventPropagation_=opt_opts.enableEventPropagation||false;this.div_=null;this.closeListener_=null;this.moveListener_=null;this.contextListener_=null;this.eventListeners_=null;this.fixedWidthSet_=null;}/* InfoBox extends OverlayView in the Google Maps API v3.
                         */InfoBox.prototype=new google.maps.OverlayView();/**
                         * Creates the DIV representing the InfoBox.
                         * @private
                         */InfoBox.prototype.createInfoBoxDiv_=function(){var i;var events;var bw;var me=this;// This handler prevents an event in the InfoBox from being passed on to the map.
//
var cancelHandler=function cancelHandler(e){e.cancelBubble=true;if(e.stopPropagation){e.stopPropagation();}};// This handler ignores the current event in the InfoBox and conditionally prevents
// the event from being passed on to the map. It is used for the contextmenu event.
//
var ignoreHandler=function ignoreHandler(e){e.returnValue=false;if(e.preventDefault){e.preventDefault();}if(!me.enableEventPropagation_){cancelHandler(e);}};if(!this.div_){this.div_=document.createElement("div");this.setBoxStyle_();if(typeof this.content_.nodeType==="undefined"){this.div_.innerHTML=this.getCloseBoxImg_()+this.content_;}else{this.div_.innerHTML=this.getCloseBoxImg_();this.div_.appendChild(this.content_);}// Add the InfoBox DIV to the DOM
this.getPanes()[this.pane_].appendChild(this.div_);this.addClickHandler_();if(this.div_.style.width){this.fixedWidthSet_=true;}else{if(this.maxWidth_!==0&&this.div_.offsetWidth>this.maxWidth_){this.div_.style.width=this.maxWidth_;this.div_.style.overflow="auto";this.fixedWidthSet_=true;}else{// The following code is needed to overcome problems with MSIE
bw=this.getBoxWidths_();this.div_.style.width=this.div_.offsetWidth-bw.left-bw.right+"px";this.fixedWidthSet_=false;}}this.panBox_(this.disableAutoPan_);if(!this.enableEventPropagation_){this.eventListeners_=[];// Cancel event propagation.
//
// Note: mousemove not included (to resolve Issue 152)
events=["mousedown","mouseover","mouseout","mouseup","click","dblclick","touchstart","touchend","touchmove"];for(i=0;i<events.length;i++){this.eventListeners_.push(google.maps.event.addDomListener(this.div_,events[i],cancelHandler));}// Workaround for Google bug that causes the cursor to change to a pointer
// when the mouse moves over a marker underneath InfoBox.
this.eventListeners_.push(google.maps.event.addDomListener(this.div_,"mouseover",function(e){this.style.cursor="default";}));}this.contextListener_=google.maps.event.addDomListener(this.div_,"contextmenu",ignoreHandler);/**
                                 * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.
                                 * @name InfoBox#domready
                                 * @event
                                 */google.maps.event.trigger(this,"domready");}};/**
                         * Returns the HTML <IMG> tag for the close box.
                         * @private
                         */InfoBox.prototype.getCloseBoxImg_=function(){var img="";if(this.closeBoxURL_!==""){img="<img";img+=" src='"+this.closeBoxURL_+"'";img+=" align=right";// Do this because Opera chokes on style='float: right;'
img+=" style='";img+=" position: relative;";// Required by MSIE
img+=" cursor: pointer;";img+=" margin: "+this.closeBoxMargin_+";";img+="'>";}return img;};/**
                         * Adds the click handler to the InfoBox close box.
                         * @private
                         */InfoBox.prototype.addClickHandler_=function(){var closeBox;if(this.closeBoxURL_!==""){closeBox=this.div_.firstChild;this.closeListener_=google.maps.event.addDomListener(closeBox,"click",this.getCloseClickHandler_());}else{this.closeListener_=null;}};/**
                         * Returns the function to call when the user clicks the close box of an InfoBox.
                         * @private
                         */InfoBox.prototype.getCloseClickHandler_=function(){var me=this;return function(e){// 1.0.3 fix: Always prevent propagation of a close box click to the map:
e.cancelBubble=true;if(e.stopPropagation){e.stopPropagation();}/**
                                 * This event is fired when the InfoBox's close box is clicked.
                                 * @name InfoBox#closeclick
                                 * @event
                                 */google.maps.event.trigger(me,"closeclick");me.close();};};/**
                         * Pans the map so that the InfoBox appears entirely within the map's visible area.
                         * @private
                         */InfoBox.prototype.panBox_=function(disablePan){var map;var bounds;var xOffset=0,yOffset=0;if(!disablePan){map=this.getMap();if(map instanceof google.maps.Map){// Only pan if attached to map, not panorama
if(!map.getBounds().contains(this.position_)){// Marker not in visible area of map, so set center
// of map to the marker position first.
map.setCenter(this.position_);}bounds=map.getBounds();var mapDiv=map.getDiv();var mapWidth=mapDiv.offsetWidth;var mapHeight=mapDiv.offsetHeight;var iwOffsetX=this.pixelOffset_.width;var iwOffsetY=this.pixelOffset_.height;var iwWidth=this.div_.offsetWidth;var iwHeight=this.div_.offsetHeight;var padX=this.infoBoxClearance_.width;var padY=this.infoBoxClearance_.height;var pixPosition=this.getProjection().fromLatLngToContainerPixel(this.position_);if(pixPosition.x<-iwOffsetX+padX){xOffset=pixPosition.x+iwOffsetX-padX;}else if(pixPosition.x+iwWidth+iwOffsetX+padX>mapWidth){xOffset=pixPosition.x+iwWidth+iwOffsetX+padX-mapWidth;}if(this.alignBottom_){if(pixPosition.y<-iwOffsetY+padY+iwHeight){yOffset=pixPosition.y+iwOffsetY-padY-iwHeight;}else if(pixPosition.y+iwOffsetY+padY>mapHeight){yOffset=pixPosition.y+iwOffsetY+padY-mapHeight;}}else{if(pixPosition.y<-iwOffsetY+padY){yOffset=pixPosition.y+iwOffsetY-padY;}else if(pixPosition.y+iwHeight+iwOffsetY+padY>mapHeight){yOffset=pixPosition.y+iwHeight+iwOffsetY+padY-mapHeight;}}if(!(xOffset===0&&yOffset===0)){// Move the map to the shifted center.
//
var c=map.getCenter();map.panBy(xOffset,yOffset);}}}};/**
                         * Sets the style of the InfoBox by setting the style sheet and applying
                         * other specific styles requested.
                         * @private
                         */InfoBox.prototype.setBoxStyle_=function(){var i,boxStyle;if(this.div_){// Apply style values from the style sheet defined in the boxClass parameter:
this.div_.className=this.boxClass_;// Clear existing inline style values:
this.div_.style.cssText="";// Apply style values defined in the boxStyle parameter:
boxStyle=this.boxStyle_;for(i in boxStyle){if(boxStyle.hasOwnProperty(i)){this.div_.style[i]=boxStyle[i];}}// Fix for iOS disappearing InfoBox problem.
// See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad
this.div_.style.WebkitTransform="translateZ(0)";// Fix up opacity style for benefit of MSIE:
//
if(typeof this.div_.style.opacity!=="undefined"&&this.div_.style.opacity!==""){// See http://www.quirksmode.org/css/opacity.html
this.div_.style.MsFilter="\"progid:DXImageTransform.Microsoft.Alpha(Opacity="+this.div_.style.opacity*100+")\"";this.div_.style.filter="alpha(opacity="+this.div_.style.opacity*100+")";}// Apply required styles:
//
this.div_.style.position="absolute";this.div_.style.visibility='hidden';if(this.zIndex_!==null){this.div_.style.zIndex=this.zIndex_;}}};/**
                         * Get the widths of the borders of the InfoBox.
                         * @private
                         * @return {Object} widths object (top, bottom left, right)
                         */InfoBox.prototype.getBoxWidths_=function(){var computedStyle;var bw={top:0,bottom:0,left:0,right:0};var box=this.div_;if(document.defaultView&&document.defaultView.getComputedStyle){computedStyle=box.ownerDocument.defaultView.getComputedStyle(box,"");if(computedStyle){// The computed styles are always in pixel units (good!)
bw.top=parseInt(computedStyle.borderTopWidth,10)||0;bw.bottom=parseInt(computedStyle.borderBottomWidth,10)||0;bw.left=parseInt(computedStyle.borderLeftWidth,10)||0;bw.right=parseInt(computedStyle.borderRightWidth,10)||0;}}else if(document.documentElement.currentStyle){// MSIE
if(box.currentStyle){// The current styles may not be in pixel units, but assume they are (bad!)
bw.top=parseInt(box.currentStyle.borderTopWidth,10)||0;bw.bottom=parseInt(box.currentStyle.borderBottomWidth,10)||0;bw.left=parseInt(box.currentStyle.borderLeftWidth,10)||0;bw.right=parseInt(box.currentStyle.borderRightWidth,10)||0;}}return bw;};/**
                         * Invoked when <tt>close</tt> is called. Do not call it directly.
                         */InfoBox.prototype.onRemove=function(){if(this.div_){this.div_.parentNode.removeChild(this.div_);this.div_=null;}};/**
                         * Draws the InfoBox based on the current map projection and zoom level.
                         */InfoBox.prototype.draw=function(){this.createInfoBoxDiv_();var pixPosition=this.getProjection().fromLatLngToDivPixel(this.position_);this.div_.style.left=pixPosition.x+this.pixelOffset_.width+"px";if(this.alignBottom_){this.div_.style.bottom=-(pixPosition.y+this.pixelOffset_.height)+"px";}else{this.div_.style.top=pixPosition.y+this.pixelOffset_.height+"px";}if(this.isHidden_){this.div_.style.visibility="hidden";}else{this.div_.style.visibility="visible";}};/**
                         * Sets the options for the InfoBox. Note that changes to the <tt>maxWidth</tt>,
                         *  <tt>closeBoxMargin</tt>, <tt>closeBoxURL</tt>, and <tt>enableEventPropagation</tt>
                         *  properties have no affect until the current InfoBox is <tt>close</tt>d and a new one
                         *  is <tt>open</tt>ed.
                         * @param {InfoBoxOptions} opt_opts
                         */InfoBox.prototype.setOptions=function(opt_opts){if(typeof opt_opts.boxClass!=="undefined"){// Must be first
this.boxClass_=opt_opts.boxClass;this.setBoxStyle_();}if(typeof opt_opts.boxStyle!=="undefined"){// Must be second
this.boxStyle_=opt_opts.boxStyle;this.setBoxStyle_();}if(typeof opt_opts.content!=="undefined"){this.setContent(opt_opts.content);}if(typeof opt_opts.disableAutoPan!=="undefined"){this.disableAutoPan_=opt_opts.disableAutoPan;}if(typeof opt_opts.maxWidth!=="undefined"){this.maxWidth_=opt_opts.maxWidth;}if(typeof opt_opts.pixelOffset!=="undefined"){this.pixelOffset_=opt_opts.pixelOffset;}if(typeof opt_opts.alignBottom!=="undefined"){this.alignBottom_=opt_opts.alignBottom;}if(typeof opt_opts.position!=="undefined"){this.setPosition(opt_opts.position);}if(typeof opt_opts.zIndex!=="undefined"){this.setZIndex(opt_opts.zIndex);}if(typeof opt_opts.closeBoxMargin!=="undefined"){this.closeBoxMargin_=opt_opts.closeBoxMargin;}if(typeof opt_opts.closeBoxURL!=="undefined"){this.closeBoxURL_=opt_opts.closeBoxURL;}if(typeof opt_opts.infoBoxClearance!=="undefined"){this.infoBoxClearance_=opt_opts.infoBoxClearance;}if(typeof opt_opts.isHidden!=="undefined"){this.isHidden_=opt_opts.isHidden;}if(typeof opt_opts.visible!=="undefined"){this.isHidden_=!opt_opts.visible;}if(typeof opt_opts.enableEventPropagation!=="undefined"){this.enableEventPropagation_=opt_opts.enableEventPropagation;}if(this.div_){this.draw();}};/**
                         * Sets the content of the InfoBox.
                         *  The content can be plain text or an HTML DOM node.
                         * @param {string|Node} content
                         */InfoBox.prototype.setContent=function(content){this.content_=content;if(this.div_){if(this.closeListener_){google.maps.event.removeListener(this.closeListener_);this.closeListener_=null;}// Odd code required to make things work with MSIE.
//
if(!this.fixedWidthSet_){this.div_.style.width="";}if(typeof content.nodeType==="undefined"){this.div_.innerHTML=this.getCloseBoxImg_()+content;}else{this.div_.innerHTML=this.getCloseBoxImg_();this.div_.appendChild(content);}// Perverse code required to make things work with MSIE.
// (Ensures the close box does, in fact, float to the right.)
//
if(!this.fixedWidthSet_){this.div_.style.width=this.div_.offsetWidth+"px";if(typeof content.nodeType==="undefined"){this.div_.innerHTML=this.getCloseBoxImg_()+content;}else{this.div_.innerHTML=this.getCloseBoxImg_();this.div_.appendChild(content);}}this.addClickHandler_();}/**
                             * This event is fired when the content of the InfoBox changes.
                             * @name InfoBox#content_changed
                             * @event
                             */google.maps.event.trigger(this,"content_changed");};/**
                         * Sets the geographic location of the InfoBox.
                         * @param {LatLng} latlng
                         */InfoBox.prototype.setPosition=function(latlng){this.position_=latlng;if(this.div_){this.draw();}/**
                             * This event is fired when the position of the InfoBox changes.
                             * @name InfoBox#position_changed
                             * @event
                             */google.maps.event.trigger(this,"position_changed");};/**
                         * Sets the zIndex style for the InfoBox.
                         * @param {number} index
                         */InfoBox.prototype.setZIndex=function(index){this.zIndex_=index;if(this.div_){this.div_.style.zIndex=index;}/**
                             * This event is fired when the zIndex of the InfoBox changes.
                             * @name InfoBox#zindex_changed
                             * @event
                             */google.maps.event.trigger(this,"zindex_changed");};/**
                         * Sets the visibility of the InfoBox.
                         * @param {boolean} isVisible
                         */InfoBox.prototype.setVisible=function(isVisible){this.isHidden_=!isVisible;if(this.div_){this.div_.style.visibility=this.isHidden_?"hidden":"visible";}};/**
                         * Returns the content of the InfoBox.
                         * @returns {string}
                         */InfoBox.prototype.getContent=function(){return this.content_;};/**
                         * Returns the geographic location of the InfoBox.
                         * @returns {LatLng}
                         */InfoBox.prototype.getPosition=function(){return this.position_;};/**
                         * Returns the zIndex for the InfoBox.
                         * @returns {number}
                         */InfoBox.prototype.getZIndex=function(){return this.zIndex_;};/**
                         * Returns a flag indicating whether the InfoBox is visible.
                         * @returns {boolean}
                         */InfoBox.prototype.getVisible=function(){var isVisible;if(typeof this.getMap()==="undefined"||this.getMap()===null){isVisible=false;}else{isVisible=!this.isHidden_;}return isVisible;};/**
                         * Shows the InfoBox. [Deprecated; use <tt>setVisible</tt> instead.]
                         */InfoBox.prototype.show=function(){this.isHidden_=false;if(this.div_){this.div_.style.visibility="visible";}};/**
                         * Hides the InfoBox. [Deprecated; use <tt>setVisible</tt> instead.]
                         */InfoBox.prototype.hide=function(){this.isHidden_=true;if(this.div_){this.div_.style.visibility="hidden";}};/**
                         * Adds the InfoBox to the specified map or Street View panorama. If <tt>anchor</tt>
                         *  (usually a <tt>google.maps.Marker</tt>) is specified, the position
                         *  of the InfoBox is set to the position of the <tt>anchor</tt>. If the
                         *  anchor is dragged to a new location, the InfoBox moves as well.
                         * @param {Map|StreetViewPanorama} map
                         * @param {MVCObject} [anchor]
                         */InfoBox.prototype.open=function(map,anchor){var me=this;if(anchor){this.position_=anchor.getPosition();this.moveListener_=google.maps.event.addListener(anchor,"position_changed",function(){me.setPosition(this.getPosition());});}this.setMap(map);if(this.div_){this.panBox_();}};/**
                         * Removes the InfoBox from the map.
                         */InfoBox.prototype.close=function(){var i;if(this.closeListener_){google.maps.event.removeListener(this.closeListener_);this.closeListener_=null;}if(this.eventListeners_){for(i=0;i<this.eventListeners_.length;i++){google.maps.event.removeListener(this.eventListeners_[i]);}this.eventListeners_=null;}if(this.moveListener_){google.maps.event.removeListener(this.moveListener_);this.moveListener_=null;}if(this.contextListener_){google.maps.event.removeListener(this.contextListener_);this.contextListener_=null;}this.setMap(null);};/**
                         *  google-maps-utility-library-v3-keydragzoom
                         *
                         * @version: 2.0.9
                         * @author: Nianwei Liu [nianwei at gmail dot com] & Gary Little [gary at luxcentral dot com]
                         * @contributors: undefined
                         * @date: Fri May 13 2016 13:45:18 GMT-0400 (EDT)
                         * @license: Apache License 2.0
                         *//**
                         * @fileoverview This library adds a drag zoom capability to a V3 Google map.
                         *  When drag zoom is enabled, holding down a designated hot key <code>(shift | ctrl | alt)</code>
                         *  while dragging a box around an area of interest will zoom the map in to that area when
                         *  the mouse button is released. Optionally, a visual control can also be supplied for turning
                         *  a drag zoom operation on and off.
                         *  Only one line of code is needed: <code>google.maps.Map.enableKeyDragZoom();</code>
                         *  <p>
                         *  NOTE: Do not use Ctrl as the hot key with Google Maps JavaScript API V3 since, unlike with V2,
                         *  it causes a context menu to appear when running on the Macintosh.
                         *  <p>
                         *  Note that if the map's container has a border around it, the border widths must be specified
                         *  in pixel units (or as thin, medium, or thick). This is required because of an MSIE limitation.
                         *   <p>NL: 2009-05-28: initial port to core API V3.
                         *  <br>NL: 2009-11-02: added a temp fix for -moz-transform for FF3.5.x using code from Paul Kulchenko (http://notebook.kulchenko.com/maps/gridmove).
                         *  <br>NL: 2010-02-02: added a fix for IE flickering on divs onmousemove, caused by scroll value when get mouse position.
                         *  <br>GL: 2010-06-15: added a visual control option.
                         */(function(){/*jslint browser:true *//*global window,google *//* Utility functions use "var funName=function()" syntax to allow use of the *//* Dean Edwards Packer compression tool (with Shrink variables, without Base62 encode). *//**
                             * Converts "thin", "medium", and "thick" to pixel widths
                             * in an MSIE environment. Not called for other browsers
                             * because getComputedStyle() returns pixel widths automatically.
                             * @param {string} widthValue The value of the border width parameter.
                             */var toPixels=function toPixels(widthValue){var px;switch(widthValue){case"thin":px="2px";break;case"medium":px="4px";break;case"thick":px="6px";break;default:px=widthValue;}return px;};/**
                             * Get the widths of the borders of an HTML element.
                             *
                             * @param {Node} h  The HTML element.
                             * @return {Object} The width object {top, bottom left, right}.
                             */var getBorderWidths=function getBorderWidths(h){var computedStyle;var bw={};if(document.defaultView&&document.defaultView.getComputedStyle){computedStyle=h.ownerDocument.defaultView.getComputedStyle(h,"");if(computedStyle){// The computed styles are always in pixel units (good!)
bw.top=parseInt(computedStyle.borderTopWidth,10)||0;bw.bottom=parseInt(computedStyle.borderBottomWidth,10)||0;bw.left=parseInt(computedStyle.borderLeftWidth,10)||0;bw.right=parseInt(computedStyle.borderRightWidth,10)||0;return bw;}}else if(document.documentElement.currentStyle){// MSIE
if(h.currentStyle){// The current styles may not be in pixel units so try to convert (bad!)
bw.top=parseInt(toPixels(h.currentStyle.borderTopWidth),10)||0;bw.bottom=parseInt(toPixels(h.currentStyle.borderBottomWidth),10)||0;bw.left=parseInt(toPixels(h.currentStyle.borderLeftWidth),10)||0;bw.right=parseInt(toPixels(h.currentStyle.borderRightWidth),10)||0;return bw;}}// Shouldn't get this far for any modern browser
bw.top=parseInt(h.style["border-top-width"],10)||0;bw.bottom=parseInt(h.style["border-bottom-width"],10)||0;bw.left=parseInt(h.style["border-left-width"],10)||0;bw.right=parseInt(h.style["border-right-width"],10)||0;return bw;};// Page scroll values for use by getMousePosition. To prevent flickering on MSIE
// they are calculated only when the document actually scrolls, not every time the
// mouse moves (as they would be if they were calculated inside getMousePosition).
var scroll={x:0,y:0};var getScrollValue=function getScrollValue(e){scroll.x=typeof document.documentElement.scrollLeft!=="undefined"?document.documentElement.scrollLeft:document.body.scrollLeft;scroll.y=typeof document.documentElement.scrollTop!=="undefined"?document.documentElement.scrollTop:document.body.scrollTop;};getScrollValue();/**
                             * Get the position of the mouse relative to the document.
                             * @param {Event} e  The mouse event.
                             * @return {Object} The position object {left, top}.
                             */var getMousePosition=function getMousePosition(e){var posX=0,posY=0;e=e||window.event;if(typeof e.pageX!=="undefined"){posX=e.pageX;posY=e.pageY;}else if(typeof e.clientX!=="undefined"){// MSIE
posX=e.clientX+scroll.x;posY=e.clientY+scroll.y;}return{left:posX,top:posY};};/**
                             * Get the position of an HTML element relative to the document.
                             * @param {Node} h  The HTML element.
                             * @return {Object} The position object {left, top}.
                             */var getElementPosition=function getElementPosition(h){var posX=h.offsetLeft;var posY=h.offsetTop;var parent=h.offsetParent;// Add offsets for all ancestors in the hierarchy
while(parent!==null){// Adjust for scrolling elements which may affect the map position.
//
// See http://www.howtocreate.co.uk/tutorials/javascript/browserspecific
//
// "...make sure that every element [on a Web page] with an overflow
// of anything other than visible also has a position style set to
// something other than the default static..."
if(parent!==document.body&&parent!==document.documentElement){posX-=parent.scrollLeft;posY-=parent.scrollTop;}// See http://groups.google.com/group/google-maps-js-api-v3/browse_thread/thread/4cb86c0c1037a5e5
// Example: http://notebook.kulchenko.com/maps/gridmove
var m=parent;// This is the "normal" way to get offset information:
var moffx=m.offsetLeft;var moffy=m.offsetTop;// This covers those cases where a transform is used:
if(!moffx&&!moffy&&window.getComputedStyle){var matrix=document.defaultView.getComputedStyle(m,null).MozTransform||document.defaultView.getComputedStyle(m,null).WebkitTransform;if(matrix){if(typeof matrix==="string"){var parms=matrix.split(",");moffx+=parseInt(parms[4],10)||0;moffy+=parseInt(parms[5],10)||0;}}}posX+=moffx;posY+=moffy;parent=parent.offsetParent;}return{left:posX,top:posY};};/**
                             * Set the properties of an object to those from another object.
                             * @param {Object} obj The target object.
                             * @param {Object} vals The source object.
                             */var setVals=function setVals(obj,vals){if(obj&&vals){for(var x in vals){if(vals.hasOwnProperty(x)){obj[x]=vals[x];}}}return obj;};/**
                             * Set the opacity. If op is not passed in, this function just performs an MSIE fix.
                             * @param {Node} h The HTML element.
                             * @param {number} op The opacity value (0-1).
                             */var setOpacity=function setOpacity(h,op){if(typeof op!=="undefined"){h.style.opacity=op;}if(typeof h.style.opacity!=="undefined"&&h.style.opacity!==""){h.style.filter="alpha(opacity="+h.style.opacity*100+")";}};/**
                             * @name KeyDragZoomOptions
                             * @class This class represents the optional parameter passed into <code>google.maps.Map.enableKeyDragZoom</code>.
                             * @property {string} [key="shift"] The hot key to hold down to activate a drag zoom, <code>shift | ctrl | alt</code>.
                             *  NOTE: Do not use Ctrl as the hot key with Google Maps JavaScript API V3 since, unlike with V2,
                             *  it causes a context menu to appear when running on the Macintosh. Also note that the
                             *  <code>alt</code> hot key refers to the Option key on a Macintosh.
                             * @property {Object} [boxStyle={border: "4px solid #736AFF"}]
                             *  An object literal defining the CSS styles of the zoom box.
                             *  Border widths must be specified in pixel units (or as thin, medium, or thick).
                             * @property {Object} [veilStyle={backgroundColor: "gray", opacity: 0.25, cursor: "crosshair"}]
                             *  An object literal defining the CSS styles of the veil pane which covers the map when a drag
                             *  zoom is activated. The previous name for this property was <code>paneStyle</code> but the use
                             *  of this name is now deprecated.
                             * @property {boolean} [noZoom=false] A flag indicating whether to disable zooming after an area is
                             *  selected. Set this to <code>true</code> to allow KeyDragZoom to be used as a simple area
                             *  selection tool.
                             * @property {boolean} [visualEnabled=false] A flag indicating whether a visual control is to be used.
                             * @property {string} [visualClass=""] The name of the CSS class defining the styles for the visual
                             *  control. To prevent the visual control from being printed, set this property to the name of
                             *  a class, defined inside a <code>@media print</code> rule, which sets the CSS
                             *  <code>display</code> style to <code>none</code>.
                             * @property {ControlPosition} [visualPosition=google.maps.ControlPosition.LEFT_TOP]
                             *  The position of the visual control.
                             * @property {Size} [visualPositionOffset=google.maps.Size(35, 0)] The width and height values
                             *  provided by this property are the offsets (in pixels) from the location at which the control
                             *  would normally be drawn to the desired drawing location.
                             * @property {number} [visualPositionIndex=null] The index of the visual control.
                             *  The index is for controlling the placement of the control relative to other controls at the
                             *  position given by <code>visualPosition</code>; controls with a lower index are placed first.
                             *  Use a negative value to place the control <i>before</i> any default controls. No index is
                             *  generally required.
                             * @property {String} [visualSprite="http://maps.gstatic.com/mapfiles/ftr/controls/dragzoom_btn.png"]
                             *  The URL of the sprite image used for showing the visual control in the on, off, and hot
                             *  (i.e., when the mouse is over the control) states. The three images within the sprite must
                             *  be the same size and arranged in on-hot-off order in a single row with no spaces between images.
                             * @property {Size} [visualSize=google.maps.Size(20, 20)] The width and height values provided by
                             *  this property are the size (in pixels) of each of the images within <code>visualSprite</code>.
                             * @property {Object} [visualTips={off: "Turn on drag zoom mode", on: "Turn off drag zoom mode"}]
                             *  An object literal defining the help tips that appear when
                             *  the mouse moves over the visual control. The <code>off</code> property is the tip to be shown
                             *  when the control is off and the <code>on</code> property is the tip to be shown when the
                             *  control is on.
                             *//**
                             * @name DragZoom
                             * @class This class represents a drag zoom object for a map. The object is activated by holding down the hot key
                             * or by turning on the visual control.
                             * This object is created when <code>google.maps.Map.enableKeyDragZoom</code> is called; it cannot be created directly.
                             * Use <code>google.maps.Map.getDragZoomObject</code> to gain access to this object in order to attach event listeners.
                             * @param {Map} map The map to which the DragZoom object is to be attached.
                             * @param {KeyDragZoomOptions} [opt_zoomOpts] The optional parameters.
                             */function DragZoom(map,opt_zoomOpts){var me=this;var ov=new google.maps.OverlayView();ov.onAdd=function(){me.init_(map,opt_zoomOpts);};ov.draw=function(){};ov.onRemove=function(){};ov.setMap(map);this.prjov_=ov;}/**
                             * Initialize the tool.
                             * @param {Map} map The map to which the DragZoom object is to be attached.
                             * @param {KeyDragZoomOptions} [opt_zoomOpts] The optional parameters.
                             */DragZoom.prototype.init_=function(map,opt_zoomOpts){var i;var me=this;this.map_=map;opt_zoomOpts=opt_zoomOpts||{};this.key_=opt_zoomOpts.key||"shift";this.key_=this.key_.toLowerCase();this.borderWidths_=getBorderWidths(this.map_.getDiv());this.veilDiv_=[];for(i=0;i<4;i++){this.veilDiv_[i]=document.createElement("div");// Prevents selection of other elements on the webpage
// when a drag zoom operation is in progress:
this.veilDiv_[i].onselectstart=function(){return false;};// Apply default style values for the veil:
setVals(this.veilDiv_[i].style,{backgroundColor:"gray",opacity:0.25,cursor:"crosshair"});// Apply style values specified in veilStyle parameter:
setVals(this.veilDiv_[i].style,opt_zoomOpts.paneStyle);// Old option name was "paneStyle"
setVals(this.veilDiv_[i].style,opt_zoomOpts.veilStyle);// New name is "veilStyle"
// Apply mandatory style values:
setVals(this.veilDiv_[i].style,{position:"absolute",overflow:"hidden",display:"none"});// Workaround for Firefox Shift-Click problem:
if(this.key_==="shift"){this.veilDiv_[i].style.MozUserSelect="none";}setOpacity(this.veilDiv_[i]);// An IE fix: If the background is transparent it cannot capture mousedown
// events, so if it is, change the background to white with 0 opacity.
if(this.veilDiv_[i].style.backgroundColor==="transparent"){this.veilDiv_[i].style.backgroundColor="white";setOpacity(this.veilDiv_[i],0);}this.map_.getDiv().appendChild(this.veilDiv_[i]);}this.noZoom_=opt_zoomOpts.noZoom||false;this.visualEnabled_=opt_zoomOpts.visualEnabled||false;this.visualClass_=opt_zoomOpts.visualClass||"";this.visualPosition_=opt_zoomOpts.visualPosition||google.maps.ControlPosition.LEFT_TOP;this.visualPositionOffset_=opt_zoomOpts.visualPositionOffset||new google.maps.Size(35,0);this.visualPositionIndex_=opt_zoomOpts.visualPositionIndex||null;this.visualSprite_=opt_zoomOpts.visualSprite||"http"+(document.location.protocol==="https:"?"s":"")+"://maps.gstatic.com/mapfiles/ftr/controls/dragzoom_btn.png";this.visualSize_=opt_zoomOpts.visualSize||new google.maps.Size(20,20);this.visualTips_=opt_zoomOpts.visualTips||{};this.visualTips_.off=this.visualTips_.off||"Turn on drag zoom mode";this.visualTips_.on=this.visualTips_.on||"Turn off drag zoom mode";this.boxDiv_=document.createElement("div");// Apply default style values for the zoom box:
setVals(this.boxDiv_.style,{border:"4px solid #736AFF"});// Apply style values specified in boxStyle parameter:
setVals(this.boxDiv_.style,opt_zoomOpts.boxStyle);// Apply mandatory style values:
setVals(this.boxDiv_.style,{position:"absolute",display:"none"});setOpacity(this.boxDiv_);this.map_.getDiv().appendChild(this.boxDiv_);this.boxBorderWidths_=getBorderWidths(this.boxDiv_);this.listeners_=[google.maps.event.addDomListener(document,"keydown",function(e){me.onKeyDown_(e);}),google.maps.event.addDomListener(document,"keyup",function(e){me.onKeyUp_(e);}),google.maps.event.addDomListener(this.veilDiv_[0],"mousedown",function(e){me.onMouseDown_(e);}),google.maps.event.addDomListener(this.veilDiv_[1],"mousedown",function(e){me.onMouseDown_(e);}),google.maps.event.addDomListener(this.veilDiv_[2],"mousedown",function(e){me.onMouseDown_(e);}),google.maps.event.addDomListener(this.veilDiv_[3],"mousedown",function(e){me.onMouseDown_(e);}),google.maps.event.addDomListener(document,"mousedown",function(e){me.onMouseDownDocument_(e);}),google.maps.event.addDomListener(document,"mousemove",function(e){me.onMouseMove_(e);}),google.maps.event.addDomListener(document,"mouseup",function(e){me.onMouseUp_(e);}),google.maps.event.addDomListener(window,"scroll",getScrollValue)];this.hotKeyDown_=false;this.mouseDown_=false;this.dragging_=false;this.startPt_=null;this.endPt_=null;this.mapWidth_=null;this.mapHeight_=null;this.mousePosn_=null;this.mapPosn_=null;if(this.visualEnabled_){this.buttonDiv_=this.initControl_(this.visualPositionOffset_);if(this.visualPositionIndex_!==null){this.buttonDiv_.index=this.visualPositionIndex_;}this.map_.controls[this.visualPosition_].push(this.buttonDiv_);this.controlIndex_=this.map_.controls[this.visualPosition_].length-1;}};/**
                             * Initializes the visual control and returns its DOM element.
                             * @param {Size} offset The offset of the control from its normal position.
                             * @return {Node} The DOM element containing the visual control.
                             */DragZoom.prototype.initControl_=function(offset){var control;var image;var me=this;control=document.createElement("div");control.className=this.visualClass_;control.style.position="relative";control.style.overflow="hidden";control.style.height=this.visualSize_.height+"px";control.style.width=this.visualSize_.width+"px";control.title=this.visualTips_.off;image=document.createElement("img");image.src=this.visualSprite_;image.style.position="absolute";image.style.left=-(this.visualSize_.width*2)+"px";image.style.top=0+"px";control.appendChild(image);control.onclick=function(e){me.hotKeyDown_=!me.hotKeyDown_;if(me.hotKeyDown_){me.buttonDiv_.firstChild.style.left=-(me.visualSize_.width*0)+"px";me.buttonDiv_.title=me.visualTips_.on;me.activatedByControl_=true;google.maps.event.trigger(me,"activate");}else{me.buttonDiv_.firstChild.style.left=-(me.visualSize_.width*2)+"px";me.buttonDiv_.title=me.visualTips_.off;google.maps.event.trigger(me,"deactivate");}me.onMouseMove_(e);// Updates the veil
};control.onmouseover=function(){me.buttonDiv_.firstChild.style.left=-(me.visualSize_.width*1)+"px";};control.onmouseout=function(){if(me.hotKeyDown_){me.buttonDiv_.firstChild.style.left=-(me.visualSize_.width*0)+"px";me.buttonDiv_.title=me.visualTips_.on;}else{me.buttonDiv_.firstChild.style.left=-(me.visualSize_.width*2)+"px";me.buttonDiv_.title=me.visualTips_.off;}};control.ondragstart=function(){return false;};setVals(control.style,{cursor:"pointer",marginTop:offset.height+"px",marginLeft:offset.width+"px"});return control;};/**
                             * Returns <code>true</code> if the hot key is being pressed when an event occurs.
                             * @param {Event} e The keyboard event.
                             * @return {boolean} Flag indicating whether the hot key is down.
                             */DragZoom.prototype.isHotKeyDown_=function(e){var isHot;e=e||window.event;isHot=e.shiftKey&&this.key_==="shift"||e.altKey&&this.key_==="alt"||e.ctrlKey&&this.key_==="ctrl";if(!isHot){// Need to look at keyCode for Opera because it
// doesn't set the shiftKey, altKey, ctrlKey properties
// unless a non-modifier event is being reported.
//
// See http://cross-browser.com/x/examples/shift_mode.php
// Also see http://unixpapa.com/js/key.html
switch(e.keyCode){case 16:if(this.key_==="shift"){isHot=true;}break;case 17:if(this.key_==="ctrl"){isHot=true;}break;case 18:if(this.key_==="alt"){isHot=true;}break;}}return isHot;};/**
                             * Returns <code>true</code> if the mouse is on top of the map div.
                             * The position is captured in onMouseMove_.
                             * @return {boolean}
                             */DragZoom.prototype.isMouseOnMap_=function(){var mousePosn=this.mousePosn_;if(mousePosn){var mapPosn=this.mapPosn_;var mapDiv=this.map_.getDiv();return mousePosn.left>mapPosn.left&&mousePosn.left<mapPosn.left+mapDiv.offsetWidth&&mousePosn.top>mapPosn.top&&mousePosn.top<mapPosn.top+mapDiv.offsetHeight;}else{// if user never moved mouse
return false;}};/**
                             * Show the veil if the hot key is down and the mouse is over the map,
                             * otherwise hide the veil.
                             */DragZoom.prototype.setVeilVisibility_=function(){var i;if(this.map_&&this.hotKeyDown_&&this.isMouseOnMap_()){var mapDiv=this.map_.getDiv();this.mapWidth_=mapDiv.offsetWidth-(this.borderWidths_.left+this.borderWidths_.right);this.mapHeight_=mapDiv.offsetHeight-(this.borderWidths_.top+this.borderWidths_.bottom);if(this.activatedByControl_){// Veil covers entire map (except control)
var left=parseInt(this.buttonDiv_.style.left,10)+this.visualPositionOffset_.width;var top=parseInt(this.buttonDiv_.style.top,10)+this.visualPositionOffset_.height;var width=this.visualSize_.width;var height=this.visualSize_.height;// Left veil rectangle:
this.veilDiv_[0].style.top="0px";this.veilDiv_[0].style.left="0px";this.veilDiv_[0].style.width=left+"px";this.veilDiv_[0].style.height=this.mapHeight_+"px";// Right veil rectangle:
this.veilDiv_[1].style.top="0px";this.veilDiv_[1].style.left=left+width+"px";this.veilDiv_[1].style.width=this.mapWidth_-(left+width)+"px";this.veilDiv_[1].style.height=this.mapHeight_+"px";// Top veil rectangle:
this.veilDiv_[2].style.top="0px";this.veilDiv_[2].style.left=left+"px";this.veilDiv_[2].style.width=width+"px";this.veilDiv_[2].style.height=top+"px";// Bottom veil rectangle:
this.veilDiv_[3].style.top=top+height+"px";this.veilDiv_[3].style.left=left+"px";this.veilDiv_[3].style.width=width+"px";this.veilDiv_[3].style.height=this.mapHeight_-(top+height)+"px";for(i=0;i<this.veilDiv_.length;i++){this.veilDiv_[i].style.display="block";}}else{this.veilDiv_[0].style.left="0px";this.veilDiv_[0].style.top="0px";this.veilDiv_[0].style.width=this.mapWidth_+"px";this.veilDiv_[0].style.height=this.mapHeight_+"px";for(i=1;i<this.veilDiv_.length;i++){this.veilDiv_[i].style.width="0px";this.veilDiv_[i].style.height="0px";}for(i=0;i<this.veilDiv_.length;i++){this.veilDiv_[i].style.display="block";}}}else{for(i=0;i<this.veilDiv_.length;i++){this.veilDiv_[i].style.display="none";}}};/**
                             * Handle key down. Show the veil if the hot key has been pressed.
                             * @param {Event} e The keyboard event.
                             */DragZoom.prototype.onKeyDown_=function(e){if(this.map_&&!this.hotKeyDown_&&this.isHotKeyDown_(e)){this.mapPosn_=getElementPosition(this.map_.getDiv());this.hotKeyDown_=true;this.activatedByControl_=false;this.setVeilVisibility_();/**
                                     * This event is fired when the hot key is pressed.
                                     * @name DragZoom#activate
                                     * @event
                                     */google.maps.event.trigger(this,"activate");}};/**
                             * Get the <code>google.maps.Point</code> of the mouse position.
                             * @param {Event} e The mouse event.
                             * @return {Point} The mouse position.
                             */DragZoom.prototype.getMousePoint_=function(e){var mousePosn=getMousePosition(e);var p=new google.maps.Point();p.x=mousePosn.left-this.mapPosn_.left-this.borderWidths_.left;p.y=mousePosn.top-this.mapPosn_.top-this.borderWidths_.top;p.x=Math.min(p.x,this.mapWidth_);p.y=Math.min(p.y,this.mapHeight_);p.x=Math.max(p.x,0);p.y=Math.max(p.y,0);return p;};/**
                             * Handle mouse down.
                             * @param {Event} e The mouse event.
                             */DragZoom.prototype.onMouseDown_=function(e){if(this.map_&&this.hotKeyDown_){this.mapPosn_=getElementPosition(this.map_.getDiv());this.dragging_=true;this.startPt_=this.endPt_=this.getMousePoint_(e);this.boxDiv_.style.width=this.boxDiv_.style.height="0px";var prj=this.prjov_.getProjection();var latlng=prj.fromContainerPixelToLatLng(this.startPt_);/**
                                     * This event is fired when the drag operation begins.
                                     * The parameter passed is the geographic position of the starting point.
                                     * @name DragZoom#dragstart
                                     * @param {LatLng} latlng The geographic position of the starting point.
                                     * @event
                                     */google.maps.event.trigger(this,"dragstart",latlng);}};/**
                             * Handle mouse down at the document level.
                             * @param {Event} e The mouse event.
                             */DragZoom.prototype.onMouseDownDocument_=function(e){this.mouseDown_=true;};/**
                             * Handle mouse move.
                             * @param {Event} e The mouse event.
                             */DragZoom.prototype.onMouseMove_=function(e){this.mousePosn_=getMousePosition(e);if(this.dragging_){this.endPt_=this.getMousePoint_(e);var left=Math.min(this.startPt_.x,this.endPt_.x);var top=Math.min(this.startPt_.y,this.endPt_.y);var width=Math.abs(this.startPt_.x-this.endPt_.x);var height=Math.abs(this.startPt_.y-this.endPt_.y);// For benefit of MSIE 7/8 ensure following values are not negative:
var boxWidth=Math.max(0,width-(this.boxBorderWidths_.left+this.boxBorderWidths_.right));var boxHeight=Math.max(0,height-(this.boxBorderWidths_.top+this.boxBorderWidths_.bottom));// Left veil rectangle:
this.veilDiv_[0].style.top="0px";this.veilDiv_[0].style.left="0px";this.veilDiv_[0].style.width=left+"px";this.veilDiv_[0].style.height=this.mapHeight_+"px";// Right veil rectangle:
this.veilDiv_[1].style.top="0px";this.veilDiv_[1].style.left=left+width+"px";this.veilDiv_[1].style.width=this.mapWidth_-(left+width)+"px";this.veilDiv_[1].style.height=this.mapHeight_+"px";// Top veil rectangle:
this.veilDiv_[2].style.top="0px";this.veilDiv_[2].style.left=left+"px";this.veilDiv_[2].style.width=width+"px";this.veilDiv_[2].style.height=top+"px";// Bottom veil rectangle:
this.veilDiv_[3].style.top=top+height+"px";this.veilDiv_[3].style.left=left+"px";this.veilDiv_[3].style.width=width+"px";this.veilDiv_[3].style.height=this.mapHeight_-(top+height)+"px";// Selection rectangle:
this.boxDiv_.style.top=top+"px";this.boxDiv_.style.left=left+"px";this.boxDiv_.style.width=boxWidth+"px";this.boxDiv_.style.height=boxHeight+"px";this.boxDiv_.style.display="block";/**
                                     * This event is fired repeatedly while the user drags a box across the area of interest.
                                     * The southwest and northeast point are passed as parameters of type <code>google.maps.Point</code>
                                     * (for performance reasons), relative to the map container. Also passed is the projection object
                                     * so that the event listener, if necessary, can convert the pixel positions to geographic
                                     * coordinates using <code>google.maps.MapCanvasProjection.fromContainerPixelToLatLng</code>.
                                     * @name DragZoom#drag
                                     * @param {Point} southwestPixel The southwest point of the selection area.
                                     * @param {Point} northeastPixel The northeast point of the selection area.
                                     * @param {MapCanvasProjection} prj The projection object.
                                     * @event
                                     */google.maps.event.trigger(this,"drag",new google.maps.Point(left,top+height),new google.maps.Point(left+width,top),this.prjov_.getProjection());}else if(!this.mouseDown_){this.mapPosn_=getElementPosition(this.map_.getDiv());this.setVeilVisibility_();}};/**
                             * Handle mouse up.
                             * @param {Event} e The mouse event.
                             */DragZoom.prototype.onMouseUp_=function(e){var z;var me=this;this.mouseDown_=false;if(this.dragging_){if(this.getMousePoint_(e).x===this.startPt_.x&&this.getMousePoint_(e).y===this.startPt_.y){this.onKeyUp_(e);// Cancel event
return;}var left=Math.min(this.startPt_.x,this.endPt_.x);var top=Math.min(this.startPt_.y,this.endPt_.y);var width=Math.abs(this.startPt_.x-this.endPt_.x);var height=Math.abs(this.startPt_.y-this.endPt_.y);// Google Maps API bug: setCenter() doesn't work as expected if the map has a
// border on the left or top. The code here includes a workaround for this problem.
var kGoogleCenteringBug=true;if(kGoogleCenteringBug){left+=this.borderWidths_.left;top+=this.borderWidths_.top;}var prj=this.prjov_.getProjection();var sw=prj.fromContainerPixelToLatLng(new google.maps.Point(left,top+height));var ne=prj.fromContainerPixelToLatLng(new google.maps.Point(left+width,top));var bnds=new google.maps.LatLngBounds(sw,ne);if(this.noZoom_){this.boxDiv_.style.display="none";}else{// Sometimes fitBounds causes a zoom OUT, so restore original zoom level if this happens.
z=this.map_.getZoom();this.map_.fitBounds(bnds);if(this.map_.getZoom()<z){this.map_.setZoom(z);}// Redraw box after zoom:
var swPt=prj.fromLatLngToContainerPixel(sw);var nePt=prj.fromLatLngToContainerPixel(ne);if(kGoogleCenteringBug){swPt.x-=this.borderWidths_.left;swPt.y-=this.borderWidths_.top;nePt.x-=this.borderWidths_.left;nePt.y-=this.borderWidths_.top;}this.boxDiv_.style.left=swPt.x+"px";this.boxDiv_.style.top=nePt.y+"px";this.boxDiv_.style.width=Math.abs(nePt.x-swPt.x)-(this.boxBorderWidths_.left+this.boxBorderWidths_.right)+"px";this.boxDiv_.style.height=Math.abs(nePt.y-swPt.y)-(this.boxBorderWidths_.top+this.boxBorderWidths_.bottom)+"px";// Hide box asynchronously after 1 second:
setTimeout(function(){me.boxDiv_.style.display="none";},1000);}this.dragging_=false;this.onMouseMove_(e);// Updates the veil
/**
                                     * This event is fired when the drag operation ends.
                                     * The parameter passed is the geographic bounds of the selected area.
                                     * Note that this event is <i>not</i> fired if the hot key is released before the drag operation ends.
                                     * @name DragZoom#dragend
                                     * @param {LatLngBounds} bnds The geographic bounds of the selected area.
                                     * @event
                                     */google.maps.event.trigger(this,"dragend",bnds);// if the hot key isn't down, the drag zoom must have been activated by turning
// on the visual control. In this case, finish up by simulating a key up event.
if(!this.isHotKeyDown_(e)){this.onKeyUp_(e);}}};/**
                             * Handle key up.
                             * @param {Event} e The keyboard event.
                             */DragZoom.prototype.onKeyUp_=function(e){var i;var left,top,width,height,prj,sw,ne;var bnds=null;if(this.map_&&this.hotKeyDown_){this.hotKeyDown_=false;if(this.dragging_){this.boxDiv_.style.display="none";this.dragging_=false;// Calculate the bounds when drag zoom was cancelled
left=Math.min(this.startPt_.x,this.endPt_.x);top=Math.min(this.startPt_.y,this.endPt_.y);width=Math.abs(this.startPt_.x-this.endPt_.x);height=Math.abs(this.startPt_.y-this.endPt_.y);prj=this.prjov_.getProjection();sw=prj.fromContainerPixelToLatLng(new google.maps.Point(left,top+height));ne=prj.fromContainerPixelToLatLng(new google.maps.Point(left+width,top));bnds=new google.maps.LatLngBounds(sw,ne);}for(i=0;i<this.veilDiv_.length;i++){this.veilDiv_[i].style.display="none";}if(this.visualEnabled_){this.buttonDiv_.firstChild.style.left=-(this.visualSize_.width*2)+"px";this.buttonDiv_.title=this.visualTips_.off;this.buttonDiv_.style.display="";}/**
                                     * This event is fired when the hot key is released.
                                     * The parameter passed is the geographic bounds of the selected area immediately
                                     * before the hot key was released.
                                     * @name DragZoom#deactivate
                                     * @param {LatLngBounds} bnds The geographic bounds of the selected area immediately
                                     *  before the hot key was released.
                                     * @event
                                     */google.maps.event.trigger(this,"deactivate",bnds);}};/**
                             * @name google.maps.Map
                             * @class These are new methods added to the Google Maps JavaScript API V3's
                             * <a href="http://code.google.com/apis/maps/documentation/javascript/reference.html#Map">Map</a>
                             * class.
                             *//**
                             * Enables drag zoom. The user can zoom to an area of interest by holding down the hot key
                             * <code>(shift | ctrl | alt )</code> while dragging a box around the area or by turning
                             * on the visual control then dragging a box around the area.
                             * @param {KeyDragZoomOptions} opt_zoomOpts The optional parameters.
                             */google.maps.Map.prototype.enableKeyDragZoom=function(opt_zoomOpts){this.dragZoom_=new DragZoom(this,opt_zoomOpts);};/**
                             * Disables drag zoom.
                             */google.maps.Map.prototype.disableKeyDragZoom=function(){var i;var d=this.dragZoom_;if(d){for(i=0;i<d.listeners_.length;++i){google.maps.event.removeListener(d.listeners_[i]);}this.getDiv().removeChild(d.boxDiv_);for(i=0;i<d.veilDiv_.length;i++){this.getDiv().removeChild(d.veilDiv_[i]);}if(d.visualEnabled_){// Remove the custom control:
this.controls[d.visualPosition_].removeAt(d.controlIndex_);}d.prjov_.setMap(null);this.dragZoom_=null;}};/**
                             * Returns <code>true</code> if the drag zoom feature has been enabled.
                             * @return {boolean}
                             */google.maps.Map.prototype.keyDragZoomEnabled=function(){return this.dragZoom_!==null;};/**
                             * Returns the DragZoom object which is created when <code>google.maps.Map.enableKeyDragZoom</code> is called.
                             * With this object you can use <code>google.maps.event.addListener</code> to attach event listeners
                             * for the "activate", "deactivate", "dragstart", "drag", and "dragend" events.
                             * @return {DragZoom}
                             */google.maps.Map.prototype.getDragZoomObject=function(){return this.dragZoom_;};})();/**
                         *  google-maps-utility-library-v3-markerwithlabel
                         *
                         * @version: 1.1.10
                         * @author: Gary Little (inspired by code from Marc Ridey of Google).
                         * @contributors: Nicholas McCready
                         * @date: Fri May 13 2016 16:29:58 GMT-0400 (EDT)
                         * @license: Apache License 2.0
                         *//**
                         *  MarkerWithLabel allows you to define markers with associated labels. As you would expect,
                         *  if the marker is draggable, so too will be the label. In addition, a marker with a label
                         *  responds to all mouse events in the same manner as a regular marker. It also fires mouse
                         *  events and "property changed" events just as a regular marker would. Version 1.1 adds
                         *  support for the raiseOnDrag feature introduced in API V3.3.
                         *  <p>
                         *  If you drag a marker by its label, you can cancel the drag and return the marker to its
                         *  original position by pressing the <code>Esc</code> key. This doesn't work if you drag the marker
                         *  itself because this feature is not (yet) supported in the <code>google.maps.Marker</code> class.
                         *//*jslint browser:true *//*global document,google *//**
                         * @param {Function} childCtor Child class.
                         * @param {Function} parentCtor Parent class.
                         * @private
                         */function inherits(childCtor,parentCtor){/* @constructor */function tempCtor(){}tempCtor.prototype=parentCtor.prototype;childCtor.superClass_=parentCtor.prototype;childCtor.prototype=new tempCtor();/* @override */childCtor.prototype.constructor=childCtor;}/**
                         * This constructor creates a label and associates it with a marker.
                         * It is for the private use of the MarkerWithLabel class.
                         * @constructor
                         * @param {Marker} marker The marker with which the label is to be associated.
                         * @param {string} crossURL The URL of the cross image =.
                         * @param {string} handCursor The URL of the hand cursor.
                         * @private
                         */function MarkerLabel_(marker,crossURL,handCursorURL){this.marker_=marker;this.handCursorURL_=marker.handCursorURL;this.labelDiv_=document.createElement("div");this.labelDiv_.style.cssText="position: absolute; overflow: hidden;";// Set up the DIV for handling mouse events in the label. This DIV forms a transparent veil
// in the "overlayMouseTarget" pane, a veil that covers just the label. This is done so that
// events can be captured even if the label is in the shadow of a google.maps.InfoWindow.
// Code is included here to ensure the veil is always exactly the same size as the label.
this.eventDiv_=document.createElement("div");this.eventDiv_.style.cssText=this.labelDiv_.style.cssText;// This is needed for proper behavior on MSIE:
this.eventDiv_.setAttribute("onselectstart","return false;");this.eventDiv_.setAttribute("ondragstart","return false;");// Get the DIV for the "X" to be displayed when the marker is raised.
this.crossDiv_=MarkerLabel_.getSharedCross(crossURL);}inherits(MarkerLabel_,google.maps.OverlayView);/**
                         * Returns the DIV for the cross used when dragging a marker when the
                         * raiseOnDrag parameter set to true. One cross is shared with all markers.
                         * @param {string} crossURL The URL of the cross image =.
                         * @private
                         */MarkerLabel_.getSharedCross=function(crossURL){var div;if(typeof MarkerLabel_.getSharedCross.crossDiv==="undefined"){div=document.createElement("img");div.style.cssText="position: absolute; z-index: 1000002; display: none;";// Hopefully Google never changes the standard "X" attributes:
div.style.marginLeft="-8px";div.style.marginTop="-9px";div.src=crossURL;MarkerLabel_.getSharedCross.crossDiv=div;}return MarkerLabel_.getSharedCross.crossDiv;};/**
                         * Adds the DIV representing the label to the DOM. This method is called
                         * automatically when the marker's <code>setMap</code> method is called.
                         * @private
                         */MarkerLabel_.prototype.onAdd=function(){var me=this;var cMouseIsDown=false;var cDraggingLabel=false;var cSavedZIndex;var cLatOffset,cLngOffset;var cIgnoreClick;var cRaiseEnabled;var cStartPosition;var cStartCenter;// Constants:
var cRaiseOffset=20;var cDraggingCursor="url("+this.handCursorURL_+")";// Stops all processing of an event.
//
var cAbortEvent=function cAbortEvent(e){if(e.preventDefault){e.preventDefault();}e.cancelBubble=true;if(e.stopPropagation){e.stopPropagation();}};var cStopBounce=function cStopBounce(){me.marker_.setAnimation(null);};this.getPanes().overlayImage.appendChild(this.labelDiv_);this.getPanes().overlayMouseTarget.appendChild(this.eventDiv_);// One cross is shared with all markers, so only add it once:
if(typeof MarkerLabel_.getSharedCross.processed==="undefined"){this.getPanes().overlayImage.appendChild(this.crossDiv_);MarkerLabel_.getSharedCross.processed=true;}this.listeners_=[google.maps.event.addDomListener(this.eventDiv_,"mouseover",function(e){if(me.marker_.getDraggable()||me.marker_.getClickable()){this.style.cursor="pointer";google.maps.event.trigger(me.marker_,"mouseover",e);}}),google.maps.event.addDomListener(this.eventDiv_,"mouseout",function(e){if((me.marker_.getDraggable()||me.marker_.getClickable())&&!cDraggingLabel){this.style.cursor=me.marker_.getCursor();google.maps.event.trigger(me.marker_,"mouseout",e);}}),google.maps.event.addDomListener(this.eventDiv_,"mousedown",function(e){cDraggingLabel=false;if(me.marker_.getDraggable()){cMouseIsDown=true;this.style.cursor=cDraggingCursor;}if(me.marker_.getDraggable()||me.marker_.getClickable()){google.maps.event.trigger(me.marker_,"mousedown",e);cAbortEvent(e);// Prevent map pan when starting a drag on a label
}}),google.maps.event.addDomListener(document,"mouseup",function(mEvent){var position;if(cMouseIsDown){cMouseIsDown=false;me.eventDiv_.style.cursor="pointer";google.maps.event.trigger(me.marker_,"mouseup",mEvent);}if(cDraggingLabel){if(cRaiseEnabled){// Lower the marker & label
position=me.getProjection().fromLatLngToDivPixel(me.marker_.getPosition());position.y+=cRaiseOffset;me.marker_.setPosition(me.getProjection().fromDivPixelToLatLng(position));// This is not the same bouncing style as when the marker portion is dragged,
// but it will have to do:
try{// Will fail if running Google Maps API earlier than V3.3
me.marker_.setAnimation(google.maps.Animation.BOUNCE);setTimeout(cStopBounce,1406);}catch(e){}}me.crossDiv_.style.display="none";me.marker_.setZIndex(cSavedZIndex);cIgnoreClick=true;// Set flag to ignore the click event reported after a label drag
cDraggingLabel=false;mEvent.latLng=me.marker_.getPosition();google.maps.event.trigger(me.marker_,"dragend",mEvent);}}),google.maps.event.addListener(me.marker_.getMap(),"mousemove",function(mEvent){var position;if(cMouseIsDown){if(cDraggingLabel){// Change the reported location from the mouse position to the marker position:
mEvent.latLng=new google.maps.LatLng(mEvent.latLng.lat()-cLatOffset,mEvent.latLng.lng()-cLngOffset);position=me.getProjection().fromLatLngToDivPixel(mEvent.latLng);if(cRaiseEnabled){me.crossDiv_.style.left=position.x+"px";me.crossDiv_.style.top=position.y+"px";me.crossDiv_.style.display="";position.y-=cRaiseOffset;}me.marker_.setPosition(me.getProjection().fromDivPixelToLatLng(position));if(cRaiseEnabled){// Don't raise the veil; this hack needed to make MSIE act properly
me.eventDiv_.style.top=position.y+cRaiseOffset+"px";}google.maps.event.trigger(me.marker_,"drag",mEvent);}else{// Calculate offsets from the click point to the marker position:
cLatOffset=mEvent.latLng.lat()-me.marker_.getPosition().lat();cLngOffset=mEvent.latLng.lng()-me.marker_.getPosition().lng();cSavedZIndex=me.marker_.getZIndex();cStartPosition=me.marker_.getPosition();cStartCenter=me.marker_.getMap().getCenter();cRaiseEnabled=me.marker_.get("raiseOnDrag");cDraggingLabel=true;me.marker_.setZIndex(1000000);// Moves the marker & label to the foreground during a drag
mEvent.latLng=me.marker_.getPosition();google.maps.event.trigger(me.marker_,"dragstart",mEvent);}}}),google.maps.event.addDomListener(document,"keydown",function(e){if(cDraggingLabel){if(e.keyCode===27){// Esc key
cRaiseEnabled=false;me.marker_.setPosition(cStartPosition);me.marker_.getMap().setCenter(cStartCenter);google.maps.event.trigger(document,"mouseup",e);}}}),google.maps.event.addDomListener(this.eventDiv_,"click",function(e){if(me.marker_.getDraggable()||me.marker_.getClickable()){if(cIgnoreClick){// Ignore the click reported when a label drag ends
cIgnoreClick=false;}else{google.maps.event.trigger(me.marker_,"click",e);cAbortEvent(e);// Prevent click from being passed on to map
}}}),google.maps.event.addDomListener(this.eventDiv_,"dblclick",function(e){if(me.marker_.getDraggable()||me.marker_.getClickable()){google.maps.event.trigger(me.marker_,"dblclick",e);cAbortEvent(e);// Prevent map zoom when double-clicking on a label
}}),google.maps.event.addListener(this.marker_,"dragstart",function(mEvent){if(!cDraggingLabel){cRaiseEnabled=this.get("raiseOnDrag");}}),google.maps.event.addListener(this.marker_,"drag",function(mEvent){if(!cDraggingLabel){if(cRaiseEnabled){me.setPosition(cRaiseOffset);// During a drag, the marker's z-index is temporarily set to 1000000 to
// ensure it appears above all other markers. Also set the label's z-index
// to 1000000 (plus or minus 1 depending on whether the label is supposed
// to be above or below the marker).
me.labelDiv_.style.zIndex=1000000+(this.get("labelInBackground")?-1:+1);}}}),google.maps.event.addListener(this.marker_,"dragend",function(mEvent){if(!cDraggingLabel){if(cRaiseEnabled){me.setPosition(0);// Also restores z-index of label
}}}),google.maps.event.addListener(this.marker_,"position_changed",function(){me.setPosition();}),google.maps.event.addListener(this.marker_,"zindex_changed",function(){me.setZIndex();}),google.maps.event.addListener(this.marker_,"visible_changed",function(){me.setVisible();}),google.maps.event.addListener(this.marker_,"labelvisible_changed",function(){me.setVisible();}),google.maps.event.addListener(this.marker_,"title_changed",function(){me.setTitle();}),google.maps.event.addListener(this.marker_,"labelcontent_changed",function(){me.setContent();}),google.maps.event.addListener(this.marker_,"labelanchor_changed",function(){me.setAnchor();}),google.maps.event.addListener(this.marker_,"labelclass_changed",function(){me.setStyles();}),google.maps.event.addListener(this.marker_,"labelstyle_changed",function(){me.setStyles();})];};/**
                         * Removes the DIV for the label from the DOM. It also removes all event handlers.
                         * This method is called automatically when the marker's <code>setMap(null)</code>
                         * method is called.
                         * @private
                         */MarkerLabel_.prototype.onRemove=function(){var i;this.labelDiv_.parentNode.removeChild(this.labelDiv_);this.eventDiv_.parentNode.removeChild(this.eventDiv_);// Remove event listeners:
for(i=0;i<this.listeners_.length;i++){google.maps.event.removeListener(this.listeners_[i]);}};/**
                         * Draws the label on the map.
                         * @private
                         */MarkerLabel_.prototype.draw=function(){this.setContent();this.setTitle();this.setStyles();};/**
                         * Sets the content of the label.
                         * The content can be plain text or an HTML DOM node.
                         * @private
                         */MarkerLabel_.prototype.setContent=function(){var content=this.marker_.get("labelContent");if(typeof content.nodeType==="undefined"){this.labelDiv_.innerHTML=content;this.eventDiv_.innerHTML=this.labelDiv_.innerHTML;}else{this.labelDiv_.innerHTML="";// Remove current content
this.labelDiv_.appendChild(content);content=content.cloneNode(true);this.eventDiv_.innerHTML="";// Remove current content
this.eventDiv_.appendChild(content);}};/**
                         * Sets the content of the tool tip for the label. It is
                         * always set to be the same as for the marker itself.
                         * @private
                         */MarkerLabel_.prototype.setTitle=function(){this.eventDiv_.title=this.marker_.getTitle()||"";};/**
                         * Sets the style of the label by setting the style sheet and applying
                         * other specific styles requested.
                         * @private
                         */MarkerLabel_.prototype.setStyles=function(){var i,labelStyle;// Apply style values from the style sheet defined in the labelClass parameter:
this.labelDiv_.className=this.marker_.get("labelClass");this.eventDiv_.className=this.labelDiv_.className;// Clear existing inline style values:
this.labelDiv_.style.cssText="";this.eventDiv_.style.cssText="";// Apply style values defined in the labelStyle parameter:
labelStyle=this.marker_.get("labelStyle");for(i in labelStyle){if(labelStyle.hasOwnProperty(i)){this.labelDiv_.style[i]=labelStyle[i];this.eventDiv_.style[i]=labelStyle[i];}}this.setMandatoryStyles();};/**
                         * Sets the mandatory styles to the DIV representing the label as well as to the
                         * associated event DIV. This includes setting the DIV position, z-index, and visibility.
                         * @private
                         */MarkerLabel_.prototype.setMandatoryStyles=function(){this.labelDiv_.style.position="absolute";this.labelDiv_.style.overflow="hidden";// Make sure the opacity setting causes the desired effect on MSIE:
if(typeof this.labelDiv_.style.opacity!=="undefined"&&this.labelDiv_.style.opacity!==""){this.labelDiv_.style.MsFilter="\"progid:DXImageTransform.Microsoft.Alpha(opacity="+this.labelDiv_.style.opacity*100+")\"";this.labelDiv_.style.filter="alpha(opacity="+this.labelDiv_.style.opacity*100+")";}this.eventDiv_.style.position=this.labelDiv_.style.position;this.eventDiv_.style.overflow=this.labelDiv_.style.overflow;this.eventDiv_.style.opacity=0.01;// Don't use 0; DIV won't be clickable on MSIE
this.eventDiv_.style.MsFilter="\"progid:DXImageTransform.Microsoft.Alpha(opacity=1)\"";this.eventDiv_.style.filter="alpha(opacity=1)";// For MSIE
this.setAnchor();this.setPosition();// This also updates z-index, if necessary.
this.setVisible();};/**
                         * Sets the anchor point of the label.
                         * @private
                         */MarkerLabel_.prototype.setAnchor=function(){var anchor=this.marker_.get("labelAnchor");this.labelDiv_.style.marginLeft=-anchor.x+"px";this.labelDiv_.style.marginTop=-anchor.y+"px";this.eventDiv_.style.marginLeft=-anchor.x+"px";this.eventDiv_.style.marginTop=-anchor.y+"px";};/**
                         * Sets the position of the label. The z-index is also updated, if necessary.
                         * @private
                         */MarkerLabel_.prototype.setPosition=function(yOffset){var position=this.getProjection().fromLatLngToDivPixel(this.marker_.getPosition());if(typeof yOffset==="undefined"){yOffset=0;}this.labelDiv_.style.left=Math.round(position.x)+"px";this.labelDiv_.style.top=Math.round(position.y-yOffset)+"px";this.eventDiv_.style.left=this.labelDiv_.style.left;this.eventDiv_.style.top=this.labelDiv_.style.top;this.setZIndex();};/**
                         * Sets the z-index of the label. If the marker's z-index property has not been defined, the z-index
                         * of the label is set to the vertical coordinate of the label. This is in keeping with the default
                         * stacking order for Google Maps: markers to the south are in front of markers to the north.
                         * @private
                         */MarkerLabel_.prototype.setZIndex=function(){var zAdjust=this.marker_.get("labelInBackground")?-1:+1;if(typeof this.marker_.getZIndex()==="undefined"){this.labelDiv_.style.zIndex=parseInt(this.labelDiv_.style.top,10)+zAdjust;this.eventDiv_.style.zIndex=this.labelDiv_.style.zIndex;}else{this.labelDiv_.style.zIndex=this.marker_.getZIndex()+zAdjust;this.eventDiv_.style.zIndex=this.labelDiv_.style.zIndex;}};/**
                         * Sets the visibility of the label. The label is visible only if the marker itself is
                         * visible (i.e., its visible property is true) and the labelVisible property is true.
                         * @private
                         */MarkerLabel_.prototype.setVisible=function(){if(this.marker_.get("labelVisible")){this.labelDiv_.style.display=this.marker_.getVisible()?"block":"none";}else{this.labelDiv_.style.display="none";}this.eventDiv_.style.display=this.labelDiv_.style.display;};/**
                         * @name MarkerWithLabelOptions
                         * @class This class represents the optional parameter passed to the {@link MarkerWithLabel} constructor.
                         *  The properties available are the same as for <code>google.maps.Marker</code> with the addition
                         *  of the properties listed below. To change any of these additional properties after the labeled
                         *  marker has been created, call <code>google.maps.Marker.set(propertyName, propertyValue)</code>.
                         *  <p>
                         *  When any of these properties changes, a property changed event is fired. The names of these
                         *  events are derived from the name of the property and are of the form <code>propertyname_changed</code>.
                         *  For example, if the content of the label changes, a <code>labelcontent_changed</code> event
                         *  is fired.
                         *  <p>
                         * @property {string|Node} [labelContent] The content of the label (plain text or an HTML DOM node).
                         * @property {Point} [labelAnchor] By default, a label is drawn with its anchor point at (0,0) so
                         *  that its top left corner is positioned at the anchor point of the associated marker. Use this
                         *  property to change the anchor point of the label. For example, to center a 50px-wide label
                         *  beneath a marker, specify a <code>labelAnchor</code> of <code>google.maps.Point(25, 0)</code>.
                         *  (Note: x-values increase to the right and y-values increase to the top.)
                         * @property {string} [labelClass] The name of the CSS class defining the styles for the label.
                         *  Note that style values for <code>position</code>, <code>overflow</code>, <code>top</code>,
                         *  <code>left</code>, <code>zIndex</code>, <code>display</code>, <code>marginLeft</code>, and
                         *  <code>marginTop</code> are ignored; these styles are for internal use only.
                         * @property {Object} [labelStyle] An object literal whose properties define specific CSS
                         *  style values to be applied to the label. Style values defined here override those that may
                         *  be defined in the <code>labelClass</code> style sheet. If this property is changed after the
                         *  label has been created, all previously set styles (except those defined in the style sheet)
                         *  are removed from the label before the new style values are applied.
                         *  Note that style values for <code>position</code>, <code>overflow</code>, <code>top</code>,
                         *  <code>left</code>, <code>zIndex</code>, <code>display</code>, <code>marginLeft</code>, and
                         *  <code>marginTop</code> are ignored; these styles are for internal use only.
                         * @property {boolean} [labelInBackground] A flag indicating whether a label that overlaps its
                         *  associated marker should appear in the background (i.e., in a plane below the marker).
                         *  The default is <code>false</code>, which causes the label to appear in the foreground.
                         * @property {boolean} [labelVisible] A flag indicating whether the label is to be visible.
                         *  The default is <code>true</code>. Note that even if <code>labelVisible</code> is
                         *  <code>true</code>, the label will <i>not</i> be visible unless the associated marker is also
                         *  visible (i.e., unless the marker's <code>visible</code> property is <code>true</code>).
                         * @property {boolean} [raiseOnDrag] A flag indicating whether the label and marker are to be
                         *  raised when the marker is dragged. The default is <code>true</code>. If a draggable marker is
                         *  being created and a version of Google Maps API earlier than V3.3 is being used, this property
                         *  must be set to <code>false</code>.
                         * @property {boolean} [optimized] A flag indicating whether rendering is to be optimized for the
                         *  marker. <b>Important: The optimized rendering technique is not supported by MarkerWithLabel,
                         *  so the value of this parameter is always forced to <code>false</code>.
                         * @property {string} [crossImage="http://maps.gstatic.com/intl/en_us/mapfiles/drag_cross_67_16.png"]
                         *  The URL of the cross image to be displayed while dragging a marker.
                         * @property {string} [handCursor="http://maps.gstatic.com/intl/en_us/mapfiles/closedhand_8_8.cur"]
                         *  The URL of the cursor to be displayed while dragging a marker.
                         *//**
                         * Creates a MarkerWithLabel with the options specified in {@link MarkerWithLabelOptions}.
                         * @constructor
                         * @param {MarkerWithLabelOptions} [opt_options] The optional parameters.
                         */function MarkerWithLabel(opt_options){opt_options=opt_options||{};opt_options.labelContent=opt_options.labelContent||"";opt_options.labelAnchor=opt_options.labelAnchor||new google.maps.Point(0,0);opt_options.labelClass=opt_options.labelClass||"markerLabels";opt_options.labelStyle=opt_options.labelStyle||{};opt_options.labelInBackground=opt_options.labelInBackground||false;if(typeof opt_options.labelVisible==="undefined"){opt_options.labelVisible=true;}if(typeof opt_options.raiseOnDrag==="undefined"){opt_options.raiseOnDrag=true;}if(typeof opt_options.clickable==="undefined"){opt_options.clickable=true;}if(typeof opt_options.draggable==="undefined"){opt_options.draggable=false;}if(typeof opt_options.optimized==="undefined"){opt_options.optimized=false;}opt_options.crossImage=opt_options.crossImage||"http"+(document.location.protocol==="https:"?"s":"")+"://maps.gstatic.com/intl/en_us/mapfiles/drag_cross_67_16.png";opt_options.handCursor=opt_options.handCursor||"http"+(document.location.protocol==="https:"?"s":"")+"://maps.gstatic.com/intl/en_us/mapfiles/closedhand_8_8.cur";opt_options.optimized=false;// Optimized rendering is not supported
this.label=new MarkerLabel_(this,opt_options.crossImage,opt_options.handCursor);// Bind the label to the marker
// Call the parent constructor. It calls Marker.setValues to initialize, so all
// the new parameters are conveniently saved and can be accessed with get/set.
// Marker.set triggers a property changed event (called "propertyname_changed")
// that the marker label listens for in order to react to state changes.
google.maps.Marker.apply(this,arguments);}inherits(MarkerWithLabel,google.maps.Marker);/**
                         * Overrides the standard Marker setMap function.
                         * @param {Map} theMap The map to which the marker is to be added.
                         * @private
                         */MarkerWithLabel.prototype.setMap=function(theMap){// Call the inherited function...
google.maps.Marker.prototype.setMap.apply(this,arguments);// ... then deal with the label:
this.label.setMap(theMap);};// ==ClosureCompiler==
// @compilation_level ADVANCED_OPTIMIZATIONS
// @externs_url http://closure-compiler.googlecode.com/svn/trunk/contrib/externs/maps/google_maps_api_v3.js
// @output_wrapper (function() {%output%})();
// ==/ClosureCompiler==
/**
                         * @license
                         * Copyright 2013 Google Inc. All Rights Reserved.
                         *
                         * Licensed under the Apache License, Version 2.0 (the "License");
                         * you may not use this file except in compliance with the License.
                         * You may obtain a copy of the License at
                         *
                         *     http://www.apache.org/licenses/LICENSE-2.0
                         *
                         * Unless required by applicable law or agreed to in writing, software
                         * distributed under the License is distributed on an "AS IS" BASIS,
                         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                         * See the License for the specific language governing permissions and
                         * limitations under the License.
                         *//**
                         * A RichMarker that allows any HTML/DOM to be added to a map and be draggable.
                         *
                         * @param {Object.<string, *>=} opt_options Optional properties to set.
                         * @extends {google.maps.OverlayView}
                         * @constructor
                         */function RichMarker(opt_options){var options=opt_options||{};/**
                             * @type {boolean}
                             * @private
                             */this.ready_=false;/**
                             * @type {boolean}
                             * @private
                             */this.dragging_=false;if(opt_options['visible']==undefined){opt_options['visible']=true;}if(opt_options['shadow']==undefined){opt_options['shadow']='7px -3px 5px rgba(88,88,88,0.7)';}if(opt_options['anchor']==undefined){opt_options['anchor']=RichMarkerPosition['BOTTOM'];}this.setValues(options);}RichMarker.prototype=new google.maps.OverlayView();window['RichMarker']=RichMarker;/**
                         * Returns the current visibility state of the marker.
                         *
                         * @return {boolean} The visiblity of the marker.
                         */RichMarker.prototype.getVisible=function(){return(/** @type {boolean} */this.get('visible'));};RichMarker.prototype['getVisible']=RichMarker.prototype.getVisible;/**
                         * Sets the visiblility state of the marker.
                         *
                         * @param {boolean} visible The visiblilty of the marker.
                         */RichMarker.prototype.setVisible=function(visible){this.set('visible',visible);};RichMarker.prototype['setVisible']=RichMarker.prototype.setVisible;/**
                         *  The visible changed event.
                         */RichMarker.prototype.visible_changed=function(){if(this.ready_){this.markerWrapper_.style['display']=this.getVisible()?'':'none';this.draw();}};RichMarker.prototype['visible_changed']=RichMarker.prototype.visible_changed;/**
                         * Sets the marker to be flat.
                         *
                         * @param {boolean} flat If the marker is to be flat or not.
                         */RichMarker.prototype.setFlat=function(flat){this.set('flat',!!flat);};RichMarker.prototype['setFlat']=RichMarker.prototype.setFlat;/**
                         * If the makrer is flat or not.
                         *
                         * @return {boolean} True the marker is flat.
                         */RichMarker.prototype.getFlat=function(){return(/** @type {boolean} */this.get('flat'));};RichMarker.prototype['getFlat']=RichMarker.prototype.getFlat;/**
                         * Get the width of the marker.
                         *
                         * @return {Number} The width of the marker.
                         */RichMarker.prototype.getWidth=function(){return(/** @type {Number} */this.get('width'));};RichMarker.prototype['getWidth']=RichMarker.prototype.getWidth;/**
                         * Get the height of the marker.
                         *
                         * @return {Number} The height of the marker.
                         */RichMarker.prototype.getHeight=function(){return(/** @type {Number} */this.get('height'));};RichMarker.prototype['getHeight']=RichMarker.prototype.getHeight;/**
                         * Sets the marker's box shadow.
                         *
                         * @param {string} shadow The box shadow to set.
                         */RichMarker.prototype.setShadow=function(shadow){this.set('shadow',shadow);this.flat_changed();};RichMarker.prototype['setShadow']=RichMarker.prototype.setShadow;/**
                         * Gets the marker's box shadow.
                         *
                         * @return {string} The box shadow.
                         */RichMarker.prototype.getShadow=function(){return(/** @type {string} */this.get('shadow'));};RichMarker.prototype['getShadow']=RichMarker.prototype.getShadow;/**
                         * Flat changed event.
                         */RichMarker.prototype.flat_changed=function(){if(!this.ready_){return;}this.markerWrapper_.style['boxShadow']=this.markerWrapper_.style['webkitBoxShadow']=this.markerWrapper_.style['MozBoxShadow']=this.getFlat()?'':this.getShadow();};RichMarker.prototype['flat_changed']=RichMarker.prototype.flat_changed;/**
                         * Sets the zIndex of the marker.
                         *
                         * @param {Number} index The index to set.
                         */RichMarker.prototype.setZIndex=function(index){this.set('zIndex',index);};RichMarker.prototype['setZIndex']=RichMarker.prototype.setZIndex;/**
                         * Gets the zIndex of the marker.
                         *
                         * @return {Number} The zIndex of the marker.
                         */RichMarker.prototype.getZIndex=function(){return(/** @type {Number} */this.get('zIndex'));};RichMarker.prototype['getZIndex']=RichMarker.prototype.getZIndex;/**
                         * zIndex changed event.
                         */RichMarker.prototype.zIndex_changed=function(){if(this.getZIndex()&&this.ready_){this.markerWrapper_.style.zIndex=this.getZIndex();}};RichMarker.prototype['zIndex_changed']=RichMarker.prototype.zIndex_changed;/**
                         * Whether the marker is draggable or not.
                         *
                         * @return {boolean} True if the marker is draggable.
                         */RichMarker.prototype.getDraggable=function(){return(/** @type {boolean} */this.get('draggable'));};RichMarker.prototype['getDraggable']=RichMarker.prototype.getDraggable;/**
                         * Sets the marker to be draggable or not.
                         *
                         * @param {boolean} draggable If the marker is draggable or not.
                         */RichMarker.prototype.setDraggable=function(draggable){this.set('draggable',!!draggable);};RichMarker.prototype['setDraggable']=RichMarker.prototype.setDraggable;/**
                         * Draggable property changed callback.
                         */RichMarker.prototype.draggable_changed=function(){if(this.ready_){if(this.getDraggable()){this.addDragging_(this.markerWrapper_);}else{this.removeDragListeners_();}}};RichMarker.prototype['draggable_changed']=RichMarker.prototype.draggable_changed;/**
                         * Gets the postiton of the marker.
                         *
                         * @return {google.maps.LatLng} The position of the marker.
                         */RichMarker.prototype.getPosition=function(){return(/** @type {google.maps.LatLng} */this.get('position'));};RichMarker.prototype['getPosition']=RichMarker.prototype.getPosition;/**
                         * Sets the position of the marker.
                         *
                         * @param {google.maps.LatLng} position The position to set.
                         */RichMarker.prototype.setPosition=function(position){this.set('position',position);};RichMarker.prototype['setPosition']=RichMarker.prototype.setPosition;/**
                         * Position changed event.
                         */RichMarker.prototype.position_changed=function(){this.draw();};RichMarker.prototype['position_changed']=RichMarker.prototype.position_changed;/**
                         * Gets the anchor.
                         *
                         * @return {google.maps.Size} The position of the anchor.
                         */RichMarker.prototype.getAnchor=function(){return(/** @type {google.maps.Size} */this.get('anchor'));};RichMarker.prototype['getAnchor']=RichMarker.prototype.getAnchor;/**
                         * Sets the anchor.
                         *
                         * @param {RichMarkerPosition|google.maps.Size} anchor The anchor to set.
                         */RichMarker.prototype.setAnchor=function(anchor){this.set('anchor',anchor);};RichMarker.prototype['setAnchor']=RichMarker.prototype.setAnchor;/**
                         * Anchor changed event.
                         */RichMarker.prototype.anchor_changed=function(){this.draw();};RichMarker.prototype['anchor_changed']=RichMarker.prototype.anchor_changed;/**
                         * Converts a HTML string to a document fragment.
                         *
                         * @param {string} htmlString The HTML string to convert.
                         * @return {Node} A HTML document fragment.
                         * @private
                         */RichMarker.prototype.htmlToDocumentFragment_=function(htmlString){var tempDiv=document.createElement('DIV');tempDiv.innerHTML=htmlString;if(tempDiv.childNodes.length==1){return(/** @type {!Node} */tempDiv.removeChild(tempDiv.firstChild));}else{var fragment=document.createDocumentFragment();while(tempDiv.firstChild){fragment.appendChild(tempDiv.firstChild);}return fragment;}};/**
                         * Removes all children from the node.
                         *
                         * @param {Node} node The node to remove all children from.
                         * @private
                         */RichMarker.prototype.removeChildren_=function(node){if(!node){return;}var child;while(child=node.firstChild){node.removeChild(child);}};/**
                         * Sets the content of the marker.
                         *
                         * @param {string|Node} content The content to set.
                         */RichMarker.prototype.setContent=function(content){this.set('content',content);};RichMarker.prototype['setContent']=RichMarker.prototype.setContent;/**
                         * Get the content of the marker.
                         *
                         * @return {string|Node} The marker content.
                         */RichMarker.prototype.getContent=function(){return(/** @type {Node|string} */this.get('content'));};RichMarker.prototype['getContent']=RichMarker.prototype.getContent;/**
                         * Sets the marker content and adds loading events to images
                         */RichMarker.prototype.content_changed=function(){if(!this.markerContent_){// Marker content area doesnt exist.
return;}this.removeChildren_(this.markerContent_);var content=this.getContent();if(content){if(typeof content=='string'){content=content.replace(/^\s*([\S\s]*)\b\s*$/,'$1');content=this.htmlToDocumentFragment_(content);}this.markerContent_.appendChild(content);var that=this;var images=this.markerContent_.getElementsByTagName('IMG');for(var i=0,image;image=images[i];i++){// By default, a browser lets a image be dragged outside of the browser,
// so by calling preventDefault we stop this behaviour and allow the image
// to be dragged around the map and now out of the browser and onto the
// desktop.
google.maps.event.addDomListener(image,'mousedown',function(e){if(that.getDraggable()){if(e.preventDefault){e.preventDefault();}e.returnValue=false;}});// Because we don't know the size of an image till it loads, add a
// listener to the image load so the marker can resize and reposition
// itself to be the correct height.
google.maps.event.addDomListener(image,'load',function(){that.draw();});}google.maps.event.trigger(this,'domready');}if(this.ready_){this.draw();}};RichMarker.prototype['content_changed']=RichMarker.prototype.content_changed;/**
                         * Sets the cursor.
                         *
                         * @param {string} whichCursor What cursor to show.
                         * @private
                         */RichMarker.prototype.setCursor_=function(whichCursor){if(!this.ready_){return;}var cursor='';if(navigator.userAgent.indexOf('Gecko/')!==-1){// Moz has some nice cursors :)
if(whichCursor=='dragging'){cursor='-moz-grabbing';}if(whichCursor=='dragready'){cursor='-moz-grab';}if(whichCursor=='draggable'){cursor='pointer';}}else{if(whichCursor=='dragging'||whichCursor=='dragready'){cursor='move';}if(whichCursor=='draggable'){cursor='pointer';}}if(this.markerWrapper_.style.cursor!=cursor){this.markerWrapper_.style.cursor=cursor;}};/**
                         * Start dragging.
                         *
                         * @param {Event} e The event.
                         */RichMarker.prototype.startDrag=function(e){if(!this.getDraggable()){return;}if(!this.dragging_){this.dragging_=true;var map=this.getMap();this.mapDraggable_=map.get('draggable');map.set('draggable',false);// Store the current mouse position
this.mouseX_=e.clientX;this.mouseY_=e.clientY;this.setCursor_('dragready');// Stop the text from being selectable while being dragged
this.markerWrapper_.style['MozUserSelect']='none';this.markerWrapper_.style['KhtmlUserSelect']='none';this.markerWrapper_.style['WebkitUserSelect']='none';this.markerWrapper_['unselectable']='on';this.markerWrapper_['onselectstart']=function(){return false;};this.addDraggingListeners_();google.maps.event.trigger(this,'dragstart');}};/**
                         * Stop dragging.
                         */RichMarker.prototype.stopDrag=function(){if(!this.getDraggable()){return;}if(this.dragging_){this.dragging_=false;this.getMap().set('draggable',this.mapDraggable_);this.mouseX_=this.mouseY_=this.mapDraggable_=null;// Allow the text to be selectable again
this.markerWrapper_.style['MozUserSelect']='';this.markerWrapper_.style['KhtmlUserSelect']='';this.markerWrapper_.style['WebkitUserSelect']='';this.markerWrapper_['unselectable']='off';this.markerWrapper_['onselectstart']=function(){};this.removeDraggingListeners_();this.setCursor_('draggable');google.maps.event.trigger(this,'dragend');this.draw();}};/**
                         * Handles the drag event.
                         *
                         * @param {Event} e The event.
                         */RichMarker.prototype.drag=function(e){if(!this.getDraggable()||!this.dragging_){// This object isn't draggable or we have stopped dragging
this.stopDrag();return;}var dx=this.mouseX_-e.clientX;var dy=this.mouseY_-e.clientY;this.mouseX_=e.clientX;this.mouseY_=e.clientY;var left=parseInt(this.markerWrapper_.style['left'],10)-dx;var top=parseInt(this.markerWrapper_.style['top'],10)-dy;this.markerWrapper_.style['left']=left+'px';this.markerWrapper_.style['top']=top+'px';var offset=this.getOffset_();// Set the position property and adjust for the anchor offset
var point=new google.maps.Point(left-offset.width,top-offset.height);var projection=this.getProjection();this.setPosition(projection.fromDivPixelToLatLng(point));this.setCursor_('dragging');google.maps.event.trigger(this,'drag');};/**
                         * Removes the drag listeners associated with the marker.
                         *
                         * @private
                         */RichMarker.prototype.removeDragListeners_=function(){if(this.draggableListener_){google.maps.event.removeListener(this.draggableListener_);delete this.draggableListener_;}this.setCursor_('');};/**
                         * Add dragability events to the marker.
                         *
                         * @param {Node} node The node to apply dragging to.
                         * @private
                         */RichMarker.prototype.addDragging_=function(node){if(!node){return;}var that=this;this.draggableListener_=google.maps.event.addDomListener(node,'mousedown',function(e){that.startDrag(e);});this.setCursor_('draggable');};/**
                         * Add dragging listeners.
                         *
                         * @private
                         */RichMarker.prototype.addDraggingListeners_=function(){var that=this;if(this.markerWrapper_.setCapture){this.markerWrapper_.setCapture(true);this.draggingListeners_=[google.maps.event.addDomListener(this.markerWrapper_,'mousemove',function(e){that.drag(e);},true),google.maps.event.addDomListener(this.markerWrapper_,'mouseup',function(){that.stopDrag();that.markerWrapper_.releaseCapture();},true)];}else{this.draggingListeners_=[google.maps.event.addDomListener(window,'mousemove',function(e){that.drag(e);},true),google.maps.event.addDomListener(window,'mouseup',function(){that.stopDrag();},true)];}};/**
                         * Remove dragging listeners.
                         *
                         * @private
                         */RichMarker.prototype.removeDraggingListeners_=function(){if(this.draggingListeners_){for(var i=0,listener;listener=this.draggingListeners_[i];i++){google.maps.event.removeListener(listener);}this.draggingListeners_.length=0;}};/**
                         * Get the anchor offset.
                         *
                         * @return {google.maps.Size} The size offset.
                         * @private
                         */RichMarker.prototype.getOffset_=function(){var anchor=this.getAnchor();if((typeof anchor==='undefined'?'undefined':_typeof(anchor))=='object'){return(/** @type {google.maps.Size} */anchor);}var offset=new google.maps.Size(0,0);if(!this.markerContent_){return offset;}var width=this.markerContent_.offsetWidth;var height=this.markerContent_.offsetHeight;switch(anchor){case RichMarkerPosition['TOP_LEFT']:break;case RichMarkerPosition['TOP']:offset.width=-width/2;break;case RichMarkerPosition['TOP_RIGHT']:offset.width=-width;break;case RichMarkerPosition['LEFT']:offset.height=-height/2;break;case RichMarkerPosition['MIDDLE']:offset.width=-width/2;offset.height=-height/2;break;case RichMarkerPosition['RIGHT']:offset.width=-width;offset.height=-height/2;break;case RichMarkerPosition['BOTTOM_LEFT']:offset.height=-height;break;case RichMarkerPosition['BOTTOM']:offset.width=-width/2;offset.height=-height;break;case RichMarkerPosition['BOTTOM_RIGHT']:offset.width=-width;offset.height=-height;break;}return offset;};/**
                         * Adding the marker to a map.
                         * Implementing the interface.
                         */RichMarker.prototype.onAdd=function(){if(!this.markerWrapper_){this.markerWrapper_=document.createElement('DIV');this.markerWrapper_.style['position']='absolute';}if(this.getZIndex()){this.markerWrapper_.style['zIndex']=this.getZIndex();}this.markerWrapper_.style['display']=this.getVisible()?'':'none';if(!this.markerContent_){this.markerContent_=document.createElement('DIV');this.markerWrapper_.appendChild(this.markerContent_);var that=this;google.maps.event.addDomListener(this.markerContent_,'click',function(e){google.maps.event.trigger(that,'click');});google.maps.event.addDomListener(this.markerContent_,'mouseover',function(e){google.maps.event.trigger(that,'mouseover');});google.maps.event.addDomListener(this.markerContent_,'mouseout',function(e){google.maps.event.trigger(that,'mouseout');});}this.ready_=true;this.content_changed();this.flat_changed();this.draggable_changed();var panes=this.getPanes();if(panes){panes.overlayMouseTarget.appendChild(this.markerWrapper_);}google.maps.event.trigger(this,'ready');};RichMarker.prototype['onAdd']=RichMarker.prototype.onAdd;/**
                         * Impelementing the interface.
                         */RichMarker.prototype.draw=function(){if(!this.ready_||this.dragging_){return;}var projection=this.getProjection();if(!projection){// The map projection is not ready yet so do nothing
return;}var latLng=/** @type {google.maps.LatLng} */this.get('position');var pos=projection.fromLatLngToDivPixel(latLng);var offset=this.getOffset_();this.markerWrapper_.style['top']=pos.y+offset.height+'px';this.markerWrapper_.style['left']=pos.x+offset.width+'px';var height=this.markerContent_.offsetHeight;var width=this.markerContent_.offsetWidth;if(width!=this.get('width')){this.set('width',width);}if(height!=this.get('height')){this.set('height',height);}};RichMarker.prototype['draw']=RichMarker.prototype.draw;/**
                         * Removing a marker from the map.
                         * Implementing the interface.
                         */RichMarker.prototype.onRemove=function(){if(this.markerWrapper_&&this.markerWrapper_.parentNode){this.markerWrapper_.parentNode.removeChild(this.markerWrapper_);}this.removeDragListeners_();};RichMarker.prototype['onRemove']=RichMarker.prototype.onRemove;/**
                         * RichMarker Anchor positions
                         * @enum {number}
                         */var RichMarkerPosition={'TOP_LEFT':1,'TOP':2,'TOP_RIGHT':3,'LEFT':4,'MIDDLE':5,'RIGHT':6,'BOTTOM_LEFT':7,'BOTTOM':8,'BOTTOM_RIGHT':9};window['RichMarkerPosition']=RichMarkerPosition;//TODO: export / passthese on in the service instead of window
window.InfoBox=InfoBox;window.Cluster=Cluster;window.ClusterIcon=ClusterIcon;window.MarkerClusterer=MarkerClusterer;window.MarkerLabel_=MarkerLabel_;window.MarkerWithLabel=MarkerWithLabel;window.RichMarker=RichMarker;}();//END REPLACE
})};});;/******/(function(modules){// webpackBootstrap
/******/// The module cache
/******/var installedModules={};/******/// The require function
/******/function __webpack_require__(moduleId){/******/// Check if module is in cache
/******/if(installedModules[moduleId])/******/return installedModules[moduleId].exports;/******/// Create a new module (and put it into the cache)
/******/var module=installedModules[moduleId]={/******/exports:{},/******/id:moduleId,/******/loaded:false/******/};/******/// Execute the module function
/******/modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);/******/// Flag the module as loaded
/******/module.loaded=true;/******/// Return the exports of the module
/******/return module.exports;/******/}/******/// expose the modules object (__webpack_modules__)
/******/__webpack_require__.m=modules;/******/// expose the module cache
/******/__webpack_require__.c=installedModules;/******/// __webpack_public_path__
/******/__webpack_require__.p="";/******/// Load entry module and return exports
/******/return __webpack_require__(0);/******/})(/************************************************************************//******/[/* 0 *//***/function(module,exports,__webpack_require__){/* istanbul ignore next */angular.module('uiGmapgoogle-maps.wrapped').service('uiGmapDataStructures',function(){return{Graph:__webpack_require__(1).Graph,Queue:__webpack_require__(1).Queue};});/***/},/* 1 *//***/function(module,exports,__webpack_require__){(function(){module.exports={Graph:__webpack_require__(2),Heap:__webpack_require__(3),LinkedList:__webpack_require__(4),Map:__webpack_require__(5),Queue:__webpack_require__(6),RedBlackTree:__webpack_require__(7),Trie:__webpack_require__(8)};}).call(this);/***/},/* 2 *//***/function(module,exports){/*
             Graph implemented as a modified incidence list. O(1) for every typical
             operation except `removeNode()` at O(E) where E is the number of edges.

             ## Overview example:

             ```js
             var graph = new Graph;
             graph.addNode('A'); // => a node object. For more info, log the output or check
             // the documentation for addNode
             graph.addNode('B');
             graph.addNode('C');
             graph.addEdge('A', 'C'); // => an edge object
             graph.addEdge('A', 'B');
             graph.getEdge('B', 'A'); // => undefined. Directed edge!
             graph.getEdge('A', 'B'); // => the edge object previously added
             graph.getEdge('A', 'B').weight = 2 // weight is the only built-in handy property
             // of an edge object. Feel free to attach
             // other properties
             graph.getInEdgesOf('B'); // => array of edge objects, in this case only one;
             // connecting A to B
             graph.getOutEdgesOf('A'); // => array of edge objects, one to B and one to C
             graph.getAllEdgesOf('A'); // => all the in and out edges. Edge directed toward
             // the node itself are only counted once
             forEachNode(function(nodeObject) {
             console.log(node);
             });
             forEachEdge(function(edgeObject) {
             console.log(edgeObject);
             });
             graph.removeNode('C'); // => 'C'. The edge between A and C also removed
             graph.removeEdge('A', 'B'); // => the edge object removed
             ```

             ## Properties:

             - nodeSize: total number of nodes.
             - edgeSize: total number of edges.
             */(function(){var Graph,__hasProp={}.hasOwnProperty;Graph=function(){function Graph(){this._nodes={};this.nodeSize=0;this.edgeSize=0;}Graph.prototype.addNode=function(id){/*
                         The `id` is a unique identifier for the node, and should **not** change
                         after it's added. It will be used for adding, retrieving and deleting
                         related edges too.

                         **Note** that, internally, the ids are kept in an object. JavaScript's
                         object hashes the id `'2'` and `2` to the same key, so please stick to a
                         simple id data type such as number or string.

                         _Returns:_ the node object. Feel free to attach additional custom properties
                         on it for graph algorithms' needs. **Undefined if node id already exists**,
                         as to avoid accidental overrides.
                         */if(!this._nodes[id]){this.nodeSize++;return this._nodes[id]={_outEdges:{},_inEdges:{}};}};Graph.prototype.getNode=function(id){/*
                         _Returns:_ the node object. Feel free to attach additional custom properties
                         on it for graph algorithms' needs.
                         */return this._nodes[id];};Graph.prototype.removeNode=function(id){/*
                         _Returns:_ the node object removed, or undefined if it didn't exist in the
                         first place.
                         */var inEdgeId,nodeToRemove,outEdgeId,_ref,_ref1;nodeToRemove=this._nodes[id];if(!nodeToRemove){return;}else{_ref=nodeToRemove._outEdges;for(outEdgeId in _ref){if(!__hasProp.call(_ref,outEdgeId))continue;this.removeEdge(id,outEdgeId);}_ref1=nodeToRemove._inEdges;for(inEdgeId in _ref1){if(!__hasProp.call(_ref1,inEdgeId))continue;this.removeEdge(inEdgeId,id);}this.nodeSize--;delete this._nodes[id];}return nodeToRemove;};Graph.prototype.addEdge=function(fromId,toId,weight){var edgeToAdd,fromNode,toNode;if(weight==null){weight=1;}/*
                         `fromId` and `toId` are the node id specified when it was created using
                         `addNode()`. `weight` is optional and defaults to 1. Ignoring it effectively
                         makes this an unweighted graph. Under the hood, `weight` is just a normal
                         property of the edge object.

                         _Returns:_ the edge object created. Feel free to attach additional custom
                         properties on it for graph algorithms' needs. **Or undefined** if the nodes
                         of id `fromId` or `toId` aren't found, or if an edge already exists between
                         the two nodes.
                         */if(this.getEdge(fromId,toId)){return;}fromNode=this._nodes[fromId];toNode=this._nodes[toId];if(!fromNode||!toNode){return;}edgeToAdd={weight:weight};fromNode._outEdges[toId]=edgeToAdd;toNode._inEdges[fromId]=edgeToAdd;this.edgeSize++;return edgeToAdd;};Graph.prototype.getEdge=function(fromId,toId){/*
                         _Returns:_ the edge object, or undefined if the nodes of id `fromId` or
                         `toId` aren't found.
                         */var fromNode,toNode;fromNode=this._nodes[fromId];toNode=this._nodes[toId];if(!fromNode||!toNode){}else{return fromNode._outEdges[toId];}};Graph.prototype.removeEdge=function(fromId,toId){/*
                         _Returns:_ the edge object removed, or undefined of edge wasn't found.
                         */var edgeToDelete,fromNode,toNode;fromNode=this._nodes[fromId];toNode=this._nodes[toId];edgeToDelete=this.getEdge(fromId,toId);if(!edgeToDelete){return;}delete fromNode._outEdges[toId];delete toNode._inEdges[fromId];this.edgeSize--;return edgeToDelete;};Graph.prototype.getInEdgesOf=function(nodeId){/*
                         _Returns:_ an array of edge objects that are directed toward the node, or
                         empty array if no such edge or node exists.
                         */var fromId,inEdges,toNode,_ref;toNode=this._nodes[nodeId];inEdges=[];_ref=toNode!=null?toNode._inEdges:void 0;for(fromId in _ref){if(!__hasProp.call(_ref,fromId))continue;inEdges.push(this.getEdge(fromId,nodeId));}return inEdges;};Graph.prototype.getOutEdgesOf=function(nodeId){/*
                         _Returns:_ an array of edge objects that go out of the node, or empty array
                         if no such edge or node exists.
                         */var fromNode,outEdges,toId,_ref;fromNode=this._nodes[nodeId];outEdges=[];_ref=fromNode!=null?fromNode._outEdges:void 0;for(toId in _ref){if(!__hasProp.call(_ref,toId))continue;outEdges.push(this.getEdge(nodeId,toId));}return outEdges;};Graph.prototype.getAllEdgesOf=function(nodeId){/*
                         **Note:** not the same as concatenating `getInEdgesOf()` and
                         `getOutEdgesOf()`. Some nodes might have an edge pointing toward itself.
                         This method solves that duplication.

                         _Returns:_ an array of edge objects linked to the node, no matter if they're
                         outgoing or coming. Duplicate edge created by self-pointing nodes are
                         removed. Only one copy stays. Empty array if node has no edge.
                         */var i,inEdges,outEdges,selfEdge,_i,_ref,_ref1;inEdges=this.getInEdgesOf(nodeId);outEdges=this.getOutEdgesOf(nodeId);if(inEdges.length===0){return outEdges;}selfEdge=this.getEdge(nodeId,nodeId);for(i=_i=0,_ref=inEdges.length;0<=_ref?_i<_ref:_i>_ref;i=0<=_ref?++_i:--_i){if(inEdges[i]===selfEdge){_ref1=[inEdges[inEdges.length-1],inEdges[i]],inEdges[i]=_ref1[0],inEdges[inEdges.length-1]=_ref1[1];inEdges.pop();break;}}return inEdges.concat(outEdges);};Graph.prototype.forEachNode=function(operation){/*
                         Traverse through the graph in an arbitrary manner, visiting each node once.
                         Pass a function of the form `fn(nodeObject, nodeId)`.

                         _Returns:_ undefined.
                         */var nodeId,nodeObject,_ref;_ref=this._nodes;for(nodeId in _ref){if(!__hasProp.call(_ref,nodeId))continue;nodeObject=_ref[nodeId];operation(nodeObject,nodeId);}};Graph.prototype.forEachEdge=function(operation){/*
                         Traverse through the graph in an arbitrary manner, visiting each edge once.
                         Pass a function of the form `fn(edgeObject)`.

                         _Returns:_ undefined.
                         */var edgeObject,nodeId,nodeObject,toId,_ref,_ref1;_ref=this._nodes;for(nodeId in _ref){if(!__hasProp.call(_ref,nodeId))continue;nodeObject=_ref[nodeId];_ref1=nodeObject._outEdges;for(toId in _ref1){if(!__hasProp.call(_ref1,toId))continue;edgeObject=_ref1[toId];operation(edgeObject);}}};return Graph;}();module.exports=Graph;}).call(this);/***/},/* 3 *//***/function(module,exports){/*
             Minimum heap, i.e. smallest node at root.

             **Note:** does not accept null or undefined. This is by design. Those values
             cause comparison problems and might report false negative during extraction.

             ## Overview example:

             ```js
             var heap = new Heap([5, 6, 3, 4]);
             heap.add(10); // => 10
             heap.removeMin(); // => 3
             heap.peekMin(); // => 4
             ```

             ## Properties:

             - size: total number of items.
             */(function(){var Heap,_leftChild,_parent,_rightChild;Heap=function(){function Heap(dataToHeapify){var i,item,_i,_j,_len,_ref;if(dataToHeapify==null){dataToHeapify=[];}/*
                         Pass an optional array to be heapified. Takes only O(n) time.
                         */this._data=[void 0];for(_i=0,_len=dataToHeapify.length;_i<_len;_i++){item=dataToHeapify[_i];if(item!=null){this._data.push(item);}}if(this._data.length>1){for(i=_j=2,_ref=this._data.length;2<=_ref?_j<_ref:_j>_ref;i=2<=_ref?++_j:--_j){this._upHeap(i);}}this.size=this._data.length-1;}Heap.prototype.add=function(value){/*
                         **Remember:** rejects null and undefined for mentioned reasons.

                         _Returns:_ the value added.
                         */if(value==null){return;}this._data.push(value);this._upHeap(this._data.length-1);this.size++;return value;};Heap.prototype.removeMin=function(){/*
                         _Returns:_ the smallest item (the root).
                         */var min;if(this._data.length===1){return;}this.size--;if(this._data.length===2){return this._data.pop();}min=this._data[1];this._data[1]=this._data.pop();this._downHeap();return min;};Heap.prototype.peekMin=function(){/*
                         Check the smallest item without removing it.

                         _Returns:_ the smallest item (the root).
                         */return this._data[1];};Heap.prototype._upHeap=function(index){var valueHolder,_ref;valueHolder=this._data[index];while(this._data[index]<this._data[_parent(index)]&&index>1){_ref=[this._data[_parent(index)],this._data[index]],this._data[index]=_ref[0],this._data[_parent(index)]=_ref[1];index=_parent(index);}};Heap.prototype._downHeap=function(){var currentIndex,smallerChildIndex,_ref;currentIndex=1;while(_leftChild(currentIndex<this._data.length)){smallerChildIndex=_leftChild(currentIndex);if(smallerChildIndex<this._data.length-1){if(this._data[_rightChild(currentIndex)]<this._data[smallerChildIndex]){smallerChildIndex=_rightChild(currentIndex);}}if(this._data[smallerChildIndex]<this._data[currentIndex]){_ref=[this._data[currentIndex],this._data[smallerChildIndex]],this._data[smallerChildIndex]=_ref[0],this._data[currentIndex]=_ref[1];currentIndex=smallerChildIndex;}else{break;}}};return Heap;}();_parent=function _parent(index){return index>>1;};_leftChild=function _leftChild(index){return index<<1;};_rightChild=function _rightChild(index){return(index<<1)+1;};module.exports=Heap;}).call(this);/***/},/* 4 *//***/function(module,exports){/*
             Doubly Linked.

             ## Overview example:

             ```js
             var list = new LinkedList([5, 4, 9]);
             list.add(12); // => 12
             list.head.next.value; // => 4
             list.tail.value; // => 12
             list.at(-1); // => 12
             list.removeAt(2); // => 9
             list.remove(4); // => 4
             list.indexOf(5); // => 0
             list.add(5, 1); // => 5. Second 5 at position 1.
             list.indexOf(5, 1); // => 1
             ```

             ## Properties:

             - head: first item.
             - tail: last item.
             - size: total number of items.
             - item.value: value passed to the item when calling `add()`.
             - item.prev: previous item.
             - item.next: next item.
             */(function(){var LinkedList;LinkedList=function(){function LinkedList(valuesToAdd){var value,_i,_len;if(valuesToAdd==null){valuesToAdd=[];}/*
                         Can pass an array of elements to link together during `new LinkedList()`
                         initiation.
                         */this.head={prev:void 0,value:void 0,next:void 0};this.tail={prev:void 0,value:void 0,next:void 0};this.size=0;for(_i=0,_len=valuesToAdd.length;_i<_len;_i++){value=valuesToAdd[_i];this.add(value);}}LinkedList.prototype.at=function(position){/*
                         Get the item at `position` (optional). Accepts negative index:

                         ```js
                         myList.at(-1); // Returns the last element.
                         ```
                         However, passing a negative index that surpasses the boundary will return
                         undefined:

                         ```js
                         myList = new LinkedList([2, 6, 8, 3])
                         myList.at(-5); // Undefined.
                         myList.at(-4); // 2.
                         ```
                         _Returns:_ item gotten, or undefined if not found.
                         */var currentNode,i,_i,_j,_ref;if(!(-this.size<=position&&position<this.size)){return;}position=this._adjust(position);if(position*2<this.size){currentNode=this.head;for(i=_i=1;_i<=position;i=_i+=1){currentNode=currentNode.next;}}else{currentNode=this.tail;for(i=_j=1,_ref=this.size-position-1;_j<=_ref;i=_j+=1){currentNode=currentNode.prev;}}return currentNode;};LinkedList.prototype.add=function(value,position){var currentNode,nodeToAdd,_ref,_ref1,_ref2;if(position==null){position=this.size;}/*
                         Add a new item at `position` (optional). Defaults to adding at the end.
                         `position`, just like in `at()`, can be negative (within the negative
                         boundary). Position specifies the place the value's going to be, and the old
                         node will be pushed higher. `add(-2)` on list of size 7 is the same as
                         `add(5)`.

                         _Returns:_ item added.
                         */if(!(-this.size<=position&&position<=this.size)){return;}nodeToAdd={value:value};position=this._adjust(position);if(this.size===0){this.head=nodeToAdd;}else{if(position===0){_ref=[nodeToAdd,this.head,nodeToAdd],this.head.prev=_ref[0],nodeToAdd.next=_ref[1],this.head=_ref[2];}else{currentNode=this.at(position-1);_ref1=[currentNode.next,nodeToAdd,nodeToAdd,currentNode],nodeToAdd.next=_ref1[0],(_ref2=currentNode.next)!=null?_ref2.prev=_ref1[1]:void 0,currentNode.next=_ref1[2],nodeToAdd.prev=_ref1[3];}}if(position===this.size){this.tail=nodeToAdd;}this.size++;return value;};LinkedList.prototype.removeAt=function(position){var currentNode,valueToReturn,_ref;if(position==null){position=this.size-1;}/*
                         Remove an item at index `position` (optional). Defaults to the last item.
                         Index can be negative (within the boundary).

                         _Returns:_ item removed.
                         */if(!(-this.size<=position&&position<this.size)){return;}if(this.size===0){return;}position=this._adjust(position);if(this.size===1){valueToReturn=this.head.value;this.head.value=this.tail.value=void 0;}else{if(position===0){valueToReturn=this.head.value;this.head=this.head.next;this.head.prev=void 0;}else{currentNode=this.at(position);valueToReturn=currentNode.value;currentNode.prev.next=currentNode.next;if((_ref=currentNode.next)!=null){_ref.prev=currentNode.prev;}if(position===this.size-1){this.tail=currentNode.prev;}}}this.size--;return valueToReturn;};LinkedList.prototype.remove=function(value){/*
                         Remove the item using its value instead of position. **Will remove the fist
                         occurrence of `value`.**

                         _Returns:_ the value, or undefined if value's not found.
                         */var currentNode;if(value==null){return;}currentNode=this.head;while(currentNode&&currentNode.value!==value){currentNode=currentNode.next;}if(!currentNode){return;}if(this.size===1){this.head.value=this.tail.value=void 0;}else if(currentNode===this.head){this.head=this.head.next;this.head.prev=void 0;}else if(currentNode===this.tail){this.tail=this.tail.prev;this.tail.next=void 0;}else{currentNode.prev.next=currentNode.next;currentNode.next.prev=currentNode.prev;}this.size--;return value;};LinkedList.prototype.indexOf=function(value,startingPosition){var currentNode,position;if(startingPosition==null){startingPosition=0;}/*
                         Find the index of an item, similarly to `array.indexOf()`. Defaults to start
                         searching from the beginning, by can start at another position by passing
                         `startingPosition`. This parameter can also be negative; but unlike the
                         other methods of this class, `startingPosition` (optional) can be as small
                         as desired; a value of -999 for a list of size 5 will start searching
                         normally, at the beginning.

                         **Note:** searches forwardly, **not** backwardly, i.e:

                         ```js
                         var myList = new LinkedList([2, 3, 1, 4, 3, 5])
                         myList.indexOf(3, -3); // Returns 4, not 1
                         ```
                         _Returns:_ index of item found, or -1 if not found.
                         */if(this.head.value==null&&!this.head.next||startingPosition>=this.size){return-1;}startingPosition=Math.max(0,this._adjust(startingPosition));currentNode=this.at(startingPosition);position=startingPosition;while(currentNode){if(currentNode.value===value){break;}currentNode=currentNode.next;position++;}if(position===this.size){return-1;}else{return position;}};LinkedList.prototype._adjust=function(position){if(position<0){return this.size+position;}else{return position;}};return LinkedList;}();module.exports=LinkedList;}).call(this);/***/},/* 5 *//***/function(module,exports){/*
             Kind of a stopgap measure for the upcoming [JavaScript
             Map](http://wiki.ecmascript.org/doku.php?id=harmony:simple_maps_and_sets)

             **Note:** due to JavaScript's limitations, hashing something other than Boolean,
             Number, String, Undefined, Null, RegExp, Function requires a hack that inserts a
             hidden unique property into the object. This means `set`, `get`, `has` and
             `delete` must employ the same object, and not a mere identical copy as in the
             case of, say, a string.

             ## Overview example:

             ```js
             var map = new Map({'alice': 'wonderland', 20: 'ok'});
             map.set('20', 5); // => 5
             map.get('20'); // => 5
             map.has('alice'); // => true
             map.delete(20) // => true
             var arr = [1, 2];
             map.add(arr, 'goody'); // => 'goody'
             map.has(arr); // => true
             map.has([1, 2]); // => false. Needs to compare by reference
             map.forEach(function(key, value) {
             console.log(key, value);
             });
             ```

             ## Properties:

             - size: The total number of `(key, value)` pairs.
             */(function(){var Map,SPECIAL_TYPE_KEY_PREFIX,_extractDataType,_isSpecialType,__hasProp={}.hasOwnProperty;SPECIAL_TYPE_KEY_PREFIX='_mapId_';Map=function(){Map._mapIdTracker=0;Map._newMapId=function(){return this._mapIdTracker++;};function Map(objectToMap){/*
                         Pass an optional object whose (key, value) pair will be hashed. **Careful**
                         not to pass something like {5: 'hi', '5': 'hello'}, since JavaScript's
                         native object behavior will crush the first 5 property before it gets to
                         constructor.
                         */var key,value;this._content={};this._itemId=0;this._id=Map._newMapId();this.size=0;for(key in objectToMap){if(!__hasProp.call(objectToMap,key))continue;value=objectToMap[key];this.set(key,value);}}Map.prototype.hash=function(key,makeHash){var propertyForMap,type;if(makeHash==null){makeHash=false;}/*
                         The hash function for hashing keys is public. Feel free to replace it with
                         your own. The `makeHash` parameter is optional and accepts a boolean
                         (defaults to `false`) indicating whether or not to produce a new hash (for
                         the first use, naturally).

                         _Returns:_ the hash.
                         */type=_extractDataType(key);if(_isSpecialType(key)){propertyForMap=SPECIAL_TYPE_KEY_PREFIX+this._id;if(makeHash&&!key[propertyForMap]){key[propertyForMap]=this._itemId++;}return propertyForMap+'_'+key[propertyForMap];}else{return type+'_'+key;}};Map.prototype.set=function(key,value){/*
                         _Returns:_ value.
                         */if(!this.has(key)){this.size++;}this._content[this.hash(key,true)]=[value,key];return value;};Map.prototype.get=function(key){/*
                         _Returns:_ value corresponding to the key, or undefined if not found.
                         */var _ref;return(_ref=this._content[this.hash(key)])!=null?_ref[0]:void 0;};Map.prototype.has=function(key){/*
                         Check whether a value exists for the key.

                         _Returns:_ true or false.
                         */return this.hash(key)in this._content;};Map.prototype["delete"]=function(key){/*
                         Remove the (key, value) pair.

                         _Returns:_ **true or false**. Unlike most of this library, this method
                         doesn't return the deleted value. This is so that it conforms to the future
                         JavaScript `map.delete()`'s behavior.
                         */var hashedKey;hashedKey=this.hash(key);if(hashedKey in this._content){delete this._content[hashedKey];if(_isSpecialType(key)){delete key[SPECIAL_TYPE_KEY_PREFIX+this._id];}this.size--;return true;}return false;};Map.prototype.forEach=function(operation){/*
                         Traverse through the map. Pass a function of the form `fn(key, value)`.

                         _Returns:_ undefined.
                         */var key,value,_ref;_ref=this._content;for(key in _ref){if(!__hasProp.call(_ref,key))continue;value=_ref[key];operation(value[1],value[0]);}};return Map;}();_isSpecialType=function _isSpecialType(key){var simpleHashableTypes,simpleType,type,_i,_len;simpleHashableTypes=['Boolean','Number','String','Undefined','Null','RegExp','Function'];type=_extractDataType(key);for(_i=0,_len=simpleHashableTypes.length;_i<_len;_i++){simpleType=simpleHashableTypes[_i];if(type===simpleType){return false;}}return true;};_extractDataType=function _extractDataType(type){return Object.prototype.toString.apply(type).match(/\[object (.+)\]/)[1];};module.exports=Map;}).call(this);/***/},/* 6 *//***/function(module,exports){/*
             Amortized O(1) dequeue!

             ## Overview example:

             ```js
             var queue = new Queue([1, 6, 4]);
             queue.enqueue(10); // => 10
             queue.dequeue(); // => 1
             queue.dequeue(); // => 6
             queue.dequeue(); // => 4
             queue.peek(); // => 10
             queue.dequeue(); // => 10
             queue.peek(); // => undefined
             ```

             ## Properties:

             - size: The total number of items.
             */(function(){var Queue;Queue=function(){function Queue(initialArray){if(initialArray==null){initialArray=[];}/*
                         Pass an optional array to be transformed into a queue. The item at index 0
                         is the first to be dequeued.
                         */this._content=initialArray;this._dequeueIndex=0;this.size=this._content.length;}Queue.prototype.enqueue=function(item){/*
                         _Returns:_ the item.
                         */this.size++;this._content.push(item);return item;};Queue.prototype.dequeue=function(){/*
                         _Returns:_ the dequeued item.
                         */var itemToDequeue;if(this.size===0){return;}this.size--;itemToDequeue=this._content[this._dequeueIndex];this._dequeueIndex++;if(this._dequeueIndex*2>this._content.length){this._content=this._content.slice(this._dequeueIndex);this._dequeueIndex=0;}return itemToDequeue;};Queue.prototype.peek=function(){/*
                         Check the next item to be dequeued, without removing it.

                         _Returns:_ the item.
                         */return this._content[this._dequeueIndex];};return Queue;}();module.exports=Queue;}).call(this);/***/},/* 7 *//***/function(module,exports){/*
             Credit to Wikipedia's article on [Red-black
             tree](http://en.wikipedia.org/wiki/Red–black_tree)

             **Note:** doesn't handle duplicate entries, undefined and null. This is by
             design.

             ## Overview example:

             ```js
             var rbt = new RedBlackTree([7, 5, 1, 8]);
             rbt.add(2); // => 2
             rbt.add(10); // => 10
             rbt.has(5); // => true
             rbt.peekMin(); // => 1
             rbt.peekMax(); // => 10
             rbt.removeMin(); // => 1
             rbt.removeMax(); // => 10
             rbt.remove(8); // => 8
             ```

             ## Properties:

             - size: The total number of items.
             */(function(){var BLACK,NODE_FOUND,NODE_TOO_BIG,NODE_TOO_SMALL,RED,RedBlackTree,STOP_SEARCHING,_findNode,_grandParentOf,_isLeft,_leftOrRight,_peekMaxNode,_peekMinNode,_siblingOf,_uncleOf;NODE_FOUND=0;NODE_TOO_BIG=1;NODE_TOO_SMALL=2;STOP_SEARCHING=3;RED=1;BLACK=2;RedBlackTree=function(){function RedBlackTree(valuesToAdd){var value,_i,_len;if(valuesToAdd==null){valuesToAdd=[];}/*
                         Pass an optional array to be turned into binary tree. **Note:** does not
                         accept duplicate, undefined and null.
                         */this._root;this.size=0;for(_i=0,_len=valuesToAdd.length;_i<_len;_i++){value=valuesToAdd[_i];if(value!=null){this.add(value);}}}RedBlackTree.prototype.add=function(value){/*
                         Again, make sure to not pass a value already in the tree, or undefined, or
                         null.

                         _Returns:_ value added.
                         */var currentNode,foundNode,nodeToInsert,_ref;if(value==null){return;}this.size++;nodeToInsert={value:value,_color:RED};if(!this._root){this._root=nodeToInsert;}else{foundNode=_findNode(this._root,function(node){if(value===node.value){return NODE_FOUND;}else{if(value<node.value){if(node._left){return NODE_TOO_BIG;}else{nodeToInsert._parent=node;node._left=nodeToInsert;return STOP_SEARCHING;}}else{if(node._right){return NODE_TOO_SMALL;}else{nodeToInsert._parent=node;node._right=nodeToInsert;return STOP_SEARCHING;}}}});if(foundNode!=null){return;}}currentNode=nodeToInsert;while(true){if(currentNode===this._root){currentNode._color=BLACK;break;}if(currentNode._parent._color===BLACK){break;}if(((_ref=_uncleOf(currentNode))!=null?_ref._color:void 0)===RED){currentNode._parent._color=BLACK;_uncleOf(currentNode)._color=BLACK;_grandParentOf(currentNode)._color=RED;currentNode=_grandParentOf(currentNode);continue;}if(!_isLeft(currentNode)&&_isLeft(currentNode._parent)){this._rotateLeft(currentNode._parent);currentNode=currentNode._left;}else if(_isLeft(currentNode)&&!_isLeft(currentNode._parent)){this._rotateRight(currentNode._parent);currentNode=currentNode._right;}currentNode._parent._color=BLACK;_grandParentOf(currentNode)._color=RED;if(_isLeft(currentNode)){this._rotateRight(_grandParentOf(currentNode));}else{this._rotateLeft(_grandParentOf(currentNode));}break;}return value;};RedBlackTree.prototype.has=function(value){/*
                         _Returns:_ true or false.
                         */var foundNode;foundNode=_findNode(this._root,function(node){if(value===node.value){return NODE_FOUND;}else if(value<node.value){return NODE_TOO_BIG;}else{return NODE_TOO_SMALL;}});if(foundNode){return true;}else{return false;}};RedBlackTree.prototype.peekMin=function(){/*
                         Check the minimum value without removing it.

                         _Returns:_ the minimum value.
                         */var _ref;return(_ref=_peekMinNode(this._root))!=null?_ref.value:void 0;};RedBlackTree.prototype.peekMax=function(){/*
                         Check the maximum value without removing it.

                         _Returns:_ the maximum value.
                         */var _ref;return(_ref=_peekMaxNode(this._root))!=null?_ref.value:void 0;};RedBlackTree.prototype.remove=function(value){/*
                         _Returns:_ the value removed, or undefined if the value's not found.
                         */var foundNode;foundNode=_findNode(this._root,function(node){if(value===node.value){return NODE_FOUND;}else if(value<node.value){return NODE_TOO_BIG;}else{return NODE_TOO_SMALL;}});if(!foundNode){return;}this._removeNode(this._root,foundNode);this.size--;return value;};RedBlackTree.prototype.removeMin=function(){/*
                         _Returns:_ smallest item removed, or undefined if tree's empty.
                         */var nodeToRemove,valueToReturn;nodeToRemove=_peekMinNode(this._root);if(!nodeToRemove){return;}valueToReturn=nodeToRemove.value;this._removeNode(this._root,nodeToRemove);return valueToReturn;};RedBlackTree.prototype.removeMax=function(){/*
                         _Returns:_ biggest item removed, or undefined if tree's empty.
                         */var nodeToRemove,valueToReturn;nodeToRemove=_peekMaxNode(this._root);if(!nodeToRemove){return;}valueToReturn=nodeToRemove.value;this._removeNode(this._root,nodeToRemove);return valueToReturn;};RedBlackTree.prototype._removeNode=function(root,node){var sibling,successor,_ref,_ref1,_ref2,_ref3,_ref4,_ref5,_ref6,_ref7;if(node._left&&node._right){successor=_peekMinNode(node._right);node.value=successor.value;node=successor;}successor=node._left||node._right;if(!successor){successor={color:BLACK,_right:void 0,_left:void 0,isLeaf:true};}successor._parent=node._parent;if((_ref=node._parent)!=null){_ref[_leftOrRight(node)]=successor;}if(node._color===BLACK){if(successor._color===RED){successor._color=BLACK;if(!successor._parent){this._root=successor;}}else{while(true){if(!successor._parent){if(!successor.isLeaf){this._root=successor;}else{this._root=void 0;}break;}sibling=_siblingOf(successor);if((sibling!=null?sibling._color:void 0)===RED){successor._parent._color=RED;sibling._color=BLACK;if(_isLeft(successor)){this._rotateLeft(successor._parent);}else{this._rotateRight(successor._parent);}}sibling=_siblingOf(successor);if(successor._parent._color===BLACK&&(!sibling||sibling._color===BLACK&&(!sibling._left||sibling._left._color===BLACK)&&(!sibling._right||sibling._right._color===BLACK))){if(sibling!=null){sibling._color=RED;}if(successor.isLeaf){successor._parent[_leftOrRight(successor)]=void 0;}successor=successor._parent;continue;}if(successor._parent._color===RED&&(!sibling||sibling._color===BLACK&&(!sibling._left||((_ref1=sibling._left)!=null?_ref1._color:void 0)===BLACK)&&(!sibling._right||((_ref2=sibling._right)!=null?_ref2._color:void 0)===BLACK))){if(sibling!=null){sibling._color=RED;}successor._parent._color=BLACK;break;}if((sibling!=null?sibling._color:void 0)===BLACK){if(_isLeft(successor)&&(!sibling._right||sibling._right._color===BLACK)&&((_ref3=sibling._left)!=null?_ref3._color:void 0)===RED){sibling._color=RED;if((_ref4=sibling._left)!=null){_ref4._color=BLACK;}this._rotateRight(sibling);}else if(!_isLeft(successor)&&(!sibling._left||sibling._left._color===BLACK)&&((_ref5=sibling._right)!=null?_ref5._color:void 0)===RED){sibling._color=RED;if((_ref6=sibling._right)!=null){_ref6._color=BLACK;}this._rotateLeft(sibling);}break;}sibling=_siblingOf(successor);sibling._color=successor._parent._color;if(_isLeft(successor)){sibling._right._color=BLACK;this._rotateRight(successor._parent);}else{sibling._left._color=BLACK;this._rotateLeft(successor._parent);}}}}if(successor.isLeaf){return(_ref7=successor._parent)!=null?_ref7[_leftOrRight(successor)]=void 0:void 0;}};RedBlackTree.prototype._rotateLeft=function(node){var _ref,_ref1;if((_ref=node._parent)!=null){_ref[_leftOrRight(node)]=node._right;}node._right._parent=node._parent;node._parent=node._right;node._right=node._right._left;node._parent._left=node;if((_ref1=node._right)!=null){_ref1._parent=node;}if(node._parent._parent==null){return this._root=node._parent;}};RedBlackTree.prototype._rotateRight=function(node){var _ref,_ref1;if((_ref=node._parent)!=null){_ref[_leftOrRight(node)]=node._left;}node._left._parent=node._parent;node._parent=node._left;node._left=node._left._right;node._parent._right=node;if((_ref1=node._left)!=null){_ref1._parent=node;}if(node._parent._parent==null){return this._root=node._parent;}};return RedBlackTree;}();_isLeft=function _isLeft(node){return node===node._parent._left;};_leftOrRight=function _leftOrRight(node){if(_isLeft(node)){return'_left';}else{return'_right';}};_findNode=function _findNode(startingNode,comparator){var comparisonResult,currentNode,foundNode;currentNode=startingNode;foundNode=void 0;while(currentNode){comparisonResult=comparator(currentNode);if(comparisonResult===NODE_FOUND){foundNode=currentNode;break;}if(comparisonResult===NODE_TOO_BIG){currentNode=currentNode._left;}else if(comparisonResult===NODE_TOO_SMALL){currentNode=currentNode._right;}else if(comparisonResult===STOP_SEARCHING){break;}}return foundNode;};_peekMinNode=function _peekMinNode(startingNode){return _findNode(startingNode,function(node){if(node._left){return NODE_TOO_BIG;}else{return NODE_FOUND;}});};_peekMaxNode=function _peekMaxNode(startingNode){return _findNode(startingNode,function(node){if(node._right){return NODE_TOO_SMALL;}else{return NODE_FOUND;}});};_grandParentOf=function _grandParentOf(node){var _ref;return(_ref=node._parent)!=null?_ref._parent:void 0;};_uncleOf=function _uncleOf(node){if(!_grandParentOf(node)){return;}if(_isLeft(node._parent)){return _grandParentOf(node)._right;}else{return _grandParentOf(node)._left;}};_siblingOf=function _siblingOf(node){if(_isLeft(node)){return node._parent._right;}else{return node._parent._left;}};module.exports=RedBlackTree;}).call(this);/***/},/* 8 *//***/function(module,exports,__webpack_require__){/*
             Good for fast insertion/removal/lookup of strings.

             ## Overview example:

             ```js
             var trie = new Trie(['bear', 'beer']);
             trie.add('hello'); // => 'hello'
             trie.add('helloha!'); // => 'helloha!'
             trie.has('bears'); // => false
             trie.longestPrefixOf('beatrice'); // => 'bea'
             trie.wordsWithPrefix('hel'); // => ['hello', 'helloha!']
             trie.remove('beers'); // => undefined. 'beer' still exists
             trie.remove('Beer') // => undefined. Case-sensitive
             trie.remove('beer') // => 'beer'. Removed
             ```

             ## Properties:

             - size: The total number of words.
             */(function(){var Queue,Trie,WORD_END,_hasAtLeastNChildren,__hasProp={}.hasOwnProperty;Queue=__webpack_require__(6);WORD_END='end';Trie=function(){function Trie(words){var word,_i,_len;if(words==null){words=[];}/*
                         Pass an optional array of strings to be inserted initially.
                         */this._root={};this.size=0;for(_i=0,_len=words.length;_i<_len;_i++){word=words[_i];this.add(word);}}Trie.prototype.add=function(word){/*
                         Add a whole string to the trie.

                         _Returns:_ the word added. Will return undefined (without adding the value)
                         if the word passed is null or undefined.
                         */var currentNode,letter,_i,_len;if(word==null){return;}this.size++;currentNode=this._root;for(_i=0,_len=word.length;_i<_len;_i++){letter=word[_i];if(currentNode[letter]==null){currentNode[letter]={};}currentNode=currentNode[letter];}currentNode[WORD_END]=true;return word;};Trie.prototype.has=function(word){/*
                         __Returns:_ true or false.
                         */var currentNode,letter,_i,_len;if(word==null){return false;}currentNode=this._root;for(_i=0,_len=word.length;_i<_len;_i++){letter=word[_i];if(currentNode[letter]==null){return false;}currentNode=currentNode[letter];}if(currentNode[WORD_END]){return true;}else{return false;}};Trie.prototype.longestPrefixOf=function(word){/*
                         Find all words containing the prefix. The word itself counts as a prefix.

                         ```js
                         var trie = new Trie;
                         trie.add('hello');
                         trie.longestPrefixOf('he'); // 'he'
                         trie.longestPrefixOf('hello'); // 'hello'
                         trie.longestPrefixOf('helloha!'); // 'hello'
                         ```

                         _Returns:_ the prefix string, or empty string if no prefix found.
                         */var currentNode,letter,prefix,_i,_len;if(word==null){return'';}currentNode=this._root;prefix='';for(_i=0,_len=word.length;_i<_len;_i++){letter=word[_i];if(currentNode[letter]==null){break;}prefix+=letter;currentNode=currentNode[letter];}return prefix;};Trie.prototype.wordsWithPrefix=function(prefix){/*
                         Find all words containing the prefix. The word itself counts as a prefix.
                         **Watch out for edge cases.**

                         ```js
                         var trie = new Trie;
                         trie.wordsWithPrefix(''); // []. Check later case below.
                         trie.add('');
                         trie.wordsWithPrefix(''); // ['']
                         trie.add('he');
                         trie.add('hello');
                         trie.add('hell');
                         trie.add('bear');
                         trie.add('z');
                         trie.add('zebra');
                         trie.wordsWithPrefix('hel'); // ['hell', 'hello']
                         ```

                         _Returns:_ an array of strings, or empty array if no word found.
                         */var accumulatedLetters,currentNode,letter,node,queue,subNode,words,_i,_len,_ref;if(prefix==null){return[];}prefix!=null||(prefix='');words=[];currentNode=this._root;for(_i=0,_len=prefix.length;_i<_len;_i++){letter=prefix[_i];currentNode=currentNode[letter];if(currentNode==null){return[];}}queue=new Queue();queue.enqueue([currentNode,'']);while(queue.size!==0){_ref=queue.dequeue(),node=_ref[0],accumulatedLetters=_ref[1];if(node[WORD_END]){words.push(prefix+accumulatedLetters);}for(letter in node){if(!__hasProp.call(node,letter))continue;subNode=node[letter];queue.enqueue([subNode,accumulatedLetters+letter]);}}return words;};Trie.prototype.remove=function(word){/*
                         _Returns:_ the string removed, or undefined if the word in its whole doesn't
                         exist. **Note:** this means removing `beers` when only `beer` exists will
                         return undefined and conserve `beer`.
                         */var currentNode,i,letter,prefix,_i,_j,_len,_ref;if(word==null){return;}currentNode=this._root;prefix=[];for(_i=0,_len=word.length;_i<_len;_i++){letter=word[_i];if(currentNode[letter]==null){return;}currentNode=currentNode[letter];prefix.push([letter,currentNode]);}if(!currentNode[WORD_END]){return;}this.size--;delete currentNode[WORD_END];if(_hasAtLeastNChildren(currentNode,1)){return word;}for(i=_j=_ref=prefix.length-1;_ref<=1?_j<=1:_j>=1;i=_ref<=1?++_j:--_j){if(!_hasAtLeastNChildren(prefix[i][1],1)){delete prefix[i-1][1][prefix[i][0]];}else{break;}}if(!_hasAtLeastNChildren(this._root[prefix[0][0]],1)){delete this._root[prefix[0][0]];}return word;};return Trie;}();_hasAtLeastNChildren=function _hasAtLeastNChildren(node,n){var child,childCount;if(n===0){return true;}childCount=0;for(child in node){if(!__hasProp.call(node,child))continue;childCount++;if(childCount>=n){return true;}}return false;};module.exports=Trie;}).call(this);/***/}/******/]);;angular.module('uiGmapgoogle-maps.wrapped').service('uiGmapMarkerSpiderfier',['uiGmapGoogleMapApi',function(GoogleMapApi){var self=this;/* istanbul ignore next */+function(){/** @preserve OverlappingMarkerSpiderfier
                 https://github.com/jawj/OverlappingMarkerSpiderfier
                 Copyright (c) 2011 - 2013 George MacKerron
                 Released under the MIT licence: http://opensource.org/licenses/mit-license
                 Note: The Google Maps API v3 must be included *before* this code
                 */var hasProp={}.hasOwnProperty,slice=[].slice;this['OverlappingMarkerSpiderfier']=function(){var ge,gm,j,lcH,lcU,len,mt,p,ref,twoPi,x;p=_Class.prototype;ref=[_Class,p];for(j=0,len=ref.length;j<len;j++){x=ref[j];x['VERSION']='0.3.3';}gm=void 0;ge=void 0;mt=void 0;twoPi=Math.PI*2;p['keepSpiderfied']=false;p['markersWontHide']=false;p['markersWontMove']=false;p['nearbyDistance']=20;p['circleSpiralSwitchover']=9;p['circleFootSeparation']=23;p['circleStartAngle']=twoPi/12;p['spiralFootSeparation']=26;p['spiralLengthStart']=11;p['spiralLengthFactor']=4;p['spiderfiedZIndex']=1000;p['usualLegZIndex']=10;p['highlightedLegZIndex']=20;p['event']='click';p['minZoomLevel']=false;p['legWeight']=1.5;p['legColors']={'usual':{},'highlighted':{}};lcU=p['legColors']['usual'];lcH=p['legColors']['highlighted'];_Class['initializeGoogleMaps']=function(google){gm=google.maps;ge=gm.event;mt=gm.MapTypeId;lcU[mt.HYBRID]=lcU[mt.SATELLITE]='#fff';lcH[mt.HYBRID]=lcH[mt.SATELLITE]='#f00';lcU[mt.TERRAIN]=lcU[mt.ROADMAP]='#444';lcH[mt.TERRAIN]=lcH[mt.ROADMAP]='#f00';this.ProjHelper=function(map){return this.setMap(map);};this.ProjHelper.prototype=new gm.OverlayView();return this.ProjHelper.prototype['draw']=function(){};};function _Class(map1,opts){var e,k,l,len1,ref1,v;this.map=map1;if(opts==null){opts={};}for(k in opts){if(!hasProp.call(opts,k))continue;v=opts[k];this[k]=v;}this.projHelper=new this.constructor.ProjHelper(this.map);this.initMarkerArrays();this.listeners={};ref1=['click','zoom_changed','maptypeid_changed'];for(l=0,len1=ref1.length;l<len1;l++){e=ref1[l];ge.addListener(this.map,e,function(_this){return function(){return _this['unspiderfy']();};}(this));}}p.initMarkerArrays=function(){this.markers=[];return this.markerListenerRefs=[];};p['addMarker']=function(marker){var listenerRefs;if(marker['_oms']!=null){return this;}marker['_oms']=true;listenerRefs=[ge.addListener(marker,this['event'],function(_this){return function(event){return _this.spiderListener(marker,event);};}(this))];if(!this['markersWontHide']){listenerRefs.push(ge.addListener(marker,'visible_changed',function(_this){return function(){return _this.markerChangeListener(marker,false);};}(this)));}if(!this['markersWontMove']){listenerRefs.push(ge.addListener(marker,'position_changed',function(_this){return function(){return _this.markerChangeListener(marker,true);};}(this)));}this.markerListenerRefs.push(listenerRefs);this.markers.push(marker);return this;};p.markerChangeListener=function(marker,positionChanged){if(marker['_omsData']!=null&&(positionChanged||!marker.getVisible())&&!(this.spiderfying!=null||this.unspiderfying!=null)){return this['unspiderfy'](positionChanged?marker:null);}};p['getMarkers']=function(){return this.markers.slice(0);};p['removeMarker']=function(marker){var i,l,len1,listenerRef,listenerRefs;if(marker['_omsData']!=null){this['unspiderfy']();}i=this.arrIndexOf(this.markers,marker);if(i<0){return this;}listenerRefs=this.markerListenerRefs.splice(i,1)[0];for(l=0,len1=listenerRefs.length;l<len1;l++){listenerRef=listenerRefs[l];ge.removeListener(listenerRef);}delete marker['_oms'];this.markers.splice(i,1);return this;};p['clearMarkers']=function(){var i,l,len1,len2,listenerRef,listenerRefs,marker,n,ref1;this['unspiderfy']();ref1=this.markers;for(i=l=0,len1=ref1.length;l<len1;i=++l){marker=ref1[i];listenerRefs=this.markerListenerRefs[i];for(n=0,len2=listenerRefs.length;n<len2;n++){listenerRef=listenerRefs[n];ge.removeListener(listenerRef);}delete marker['_oms'];}this.initMarkerArrays();return this;};p['addListener']=function(event,func){var base;((base=this.listeners)[event]!=null?base[event]:base[event]=[]).push(func);return this;};p['removeListener']=function(event,func){var i;i=this.arrIndexOf(this.listeners[event],func);if(!(i<0)){this.listeners[event].splice(i,1);}return this;};p['clearListeners']=function(event){this.listeners[event]=[];return this;};p.trigger=function(){var args,event,func,l,len1,ref1,ref2,results;event=arguments[0],args=2<=arguments.length?slice.call(arguments,1):[];ref2=(ref1=this.listeners[event])!=null?ref1:[];results=[];for(l=0,len1=ref2.length;l<len1;l++){func=ref2[l];results.push(func.apply(null,args));}return results;};p.generatePtsCircle=function(count,centerPt){var angle,angleStep,circumference,i,l,legLength,ref1,results;circumference=this['circleFootSeparation']*(2+count);legLength=circumference/twoPi;angleStep=twoPi/count;results=[];for(i=l=0,ref1=count;0<=ref1?l<ref1:l>ref1;i=0<=ref1?++l:--l){angle=this['circleStartAngle']+i*angleStep;results.push(new gm.Point(centerPt.x+legLength*Math.cos(angle),centerPt.y+legLength*Math.sin(angle)));}return results;};p.generatePtsSpiral=function(count,centerPt){var angle,i,l,legLength,pt,ref1,results;legLength=this['spiralLengthStart'];angle=0;results=[];for(i=l=0,ref1=count;0<=ref1?l<ref1:l>ref1;i=0<=ref1?++l:--l){angle+=this['spiralFootSeparation']/legLength+i*0.0005;pt=new gm.Point(centerPt.x+legLength*Math.cos(angle),centerPt.y+legLength*Math.sin(angle));legLength+=twoPi*this['spiralLengthFactor']/angle;results.push(pt);}return results;};p.spiderListener=function(marker,event){var $this,clear,l,len1,m,mPt,markerPt,markerSpiderfied,nDist,nearbyMarkerData,nonNearbyMarkers,pxSq,ref1;markerSpiderfied=marker['_omsData']!=null;if(!(markerSpiderfied&&this['keepSpiderfied'])){if(this['event']==='mouseover'){$this=this;clear=function clear(){return $this['unspiderfy']();};window.clearTimeout(p.timeout);p.timeout=setTimeout(clear,3000);}else{this['unspiderfy']();}}if(markerSpiderfied||this.map.getStreetView().getVisible()||this.map.getMapTypeId()==='GoogleEarthAPI'){return this.trigger('click',marker,event);}else{nearbyMarkerData=[];nonNearbyMarkers=[];nDist=this['nearbyDistance'];pxSq=nDist*nDist;markerPt=this.llToPt(marker.position);ref1=this.markers;for(l=0,len1=ref1.length;l<len1;l++){m=ref1[l];if(!(m.map!=null&&m.getVisible())){continue;}mPt=this.llToPt(m.position);if(this.ptDistanceSq(mPt,markerPt)<pxSq){nearbyMarkerData.push({marker:m,markerPt:mPt});}else{nonNearbyMarkers.push(m);}}if(nearbyMarkerData.length===1){return this.trigger('click',marker,event);}else{return this.spiderfy(nearbyMarkerData,nonNearbyMarkers);}}};p['markersNearMarker']=function(marker,firstOnly){var l,len1,m,mPt,markerPt,markers,nDist,pxSq,ref1,ref2,ref3;if(firstOnly==null){firstOnly=false;}if(this.projHelper.getProjection()==null){throw"Must wait for 'idle' event on map before calling markersNearMarker";}nDist=this['nearbyDistance'];pxSq=nDist*nDist;markerPt=this.llToPt(marker.position);markers=[];ref1=this.markers;for(l=0,len1=ref1.length;l<len1;l++){m=ref1[l];if(m===marker||m.map==null||!m.getVisible()){continue;}mPt=this.llToPt((ref2=(ref3=m['_omsData'])!=null?ref3.usualPosition:void 0)!=null?ref2:m.position);if(this.ptDistanceSq(mPt,markerPt)<pxSq){markers.push(m);if(firstOnly){break;}}}return markers;};p['markersNearAnyOtherMarker']=function(){var i,i1,i2,l,len1,len2,len3,m,m1,m1Data,m2,m2Data,mData,n,nDist,pxSq,q,ref1,ref2,ref3,results;if(this.projHelper.getProjection()==null){throw"Must wait for 'idle' event on map before calling markersNearAnyOtherMarker";}nDist=this['nearbyDistance'];pxSq=nDist*nDist;mData=function(){var l,len1,ref1,ref2,ref3,results;ref1=this.markers;results=[];for(l=0,len1=ref1.length;l<len1;l++){m=ref1[l];results.push({pt:this.llToPt((ref2=(ref3=m['_omsData'])!=null?ref3.usualPosition:void 0)!=null?ref2:m.position),willSpiderfy:false});}return results;}.call(this);ref1=this.markers;for(i1=l=0,len1=ref1.length;l<len1;i1=++l){m1=ref1[i1];if(!(m1.map!=null&&m1.getVisible())){continue;}m1Data=mData[i1];if(m1Data.willSpiderfy){continue;}ref2=this.markers;for(i2=n=0,len2=ref2.length;n<len2;i2=++n){m2=ref2[i2];if(i2===i1){continue;}if(!(m2.map!=null&&m2.getVisible())){continue;}m2Data=mData[i2];if(i2<i1&&!m2Data.willSpiderfy){continue;}if(this.ptDistanceSq(m1Data.pt,m2Data.pt)<pxSq){m1Data.willSpiderfy=m2Data.willSpiderfy=true;break;}}}ref3=this.markers;results=[];for(i=q=0,len3=ref3.length;q<len3;i=++q){m=ref3[i];if(mData[i].willSpiderfy){results.push(m);}}return results;};p.makeHighlightListenerFuncs=function(marker){return{highlight:function(_this){return function(){return marker['_omsData'].leg.setOptions({strokeColor:_this['legColors']['highlighted'][_this.map.mapTypeId],zIndex:_this['highlightedLegZIndex']});};}(this),unhighlight:function(_this){return function(){return marker['_omsData'].leg.setOptions({strokeColor:_this['legColors']['usual'][_this.map.mapTypeId],zIndex:_this['usualLegZIndex']});};}(this)};};p.spiderfy=function(markerData,nonNearbyMarkers){var bodyPt,footLl,footPt,footPts,highlightListenerFuncs,leg,marker,md,nearestMarkerDatum,numFeet,spiderfiedMarkers;if(this['minZoomLevel']&&this.map.getZoom()<this['minZoomLevel']){return false;}this.spiderfying=true;numFeet=markerData.length;bodyPt=this.ptAverage(function(){var l,len1,results;results=[];for(l=0,len1=markerData.length;l<len1;l++){md=markerData[l];results.push(md.markerPt);}return results;}());footPts=numFeet>=this['circleSpiralSwitchover']?this.generatePtsSpiral(numFeet,bodyPt).reverse():this.generatePtsCircle(numFeet,bodyPt);spiderfiedMarkers=function(){var l,len1,results;results=[];for(l=0,len1=footPts.length;l<len1;l++){footPt=footPts[l];footLl=this.ptToLl(footPt);nearestMarkerDatum=this.minExtract(markerData,function(_this){return function(md){return _this.ptDistanceSq(md.markerPt,footPt);};}(this));marker=nearestMarkerDatum.marker;leg=new gm.Polyline({map:this.map,path:[marker.position,footLl],strokeColor:this['legColors']['usual'][this.map.mapTypeId],strokeWeight:this['legWeight'],zIndex:this['usualLegZIndex']});marker['_omsData']={usualPosition:marker.position,leg:leg};if(this['legColors']['highlighted'][this.map.mapTypeId]!==this['legColors']['usual'][this.map.mapTypeId]){highlightListenerFuncs=this.makeHighlightListenerFuncs(marker);marker['_omsData'].hightlightListeners={highlight:ge.addListener(marker,'mouseover',highlightListenerFuncs.highlight),unhighlight:ge.addListener(marker,'mouseout',highlightListenerFuncs.unhighlight)};}marker.setPosition(footLl);marker.setZIndex(Math.round(this['spiderfiedZIndex']+footPt.y));results.push(marker);}return results;}.call(this);delete this.spiderfying;this.spiderfied=true;return this.trigger('spiderfy',spiderfiedMarkers,nonNearbyMarkers);};p['unspiderfy']=function(markerNotToMove){var l,len1,listeners,marker,nonNearbyMarkers,ref1,unspiderfiedMarkers;if(markerNotToMove==null){markerNotToMove=null;}if(this.spiderfied==null){return this;}this.unspiderfying=true;unspiderfiedMarkers=[];nonNearbyMarkers=[];ref1=this.markers;for(l=0,len1=ref1.length;l<len1;l++){marker=ref1[l];if(marker['_omsData']!=null){marker['_omsData'].leg.setMap(null);if(marker!==markerNotToMove){marker.setPosition(marker['_omsData'].usualPosition);}marker.setZIndex(null);listeners=marker['_omsData'].hightlightListeners;if(listeners!=null){ge.removeListener(listeners.highlight);ge.removeListener(listeners.unhighlight);}delete marker['_omsData'];unspiderfiedMarkers.push(marker);}else{nonNearbyMarkers.push(marker);}}delete this.unspiderfying;delete this.spiderfied;this.trigger('unspiderfy',unspiderfiedMarkers,nonNearbyMarkers);return this;};p.ptDistanceSq=function(pt1,pt2){var dx,dy;dx=pt1.x-pt2.x;dy=pt1.y-pt2.y;return dx*dx+dy*dy;};p.ptAverage=function(pts){var l,len1,numPts,pt,sumX,sumY;sumX=sumY=0;for(l=0,len1=pts.length;l<len1;l++){pt=pts[l];sumX+=pt.x;sumY+=pt.y;}numPts=pts.length;return new gm.Point(sumX/numPts,sumY/numPts);};p.llToPt=function(ll){return this.projHelper.getProjection().fromLatLngToDivPixel(ll);};p.ptToLl=function(pt){return this.projHelper.getProjection().fromDivPixelToLatLng(pt);};p.minExtract=function(set,func){var bestIndex,bestVal,index,item,l,len1,val;for(index=l=0,len1=set.length;l<len1;index=++l){item=set[index];val=func(item);if(typeof bestIndex==="undefined"||bestIndex===null||val<bestVal){bestVal=val;bestIndex=index;}}return set.splice(bestIndex,1)[0];};p.arrIndexOf=function(arr,obj){var i,l,len1,o;if(arr.indexOf!=null){return arr.indexOf(obj);}for(i=l=0,len1=arr.length;l<len1;i=++l){o=arr[i];if(o===obj){return i;}}return-1;};return _Class;}();}.apply(self);GoogleMapApi.then(function(){self.OverlappingMarkerSpiderfier.initializeGoogleMaps(window.google);});return this.OverlappingMarkerSpiderfier;}]);;/**
     * Performance overrides on MarkerClusterer custom to Angular Google Maps
     *
     * Created by Petr Bruna ccg1415 and Nick McCready on 7/13/14.
     */angular.module('uiGmapgoogle-maps.extensions').service('uiGmapExtendMarkerClusterer',['uiGmapLodash','uiGmapPropMap',function(uiGmapLodash,PropMap){return{init:_.once(function(){(function(){var __hasProp={}.hasOwnProperty,__extends=function __extends(child,parent){for(var key in parent){if(__hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;};window.NgMapCluster=function(_super){__extends(NgMapCluster,_super);function NgMapCluster(opts){NgMapCluster.__super__.constructor.call(this,opts);this.markers_=new PropMap();}/**
                             * Adds a marker to the cluster.
                             *
                             * @param {google.maps.Marker} marker The marker to be added.
                             * @return {boolean} True if the marker was added.
                             * @ignore
                             */NgMapCluster.prototype.addMarker=function(marker){var i;var mCount;var mz;if(this.isMarkerAlreadyAdded_(marker)){var oldMarker=this.markers_.get(marker.key);if(oldMarker.getPosition().lat()==marker.getPosition().lat()&&oldMarker.getPosition().lon()==marker.getPosition().lon())//if nothing has changed
return false;}if(!this.center_){this.center_=marker.getPosition();this.calculateBounds_();}else{if(this.averageCenter_){var l=this.markers_.length+1;var lat=(this.center_.lat()*(l-1)+marker.getPosition().lat())/l;var lng=(this.center_.lng()*(l-1)+marker.getPosition().lng())/l;this.center_=new google.maps.LatLng(lat,lng);this.calculateBounds_();}}marker.isAdded=true;this.markers_.push(marker);mCount=this.markers_.length;mz=this.markerClusterer_.getMaxZoom();if(mz!==null&&this.map_.getZoom()>mz){// Zoomed in past max zoom, so show the marker.
if(marker.getMap()!==this.map_){marker.setMap(this.map_);}}else if(mCount<this.minClusterSize_){// Min cluster size not reached so show the marker.
if(marker.getMap()!==this.map_){marker.setMap(this.map_);}}else if(mCount===this.minClusterSize_){// Hide the markers that were showing.
this.markers_.each(function(m){m.setMap(null);});}else{marker.setMap(null);}//this.updateIcon_();
return true;};/**
                             * Determines if a marker has already been added to the cluster.
                             *
                             * @param {google.maps.Marker} marker The marker to check.
                             * @return {boolean} True if the marker has already been added.
                             */NgMapCluster.prototype.isMarkerAlreadyAdded_=function(marker){return uiGmapLodash.isNullOrUndefined(this.markers_.get(marker.key));};/**
                             * Returns the bounds of the cluster.
                             *
                             * @return {google.maps.LatLngBounds} the cluster bounds.
                             * @ignore
                             */NgMapCluster.prototype.getBounds=function(){var i;var bounds=new google.maps.LatLngBounds(this.center_,this.center_);this.getMarkers().each(function(m){bounds.extend(m.getPosition());});return bounds;};/**
                             * Removes the cluster from the map.
                             *
                             * @ignore
                             */NgMapCluster.prototype.remove=function(){this.clusterIcon_.setMap(null);this.markers_=new PropMap();delete this.markers_;};return NgMapCluster;}(Cluster);window.NgMapMarkerClusterer=function(_super){__extends(NgMapMarkerClusterer,_super);function NgMapMarkerClusterer(map,opt_markers,opt_options){NgMapMarkerClusterer.__super__.constructor.call(this,map,opt_markers,opt_options);this.markers_=new PropMap();}/**
                             * Removes all clusters and markers from the map and also removes all markers
                             *  managed by the clusterer.
                             */NgMapMarkerClusterer.prototype.clearMarkers=function(){this.resetViewport_(true);this.markers_=new PropMap();};/**
                             * Removes a marker and returns true if removed, false if not.
                             *
                             * @param {google.maps.Marker} marker The marker to remove
                             * @return {boolean} Whether the marker was removed or not
                             */NgMapMarkerClusterer.prototype.removeMarker_=function(marker){if(!this.markers_.get(marker.key)){return false;}marker.setMap(null);this.markers_.remove(marker.key);// Remove the marker from the list of managed markers
return true;};/**
                             * Creates the clusters. This is done in batches to avoid timeout errors
                             *  in some browsers when there is a huge number of markers.
                             *
                             * @param {number} iFirst The index of the first marker in the batch of
                             *  markers to be added to clusters.
                             */NgMapMarkerClusterer.prototype.createClusters_=function(iFirst){var i,marker;var mapBounds;var cMarkerClusterer=this;if(!this.ready_){return;}// Cancel previous batch processing if we're working on the first batch:
if(iFirst===0){/**
                                     * This event is fired when the <code>MarkerClusterer</code> begins
                                     *  clustering markers.
                                     * @name MarkerClusterer#clusteringbegin
                                     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.
                                     * @event
                                     */google.maps.event.trigger(this,'clusteringbegin',this);if(typeof this.timerRefStatic!=='undefined'){clearTimeout(this.timerRefStatic);delete this.timerRefStatic;}}// Get our current map view bounds.
// Create a new bounds object so we don't affect the map.
//
// See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:
if(this.getMap().getZoom()>3){mapBounds=new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),this.getMap().getBounds().getNorthEast());}else{mapBounds=new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625));}var bounds=this.getExtendedBounds(mapBounds);var iLast=Math.min(iFirst+this.batchSize_,this.markers_.length);var _ms=this.markers_.values();for(i=iFirst;i<iLast;i++){marker=_ms[i];if(!marker.isAdded&&this.isMarkerInBounds_(marker,bounds)){if(!this.ignoreHidden_||this.ignoreHidden_&&marker.getVisible()){this.addToClosestCluster_(marker);}}}if(iLast<this.markers_.length){this.timerRefStatic=setTimeout(function(){cMarkerClusterer.createClusters_(iLast);},0);}else{// custom addition by ui-gmap
// update icon for all clusters
for(i=0;i<this.clusters_.length;i++){this.clusters_[i].updateIcon_();}delete this.timerRefStatic;/**
                                     * This event is fired when the <code>MarkerClusterer</code> stops
                                     *  clustering markers.
                                     * @name MarkerClusterer#clusteringend
                                     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.
                                     * @event
                                     */google.maps.event.trigger(this,'clusteringend',this);}};/**
                             * Adds a marker to a cluster, or creates a new cluster.
                             *
                             * @param {google.maps.Marker} marker The marker to add.
                             */NgMapMarkerClusterer.prototype.addToClosestCluster_=function(marker){var i,d,cluster,center;var distance=40000;// Some large number
var clusterToAddTo=null;for(i=0;i<this.clusters_.length;i++){cluster=this.clusters_[i];center=cluster.getCenter();if(center){d=this.distanceBetweenPoints_(center,marker.getPosition());if(d<distance){distance=d;clusterToAddTo=cluster;}}}if(clusterToAddTo&&clusterToAddTo.isMarkerInClusterBounds(marker)){clusterToAddTo.addMarker(marker);}else{cluster=new NgMapCluster(this);cluster.addMarker(marker);this.clusters_.push(cluster);}};/**
                             * Redraws all the clusters.
                             */NgMapMarkerClusterer.prototype.redraw_=function(){this.createClusters_(0);};/**
                             * Removes all clusters from the map. The markers are also removed from the map
                             *  if <code>opt_hide</code> is set to <code>true</code>.
                             *
                             * @param {boolean} [opt_hide] Set to <code>true</code> to also remove the markers
                             *  from the map.
                             */NgMapMarkerClusterer.prototype.resetViewport_=function(opt_hide){var i,marker;// Remove all the clusters
for(i=0;i<this.clusters_.length;i++){this.clusters_[i].remove();}this.clusters_=[];// Reset the markers to not be added and to be removed from the map.
this.markers_.each(function(marker){marker.isAdded=false;if(opt_hide){marker.setMap(null);}});};/**
                             * Extends an object's prototype by another's.
                             *
                             * @param {Object} obj1 The object to be extended.
                             * @param {Object} obj2 The object to extend with.
                             * @return {Object} The new extended object.
                             * @ignore
                             */NgMapMarkerClusterer.prototype.extend=function(obj1,obj2){return function(object){var property;for(property in object.prototype){if(property!=='constructor')this.prototype[property]=object.prototype[property];}return this;}.apply(obj1,[obj2]);};////////////////////////////////////////////////////////////////////////////////
/*
                             Other overrides relevant to MarkerClusterPlus
                             */////////////////////////////////////////////////////////////////////////////////
/**
                             * Positions and shows the icon.
                             */ClusterIcon.prototype.show=function(){if(this.div_){var img="";// NOTE: values must be specified in px units
var bp=this.backgroundPosition_.split(" ");var spriteH=parseInt(bp[0].trim(),10);var spriteV=parseInt(bp[1].trim(),10);var pos=this.getPosFromLatLng_(this.center_);this.div_.style.cssText=this.createCss(pos);img="<img src='"+this.url_+"' style='position: absolute; top: "+spriteV+"px; left: "+spriteH+"px; ";if(!this.cluster_.getMarkerClusterer().enableRetinaIcons_){img+="clip: rect("+-1*spriteV+"px, "+(-1*spriteH+this.width_)+"px, "+(-1*spriteV+this.height_)+"px, "+-1*spriteH+"px);";}// ADDED FOR RETINA SUPPORT
else{img+="width: "+this.width_+"px;"+"height: "+this.height_+"px;";}// END ADD
img+="'>";this.div_.innerHTML=img+"<div style='"+"position: absolute;"+"top: "+this.anchorText_[0]+"px;"+"left: "+this.anchorText_[1]+"px;"+"color: "+this.textColor_+";"+"font-size: "+this.textSize_+"px;"+"font-family: "+this.fontFamily_+";"+"font-weight: "+this.fontWeight_+";"+"font-style: "+this.fontStyle_+";"+"text-decoration: "+this.textDecoration_+";"+"text-align: center;"+"width: "+this.width_+"px;"+"line-height:"+this.height_+"px;"+"'>"+this.sums_.text+"</div>";if(typeof this.sums_.title==="undefined"||this.sums_.title===""){this.div_.title=this.cluster_.getMarkerClusterer().getTitle();}else{this.div_.title=this.sums_.title;}this.div_.style.display="";}this.visible_=true;};//END OTHER OVERRIDES
////////////////////////////////////////////////////////////////////////////////
return NgMapMarkerClusterer;}(MarkerClusterer);}).call(this);})};}]);})(window,angular,_);

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function (w) {
    'use strict';
    function M(a, b) {
        b = b || Error;return function () {
            var d = arguments[0],
                c;c = "[" + (a ? a + ":" : "") + d + "] http://errors.angularjs.org/1.6.3/" + (a ? a + "/" : "") + d;for (d = 1; d < arguments.length; d++) {
                c = c + (1 == d ? "?" : "&") + "p" + (d - 1) + "=";var e = encodeURIComponent,
                    f;f = arguments[d];f = "function" == typeof f ? f.toString().replace(/ \{[\s\S]*$/, "") : "undefined" == typeof f ? "undefined" : "string" != typeof f ? JSON.stringify(f) : f;c += e(f);
            }return new b(c);
        };
    }function me(a) {
        if (G(a)) u(a.objectMaxDepth) && (Fc.objectMaxDepth = Tb(a.objectMaxDepth) ? a.objectMaxDepth : NaN);else return Fc;
    }function Tb(a) {
        return ba(a) && 0 < a;
    }function ra(a) {
        if (null == a || Wa(a)) return !1;if (H(a) || D(a) || F && a instanceof F) return !0;var b = "length" in Object(a) && a.length;return ba(b) && (0 <= b && (b - 1 in a || a instanceof Array) || "function" === typeof a.item);
    }function p(a, b, d) {
        var c, e;if (a) if (E(a)) for (c in a) {
            "prototype" !== c && "length" !== c && "name" !== c && a.hasOwnProperty(c) && b.call(d, a[c], c, a);
        } else if (H(a) || ra(a)) {
            var f = "object" !== (typeof a === "undefined" ? "undefined" : _typeof(a));c = 0;for (e = a.length; c < e; c++) {
                (f || c in a) && b.call(d, a[c], c, a);
            }
        } else if (a.forEach && a.forEach !== p) a.forEach(b, d, a);else if (Gc(a)) for (c in a) {
            b.call(d, a[c], c, a);
        } else if ("function" === typeof a.hasOwnProperty) for (c in a) {
            a.hasOwnProperty(c) && b.call(d, a[c], c, a);
        } else for (c in a) {
            ua.call(a, c) && b.call(d, a[c], c, a);
        }return a;
    }function Hc(a, b, d) {
        for (var c = Object.keys(a).sort(), e = 0; e < c.length; e++) {
            b.call(d, a[c[e]], c[e]);
        }return c;
    }function Ic(a) {
        return function (b, d) {
            a(d, b);
        };
    }function ne() {
        return ++rb;
    }function Ub(a, b, d) {
        for (var c = a.$$hashKey, e = 0, f = b.length; e < f; ++e) {
            var g = b[e];
            if (G(g) || E(g)) for (var h = Object.keys(g), k = 0, l = h.length; k < l; k++) {
                var m = h[k],
                    n = g[m];d && G(n) ? ga(n) ? a[m] = new Date(n.valueOf()) : Xa(n) ? a[m] = new RegExp(n) : n.nodeName ? a[m] = n.cloneNode(!0) : Vb(n) ? a[m] = n.clone() : (G(a[m]) || (a[m] = H(n) ? [] : {}), Ub(a[m], [n], !0)) : a[m] = n;
            }
        }c ? a.$$hashKey = c : delete a.$$hashKey;return a;
    }function R(a) {
        return Ub(a, va.call(arguments, 1), !1);
    }function oe(a) {
        return Ub(a, va.call(arguments, 1), !0);
    }function Z(a) {
        return parseInt(a, 10);
    }function Wb(a, b) {
        return R(Object.create(a), b);
    }function A() {}function Ya(a) {
        return a;
    }
    function la(a) {
        return function () {
            return a;
        };
    }function Xb(a) {
        return E(a.toString) && a.toString !== ma;
    }function x(a) {
        return "undefined" === typeof a;
    }function u(a) {
        return "undefined" !== typeof a;
    }function G(a) {
        return null !== a && "object" === (typeof a === "undefined" ? "undefined" : _typeof(a));
    }function Gc(a) {
        return null !== a && "object" === (typeof a === "undefined" ? "undefined" : _typeof(a)) && !Jc(a);
    }function D(a) {
        return "string" === typeof a;
    }function ba(a) {
        return "number" === typeof a;
    }function ga(a) {
        return "[object Date]" === ma.call(a);
    }function E(a) {
        return "function" === typeof a;
    }function Xa(a) {
        return "[object RegExp]" === ma.call(a);
    }function Wa(a) {
        return a && a.window === a;
    }function Za(a) {
        return a && a.$evalAsync && a.$watch;
    }function Ha(a) {
        return "boolean" === typeof a;
    }function pe(a) {
        return a && ba(a.length) && qe.test(ma.call(a));
    }function Vb(a) {
        return !(!a || !(a.nodeName || a.prop && a.attr && a.find));
    }function re(a) {
        var b = {};a = a.split(",");var d;for (d = 0; d < a.length; d++) {
            b[a[d]] = !0;
        }return b;
    }function wa(a) {
        return P(a.nodeName || a[0] && a[0].nodeName);
    }function $a(a, b) {
        var d = a.indexOf(b);0 <= d && a.splice(d, 1);return d;
    }function sa(a, b, d) {
        function c(a, b, c) {
            c--;if (0 > c) return "...";var d = b.$$hashKey,
                f;if (H(a)) {
                f = 0;for (var g = a.length; f < g; f++) {
                    b.push(e(a[f], c));
                }
            } else if (Gc(a)) for (f in a) {
                b[f] = e(a[f], c);
            } else if (a && "function" === typeof a.hasOwnProperty) for (f in a) {
                a.hasOwnProperty(f) && (b[f] = e(a[f], c));
            } else for (f in a) {
                ua.call(a, f) && (b[f] = e(a[f], c));
            }d ? b.$$hashKey = d : delete b.$$hashKey;return b;
        }function e(a, b) {
            if (!G(a)) return a;var d = g.indexOf(a);if (-1 !== d) return h[d];if (Wa(a) || Za(a)) throw Fa("cpws");var d = !1,
                e = f(a);void 0 === e && (e = H(a) ? [] : Object.create(Jc(a)), d = !0);g.push(a);h.push(e);return d ? c(a, e, b) : e;
        }function f(a) {
            switch (ma.call(a)) {case "[object Int8Array]":case "[object Int16Array]":case "[object Int32Array]":case "[object Float32Array]":case "[object Float64Array]":case "[object Uint8Array]":case "[object Uint8ClampedArray]":case "[object Uint16Array]":case "[object Uint32Array]":
                    return new a.constructor(e(a.buffer), a.byteOffset, a.length);case "[object ArrayBuffer]":
                    if (!a.slice) {
                        var b = new ArrayBuffer(a.byteLength);new Uint8Array(b).set(new Uint8Array(a));
                        return b;
                    }return a.slice(0);case "[object Boolean]":case "[object Number]":case "[object String]":case "[object Date]":
                    return new a.constructor(a.valueOf());case "[object RegExp]":
                    return b = new RegExp(a.source, a.toString().match(/[^/]*$/)[0]), b.lastIndex = a.lastIndex, b;case "[object Blob]":
                    return new a.constructor([a], { type: a.type });}if (E(a.cloneNode)) return a.cloneNode(!0);
        }var g = [],
            h = [];d = Tb(d) ? d : NaN;if (b) {
            if (pe(b) || "[object ArrayBuffer]" === ma.call(b)) throw Fa("cpta");if (a === b) throw Fa("cpi");H(b) ? b.length = 0 : p(b, function (a, c) {
                "$$hashKey" !== c && delete b[c];
            });g.push(a);h.push(b);return c(a, b, d);
        }return e(a, d);
    }function pa(a, b) {
        if (a === b) return !0;if (null === a || null === b) return !1;if (a !== a && b !== b) return !0;var d = typeof a === "undefined" ? "undefined" : _typeof(a),
            c;if (d === (typeof b === "undefined" ? "undefined" : _typeof(b)) && "object" === d) if (H(a)) {
            if (!H(b)) return !1;if ((d = a.length) === b.length) {
                for (c = 0; c < d; c++) {
                    if (!pa(a[c], b[c])) return !1;
                }return !0;
            }
        } else {
            if (ga(a)) return ga(b) ? pa(a.getTime(), b.getTime()) : !1;if (Xa(a)) return Xa(b) ? a.toString() === b.toString() : !1;if (Za(a) || Za(b) || Wa(a) || Wa(b) || H(b) || ga(b) || Xa(b)) return !1;d = V();for (c in a) {
                if ("$" !== c.charAt(0) && !E(a[c])) {
                    if (!pa(a[c], b[c])) return !1;d[c] = !0;
                }
            }for (c in b) {
                if (!(c in d) && "$" !== c.charAt(0) && u(b[c]) && !E(b[c])) return !1;
            }return !0;
        }return !1;
    }function ab(a, b, d) {
        return a.concat(va.call(b, d));
    }function bb(a, b) {
        var d = 2 < arguments.length ? va.call(arguments, 2) : [];return !E(b) || b instanceof RegExp ? b : d.length ? function () {
            return arguments.length ? b.apply(a, ab(d, arguments, 0)) : b.apply(a, d);
        } : function () {
            return arguments.length ? b.apply(a, arguments) : b.call(a);
        };
    }function Kc(a, b) {
        var d = b;"string" === typeof a && "$" === a.charAt(0) && "$" === a.charAt(1) ? d = void 0 : Wa(b) ? d = "$WINDOW" : b && w.document === b ? d = "$DOCUMENT" : Za(b) && (d = "$SCOPE");return d;
    }function cb(a, b) {
        if (!x(a)) return ba(b) || (b = b ? 2 : null), JSON.stringify(a, Kc, b);
    }function Lc(a) {
        return D(a) ? JSON.parse(a) : a;
    }function Mc(a, b) {
        a = a.replace(se, "");var d = Date.parse("Jan 01, 1970 00:00:00 " + a) / 6E4;return da(d) ? b : d;
    }function Yb(a, b, d) {
        d = d ? -1 : 1;var c = a.getTimezoneOffset();b = Mc(b, c);d *= b - c;a = new Date(a.getTime());a.setMinutes(a.getMinutes() + d);return a;
    }function xa(a) {
        a = F(a).clone();try {
            a.empty();
        } catch (b) {}var d = F("<div>").append(a).html();try {
            return a[0].nodeType === Ia ? P(d) : d.match(/^(<[^>]+>)/)[1].replace(/^<([\w-]+)/, function (a, b) {
                return "<" + P(b);
            });
        } catch (c) {
            return P(d);
        }
    }function Nc(a) {
        try {
            return decodeURIComponent(a);
        } catch (b) {}
    }function Oc(a) {
        var b = {};p((a || "").split("&"), function (a) {
            var c, e, f;a && (e = a = a.replace(/\+/g, "%20"), c = a.indexOf("="), -1 !== c && (e = a.substring(0, c), f = a.substring(c + 1)), e = Nc(e), u(e) && (f = u(f) ? Nc(f) : !0, ua.call(b, e) ? H(b[e]) ? b[e].push(f) : b[e] = [b[e], f] : b[e] = f));
        });return b;
    }function Zb(a) {
        var b = [];p(a, function (a, c) {
            H(a) ? p(a, function (a) {
                b.push($(c, !0) + (!0 === a ? "" : "=" + $(a, !0)));
            }) : b.push($(c, !0) + (!0 === a ? "" : "=" + $(a, !0)));
        });return b.length ? b.join("&") : "";
    }function db(a) {
        return $(a, !0).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+");
    }function $(a, b) {
        return encodeURIComponent(a).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%3B/gi, ";").replace(/%20/g, b ? "%20" : "+");
    }function te(a, b) {
        var d,
            c,
            e = Ja.length;for (c = 0; c < e; ++c) {
            if (d = Ja[c] + b, D(d = a.getAttribute(d))) return d;
        }return null;
    }function ue(a, b) {
        var d,
            c,
            e = {};p(Ja, function (b) {
            b += "app";!d && a.hasAttribute && a.hasAttribute(b) && (d = a, c = a.getAttribute(b));
        });p(Ja, function (b) {
            b += "app";var e;!d && (e = a.querySelector("[" + b.replace(":", "\\:") + "]")) && (d = e, c = e.getAttribute(b));
        });d && (ve ? (e.strictDi = null !== te(d, "strict-di"), b(d, c ? [c] : [], e)) : w.console.error("Angular: disabling automatic bootstrap. <script> protocol indicates an extension, document.location.href does not match."));
    }
    function Pc(a, b, d) {
        G(d) || (d = {});d = R({ strictDi: !1 }, d);var c = function c() {
            a = F(a);if (a.injector()) {
                var c = a[0] === w.document ? "document" : xa(a);throw Fa("btstrpd", c.replace(/</, "&lt;").replace(/>/, "&gt;"));
            }b = b || [];b.unshift(["$provide", function (b) {
                b.value("$rootElement", a);
            }]);d.debugInfoEnabled && b.push(["$compileProvider", function (a) {
                a.debugInfoEnabled(!0);
            }]);b.unshift("ng");c = eb(b, d.strictDi);c.invoke(["$rootScope", "$rootElement", "$compile", "$injector", function (a, b, c, d) {
                a.$apply(function () {
                    b.data("$injector", d);c(b)(a);
                });
            }]);return c;
        },
            e = /^NG_ENABLE_DEBUG_INFO!/,
            f = /^NG_DEFER_BOOTSTRAP!/;w && e.test(w.name) && (d.debugInfoEnabled = !0, w.name = w.name.replace(e, ""));if (w && !f.test(w.name)) return c();w.name = w.name.replace(f, "");ea.resumeBootstrap = function (a) {
            p(a, function (a) {
                b.push(a);
            });return c();
        };E(ea.resumeDeferredBootstrap) && ea.resumeDeferredBootstrap();
    }function we() {
        w.name = "NG_ENABLE_DEBUG_INFO!" + w.name;w.location.reload();
    }function xe(a) {
        a = ea.element(a).injector();if (!a) throw Fa("test");return a.get("$$testability");
    }
    function Qc(a, b) {
        b = b || "_";return a.replace(ye, function (a, c) {
            return (c ? b : "") + a.toLowerCase();
        });
    }function ze() {
        var a;if (!Rc) {
            var b = sb();(na = x(b) ? w.jQuery : b ? w[b] : void 0) && na.fn.on ? (F = na, R(na.fn, { scope: Oa.scope, isolateScope: Oa.isolateScope, controller: Oa.controller, injector: Oa.injector, inheritedData: Oa.inheritedData }), a = na.cleanData, na.cleanData = function (b) {
                for (var c, e = 0, f; null != (f = b[e]); e++) {
                    (c = na._data(f, "events")) && c.$destroy && na(f).triggerHandler("$destroy");
                }a(b);
            }) : F = W;ea.element = F;Rc = !0;
        }
    }function fb(a, b, d) {
        if (!a) throw Fa("areq", b || "?", d || "required");return a;
    }function tb(a, b, d) {
        d && H(a) && (a = a[a.length - 1]);fb(E(a), b, "not a function, got " + (a && "object" === (typeof a === "undefined" ? "undefined" : _typeof(a)) ? a.constructor.name || "Object" : typeof a === "undefined" ? "undefined" : _typeof(a)));return a;
    }function Ka(a, b) {
        if ("hasOwnProperty" === a) throw Fa("badname", b);
    }function Sc(a, b, d) {
        if (!b) return a;b = b.split(".");for (var c, e = a, f = b.length, g = 0; g < f; g++) {
            c = b[g], a && (a = (e = a)[c]);
        }return !d && E(a) ? bb(e, a) : a;
    }function ub(a) {
        for (var b = a[0], d = a[a.length - 1], c, e = 1; b !== d && (b = b.nextSibling); e++) {
            if (c || a[e] !== b) c || (c = F(va.call(a, 0, e))), c.push(b);
        }return c || a;
    }function V() {
        return Object.create(null);
    }function $b(a) {
        if (null == a) return "";switch (typeof a === "undefined" ? "undefined" : _typeof(a)) {case "string":
                break;case "number":
                a = "" + a;break;default:
                a = !Xb(a) || H(a) || ga(a) ? cb(a) : a.toString();}return a;
    }function Ae(a) {
        function b(a, b, c) {
            return a[b] || (a[b] = c());
        }var d = M("$injector"),
            c = M("ng");a = b(a, "angular", Object);a.$$minErr = a.$$minErr || M;return b(a, "module", function () {
            var a = {};return function (f, g, h) {
                var k = {};if ("hasOwnProperty" === f) throw c("badname", "module");
                g && a.hasOwnProperty(f) && (a[f] = null);return b(a, f, function () {
                    function a(b, c, d, f) {
                        f || (f = e);return function () {
                            f[d || "push"]([b, c, arguments]);return p;
                        };
                    }function b(a, c, d) {
                        d || (d = e);return function (b, e) {
                            e && E(e) && (e.$$moduleName = f);d.push([a, c, arguments]);return p;
                        };
                    }if (!g) throw d("nomod", f);var e = [],
                        q = [],
                        r = [],
                        I = a("$injector", "invoke", "push", q),
                        p = { _invokeQueue: e, _configBlocks: q, _runBlocks: r, info: function info(a) {
                            if (u(a)) {
                                if (!G(a)) throw c("aobj", "value");k = a;return this;
                            }return k;
                        }, requires: g, name: f, provider: b("$provide", "provider"), factory: b("$provide", "factory"), service: b("$provide", "service"), value: a("$provide", "value"), constant: a("$provide", "constant", "unshift"), decorator: b("$provide", "decorator", q), animation: b("$animateProvider", "register"), filter: b("$filterProvider", "register"), controller: b("$controllerProvider", "register"), directive: b("$compileProvider", "directive"), component: b("$compileProvider", "component"), config: I, run: function run(a) {
                            r.push(a);return this;
                        } };h && I(h);return p;
                });
            };
        });
    }function qa(a, b) {
        if (H(a)) {
            b = b || [];for (var d = 0, c = a.length; d < c; d++) {
                b[d] = a[d];
            }
        } else if (G(a)) for (d in b = b || {}, a) {
            if ("$" !== d.charAt(0) || "$" !== d.charAt(1)) b[d] = a[d];
        }return b || a;
    }function Be(a, b) {
        var d = [];Tb(b) && (a = sa(a, null, b));return JSON.stringify(a, function (a, b) {
            b = Kc(a, b);if (G(b)) {
                if (0 <= d.indexOf(b)) return "...";d.push(b);
            }return b;
        });
    }function Ce(a) {
        R(a, { errorHandlingConfig: me, bootstrap: Pc, copy: sa, extend: R, merge: oe, equals: pa, element: F, forEach: p, injector: eb, noop: A, bind: bb, toJson: cb, fromJson: Lc, identity: Ya, isUndefined: x, isDefined: u, isString: D,
            isFunction: E, isObject: G, isNumber: ba, isElement: Vb, isArray: H, version: De, isDate: ga, lowercase: P, uppercase: vb, callbacks: { $$counter: 0 }, getTestability: xe, reloadWithDebugInfo: we, $$minErr: M, $$csp: Ga, $$encodeUriSegment: db, $$encodeUriQuery: $, $$stringify: $b });ac = Ae(w);ac("ng", ["ngLocale"], ["$provide", function (a) {
            a.provider({ $$sanitizeUri: Ee });a.provider("$compile", Tc).directive({ a: Fe, input: Uc, textarea: Uc, form: Ge, script: He, select: Ie, option: Je, ngBind: Ke, ngBindHtml: Le, ngBindTemplate: Me, ngClass: Ne, ngClassEven: Oe,
                ngClassOdd: Pe, ngCloak: Qe, ngController: Re, ngForm: Se, ngHide: Te, ngIf: Ue, ngInclude: Ve, ngInit: We, ngNonBindable: Xe, ngPluralize: Ye, ngRepeat: Ze, ngShow: $e, ngStyle: af, ngSwitch: bf, ngSwitchWhen: cf, ngSwitchDefault: df, ngOptions: ef, ngTransclude: ff, ngModel: gf, ngList: hf, ngChange: jf, pattern: Vc, ngPattern: Vc, required: Wc, ngRequired: Wc, minlength: Xc, ngMinlength: Xc, maxlength: Yc, ngMaxlength: Yc, ngValue: kf, ngModelOptions: lf }).directive({ ngInclude: mf }).directive(wb).directive(Zc);a.provider({ $anchorScroll: nf, $animate: of, $animateCss: pf,
                $$animateJs: qf, $$animateQueue: rf, $$AnimateRunner: sf, $$animateAsyncRun: tf, $browser: uf, $cacheFactory: vf, $controller: wf, $document: xf, $$isDocumentHidden: yf, $exceptionHandler: zf, $filter: $c, $$forceReflow: Af, $interpolate: Bf, $interval: Cf, $http: Df, $httpParamSerializer: Ef, $httpParamSerializerJQLike: Ff, $httpBackend: Gf, $xhrFactory: Hf, $jsonpCallbacks: If, $location: Jf, $log: Kf, $parse: Lf, $rootScope: Mf, $q: Nf, $$q: Of, $sce: Pf, $sceDelegate: Qf, $sniffer: Rf, $templateCache: Sf, $templateRequest: Tf, $$testability: Uf, $timeout: Vf,
                $window: Wf, $$rAF: Xf, $$jqLite: Yf, $$Map: Zf, $$cookieReader: $f });
        }]).info({ angularVersion: "1.6.3" });
    }function gb(a, b) {
        return b.toUpperCase();
    }function xb(a) {
        return a.replace(ag, gb);
    }function ad(a) {
        a = a.nodeType;return 1 === a || !a || 9 === a;
    }function bd(a, b) {
        var d,
            c,
            e = b.createDocumentFragment(),
            f = [];if (bc.test(a)) {
            d = e.appendChild(b.createElement("div"));c = (bg.exec(a) || ["", ""])[1].toLowerCase();c = ha[c] || ha._default;d.innerHTML = c[1] + a.replace(cg, "<$1></$2>") + c[2];for (c = c[0]; c--;) {
                d = d.lastChild;
            }f = ab(f, d.childNodes);
            d = e.firstChild;d.textContent = "";
        } else f.push(b.createTextNode(a));e.textContent = "";e.innerHTML = "";p(f, function (a) {
            e.appendChild(a);
        });return e;
    }function W(a) {
        if (a instanceof W) return a;var b;D(a) && (a = S(a), b = !0);if (!(this instanceof W)) {
            if (b && "<" !== a.charAt(0)) throw cc("nosel");return new W(a);
        }if (b) {
            b = w.document;var d;a = (d = dg.exec(a)) ? [b.createElement(d[1])] : (d = bd(a, b)) ? d.childNodes : [];dc(this, a);
        } else E(a) ? cd(a) : dc(this, a);
    }function ec(a) {
        return a.cloneNode(!0);
    }function yb(a, b) {
        b || hb(a);if (a.querySelectorAll) for (var d = a.querySelectorAll("*"), c = 0, e = d.length; c < e; c++) {
            hb(d[c]);
        }
    }function dd(a, b, d, c) {
        if (u(c)) throw cc("offargs");var e = (c = zb(a)) && c.events,
            f = c && c.handle;if (f) if (b) {
            var g = function g(b) {
                var c = e[b];u(d) && $a(c || [], d);u(d) && c && 0 < c.length || (a.removeEventListener(b, f), delete e[b]);
            };p(b.split(" "), function (a) {
                g(a);Ab[a] && g(Ab[a]);
            });
        } else for (b in e) {
            "$destroy" !== b && a.removeEventListener(b, f), delete e[b];
        }
    }function hb(a, b) {
        var d = a.ng339,
            c = d && ib[d];c && (b ? delete c.data[b] : (c.handle && (c.events.$destroy && c.handle({}, "$destroy"), dd(a)), delete ib[d], a.ng339 = void 0));
    }function zb(a, b) {
        var d = a.ng339,
            d = d && ib[d];b && !d && (a.ng339 = d = ++eg, d = ib[d] = { events: {}, data: {}, handle: void 0 });return d;
    }function fc(a, b, d) {
        if (ad(a)) {
            var c,
                e = u(d),
                f = !e && b && !G(b),
                g = !b;a = (a = zb(a, !f)) && a.data;if (e) a[xb(b)] = d;else {
                if (g) return a;if (f) return a && a[xb(b)];for (c in b) {
                    a[xb(c)] = b[c];
                }
            }
        }
    }function Bb(a, b) {
        return a.getAttribute ? -1 < (" " + (a.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").indexOf(" " + b + " ") : !1;
    }function Cb(a, b) {
        b && a.setAttribute && p(b.split(" "), function (b) {
            a.setAttribute("class", S((" " + (a.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").replace(" " + S(b) + " ", " ")));
        });
    }function Db(a, b) {
        if (b && a.setAttribute) {
            var d = (" " + (a.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ");p(b.split(" "), function (a) {
                a = S(a);-1 === d.indexOf(" " + a + " ") && (d += a + " ");
            });a.setAttribute("class", S(d));
        }
    }function dc(a, b) {
        if (b) if (b.nodeType) a[a.length++] = b;else {
            var d = b.length;if ("number" === typeof d && b.window !== b) {
                if (d) for (var c = 0; c < d; c++) {
                    a[a.length++] = b[c];
                }
            } else a[a.length++] = b;
        }
    }function ed(a, b) {
        return Eb(a, "$" + (b || "ngController") + "Controller");
    }function Eb(a, b, d) {
        9 === a.nodeType && (a = a.documentElement);for (b = H(b) ? b : [b]; a;) {
            for (var c = 0, e = b.length; c < e; c++) {
                if (u(d = F.data(a, b[c]))) return d;
            }a = a.parentNode || 11 === a.nodeType && a.host;
        }
    }function fd(a) {
        for (yb(a, !0); a.firstChild;) {
            a.removeChild(a.firstChild);
        }
    }function Fb(a, b) {
        b || yb(a);var d = a.parentNode;d && d.removeChild(a);
    }function fg(a, b) {
        b = b || w;if ("complete" === b.document.readyState) b.setTimeout(a);else F(b).on("load", a);
    }function cd(a) {
        function b() {
            w.document.removeEventListener("DOMContentLoaded", b);w.removeEventListener("load", b);a();
        }"complete" === w.document.readyState ? w.setTimeout(a) : (w.document.addEventListener("DOMContentLoaded", b), w.addEventListener("load", b));
    }function gd(a, b) {
        var d = Gb[b.toLowerCase()];return d && hd[wa(a)] && d;
    }function gg(a, b) {
        var d = function d(c, _d) {
            c.isDefaultPrevented = function () {
                return c.defaultPrevented;
            };var f = b[_d || c.type],
                g = f ? f.length : 0;if (g) {
                if (x(c.immediatePropagationStopped)) {
                    var h = c.stopImmediatePropagation;c.stopImmediatePropagation = function () {
                        c.immediatePropagationStopped = !0;c.stopPropagation && c.stopPropagation();h && h.call(c);
                    };
                }c.isImmediatePropagationStopped = function () {
                    return !0 === c.immediatePropagationStopped;
                };var k = f.specialHandlerWrapper || hg;1 < g && (f = qa(f));for (var l = 0; l < g; l++) {
                    c.isImmediatePropagationStopped() || k(a, c, f[l]);
                }
            }
        };d.elem = a;return d;
    }function hg(a, b, d) {
        d.call(a, b);
    }function ig(a, b, d) {
        var c = b.relatedTarget;c && (c === a || jg.call(a, c)) || d.call(a, b);
    }function Yf() {
        this.$get = function () {
            return R(W, { hasClass: function hasClass(a, b) {
                    a.attr && (a = a[0]);return Bb(a, b);
                }, addClass: function addClass(a, b) {
                    a.attr && (a = a[0]);return Db(a, b);
                }, removeClass: function removeClass(a, b) {
                    a.attr && (a = a[0]);return Cb(a, b);
                } });
        };
    }function Pa(a, b) {
        var d = a && a.$$hashKey;if (d) return "function" === typeof d && (d = a.$$hashKey()), d;d = typeof a === "undefined" ? "undefined" : _typeof(a);return d = "function" === d || "object" === d && null !== a ? a.$$hashKey = d + ":" + (b || ne)() : d + ":" + a;
    }function id() {
        this._keys = [];this._values = [];this._lastKey = NaN;this._lastIndex = -1;
    }function jd(a) {
        a = Function.prototype.toString.call(a).replace(kg, "");return a.match(lg) || a.match(mg);
    }function ng(a) {
        return (a = jd(a)) ? "function(" + (a[1] || "").replace(/[\s\r\n]+/, " ") + ")" : "fn";
    }function eb(a, b) {
        function d(a) {
            return function (b, c) {
                if (G(b)) p(b, Ic(a));else return a(b, c);
            };
        }function c(a, b) {
            Ka(a, "service");if (E(b) || H(b)) b = q.instantiate(b);if (!b.$get) throw ya("pget", a);return n[a + "Provider"] = b;
        }function e(a, b) {
            return function () {
                var c = N.invoke(b, this);if (x(c)) throw ya("undef", a);return c;
            };
        }function f(a, b, d) {
            return c(a, { $get: !1 !== d ? e(a, b) : b });
        }function g(a) {
            fb(x(a) || H(a), "modulesToLoad", "not an array");var b = [],
                c;p(a, function (a) {
                function d(a) {
                    var b, c;b = 0;for (c = a.length; b < c; b++) {
                        var e = a[b],
                            f = q.get(e[0]);f[e[1]].apply(f, e[2]);
                    }
                }if (!m.get(a)) {
                    m.set(a, !0);try {
                        D(a) ? (c = ac(a), N.modules[a] = c, b = b.concat(g(c.requires)).concat(c._runBlocks), d(c._invokeQueue), d(c._configBlocks)) : E(a) ? b.push(q.invoke(a)) : H(a) ? b.push(q.invoke(a)) : tb(a, "module");
                    } catch (e) {
                        throw H(a) && (a = a[a.length - 1]), e.message && e.stack && -1 === e.stack.indexOf(e.message) && (e = e.message + "\n" + e.stack), ya("modulerr", a, e.stack || e.message || e);
                    }
                }
            });return b;
        }function h(a, c) {
            function d(b, e) {
                if (a.hasOwnProperty(b)) {
                    if (a[b] === k) throw ya("cdep", b + " <- " + l.join(" <- "));return a[b];
                }try {
                    return l.unshift(b), a[b] = k, a[b] = c(b, e), a[b];
                } catch (f) {
                    throw a[b] === k && delete a[b], f;
                } finally {
                    l.shift();
                }
            }function e(a, c, f) {
                var g = [];a = eb.$$annotate(a, b, f);for (var k = 0, h = a.length; k < h; k++) {
                    var l = a[k];if ("string" !== typeof l) throw ya("itkn", l);g.push(c && c.hasOwnProperty(l) ? c[l] : d(l, f));
                }return g;
            }return { invoke: function invoke(a, b, c, d) {
                    "string" === typeof c && (d = c, c = null);c = e(a, c, d);H(a) && (a = a[a.length - 1]);d = a;if (za || "function" !== typeof d) d = !1;else {
                        var f = d.$$ngIsClass;
                        Ha(f) || (f = d.$$ngIsClass = /^(?:class\b|constructor\()/.test(Function.prototype.toString.call(d)));d = f;
                    }return d ? (c.unshift(null), new (Function.prototype.bind.apply(a, c))()) : a.apply(b, c);
                }, instantiate: function instantiate(a, b, c) {
                    var d = H(a) ? a[a.length - 1] : a;a = e(a, b, c);a.unshift(null);return new (Function.prototype.bind.apply(d, a))();
                }, get: d, annotate: eb.$$annotate, has: function has(b) {
                    return n.hasOwnProperty(b + "Provider") || a.hasOwnProperty(b);
                } };
        }b = !0 === b;var k = {},
            l = [],
            m = new Hb(),
            n = { $provide: { provider: d(c), factory: d(f), service: d(function (a, b) {
                    return f(a, ["$injector", function (a) {
                        return a.instantiate(b);
                    }]);
                }), value: d(function (a, b) {
                    return f(a, la(b), !1);
                }), constant: d(function (a, b) {
                    Ka(a, "constant");n[a] = b;r[a] = b;
                }), decorator: function decorator(a, b) {
                    var c = q.get(a + "Provider"),
                        d = c.$get;c.$get = function () {
                        var a = N.invoke(d, c);return N.invoke(b, null, { $delegate: a });
                    };
                } } },
            q = n.$injector = h(n, function (a, b) {
            ea.isString(b) && l.push(b);throw ya("unpr", l.join(" <- "));
        }),
            r = {},
            I = h(r, function (a, b) {
            var c = q.get(a + "Provider", b);return N.invoke(c.$get, c, void 0, a);
        }),
            N = I;n.$injectorProvider = { $get: la(I) };N.modules = q.modules = V();var t = g(a),
            N = I.get("$injector");N.strictDi = b;p(t, function (a) {
            a && N.invoke(a);
        });return N;
    }function nf() {
        var a = !0;this.disableAutoScrolling = function () {
            a = !1;
        };this.$get = ["$window", "$location", "$rootScope", function (b, d, c) {
            function e(a) {
                var b = null;Array.prototype.some.call(a, function (a) {
                    if ("a" === wa(a)) return b = a, !0;
                });return b;
            }function f(a) {
                if (a) {
                    a.scrollIntoView();var c;c = g.yOffset;E(c) ? c = c() : Vb(c) ? (c = c[0], c = "fixed" !== b.getComputedStyle(c).position ? 0 : c.getBoundingClientRect().bottom) : ba(c) || (c = 0);c && (a = a.getBoundingClientRect().top, b.scrollBy(0, a - c));
                } else b.scrollTo(0, 0);
            }function g(a) {
                a = D(a) ? a : ba(a) ? a.toString() : d.hash();var b;a ? (b = h.getElementById(a)) ? f(b) : (b = e(h.getElementsByName(a))) ? f(b) : "top" === a && f(null) : f(null);
            }var h = b.document;a && c.$watch(function () {
                return d.hash();
            }, function (a, b) {
                a === b && "" === a || fg(function () {
                    c.$evalAsync(g);
                });
            });return g;
        }];
    }function jb(a, b) {
        if (!a && !b) return "";if (!a) return b;if (!b) return a;H(a) && (a = a.join(" "));H(b) && (b = b.join(" "));return a + " " + b;
    }function og(a) {
        D(a) && (a = a.split(" "));var b = V();p(a, function (a) {
            a.length && (b[a] = !0);
        });return b;
    }function ia(a) {
        return G(a) ? a : {};
    }function pg(a, b, d, c) {
        function e(a) {
            try {
                a.apply(null, va.call(arguments, 1));
            } finally {
                if (I--, 0 === I) for (; N.length;) {
                    try {
                        N.pop()();
                    } catch (b) {
                        d.error(b);
                    }
                }
            }
        }function f() {
            La = null;h();
        }function g() {
            t = B();t = x(t) ? null : t;pa(t, C) && (t = C);K = C = t;
        }function h() {
            var a = K;g();if (y !== k.url() || a !== t) y = k.url(), K = t, p(J, function (a) {
                a(k.url(), t);
            });
        }var k = this,
            l = a.location,
            m = a.history,
            n = a.setTimeout,
            q = a.clearTimeout,
            r = {};k.isMock = !1;var I = 0,
            N = [];k.$$completeOutstandingRequest = e;k.$$incOutstandingRequestCount = function () {
            I++;
        };k.notifyWhenNoOutstandingRequests = function (a) {
            0 === I ? a() : N.push(a);
        };var t,
            K,
            y = l.href,
            v = b.find("base"),
            La = null,
            B = c.history ? function () {
            try {
                return m.state;
            } catch (a) {}
        } : A;g();k.url = function (b, d, e) {
            x(e) && (e = null);l !== a.location && (l = a.location);m !== a.history && (m = a.history);if (b) {
                var f = K === e;if (y === b && (!c.history || f)) return k;var h = y && Aa(y) === Aa(b);y = b;K = e;!c.history || h && f ? (h || (La = b), d ? l.replace(b) : h ? (d = l, e = b.indexOf("#"), e = -1 === e ? "" : b.substr(e), d.hash = e) : l.href = b, l.href !== b && (La = b)) : (m[d ? "replaceState" : "pushState"](e, "", b), g());La && (La = b);return k;
            }return La || l.href.replace(/%27/g, "'");
        };k.state = function () {
            return t;
        };var J = [],
            L = !1,
            C = null;k.onUrlChange = function (b) {
            if (!L) {
                if (c.history) F(a).on("popstate", f);F(a).on("hashchange", f);L = !0;
            }J.push(b);return b;
        };k.$$applicationDestroyed = function () {
            F(a).off("hashchange popstate", f);
        };k.$$checkUrlChange = h;k.baseHref = function () {
            var a = v.attr("href");return a ? a.replace(/^(https?:)?\/\/[^/]*/, "") : "";
        };k.defer = function (a, b) {
            var c;I++;c = n(function () {
                delete r[c];e(a);
            }, b || 0);r[c] = !0;return c;
        };k.defer.cancel = function (a) {
            return r[a] ? (delete r[a], q(a), e(A), !0) : !1;
        };
    }function uf() {
        this.$get = ["$window", "$log", "$sniffer", "$document", function (a, b, d, c) {
            return new pg(a, c, b, d);
        }];
    }function vf() {
        this.$get = function () {
            function a(a, c) {
                function e(a) {
                    a !== n && (q ? q === a && (q = a.n) : q = a, f(a.n, a.p), f(a, n), n = a, n.n = null);
                }function f(a, b) {
                    a !== b && (a && (a.p = b), b && (b.n = a));
                }if (a in b) throw M("$cacheFactory")("iid", a);var g = 0,
                    h = R({}, c, { id: a }),
                    k = V(),
                    l = c && c.capacity || Number.MAX_VALUE,
                    m = V(),
                    n = null,
                    q = null;return b[a] = { put: function put(a, b) {
                        if (!x(b)) {
                            if (l < Number.MAX_VALUE) {
                                var c = m[a] || (m[a] = { key: a });e(c);
                            }a in k || g++;k[a] = b;g > l && this.remove(q.key);return b;
                        }
                    }, get: function get(a) {
                        if (l < Number.MAX_VALUE) {
                            var b = m[a];if (!b) return;e(b);
                        }return k[a];
                    }, remove: function remove(a) {
                        if (l < Number.MAX_VALUE) {
                            var b = m[a];if (!b) return;b === n && (n = b.p);b === q && (q = b.n);f(b.n, b.p);delete m[a];
                        }a in k && (delete k[a], g--);
                    }, removeAll: function removeAll() {
                        k = V();g = 0;m = V();n = q = null;
                    }, destroy: function destroy() {
                        m = h = k = null;delete b[a];
                    }, info: function info() {
                        return R({}, h, { size: g });
                    } };
            }var b = {};a.info = function () {
                var a = {};p(b, function (b, e) {
                    a[e] = b.info();
                });return a;
            };a.get = function (a) {
                return b[a];
            };return a;
        };
    }function Sf() {
        this.$get = ["$cacheFactory", function (a) {
            return a("templates");
        }];
    }function Tc(a, b) {
        function d(a, b, c) {
            var d = /^\s*([@&<]|=(\*?))(\??)\s*([\w$]*)\s*$/,
                e = V();p(a, function (a, f) {
                if (a in n) e[f] = n[a];else {
                    var g = a.match(d);if (!g) throw fa("iscp", b, f, a, c ? "controller bindings definition" : "isolate scope definition");
                    e[f] = { mode: g[1][0], collection: "*" === g[2], optional: "?" === g[3], attrName: g[4] || f };g[4] && (n[a] = e[f]);
                }
            });return e;
        }function c(a) {
            var b = a.charAt(0);if (!b || b !== P(b)) throw fa("baddir", a);if (a !== a.trim()) throw fa("baddir", a);
        }function e(a) {
            var b = a.require || a.controller && a.name;!H(b) && G(b) && p(b, function (a, c) {
                var d = a.match(l);a.substring(d[0].length) || (b[c] = d[0] + c);
            });return b;
        }var f = {},
            g = /^\s*directive:\s*([\w-]+)\s+(.*)$/,
            h = /(([\w-]+)(?::([^;]+))?;?)/,
            k = re("ngSrc,ngSrcset,src,srcset"),
            l = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/,
            m = /^(on[a-z]+|formaction)$/,
            n = V();this.directive = function y(b, d) {
            fb(b, "name");Ka(b, "directive");D(b) ? (c(b), fb(d, "directiveFactory"), f.hasOwnProperty(b) || (f[b] = [], a.factory(b + "Directive", ["$injector", "$exceptionHandler", function (a, c) {
                var d = [];p(f[b], function (f, g) {
                    try {
                        var h = a.invoke(f);E(h) ? h = { compile: la(h) } : !h.compile && h.link && (h.compile = la(h.link));h.priority = h.priority || 0;h.index = g;h.name = h.name || b;h.require = e(h);var k = h,
                            l = h.restrict;if (l && (!D(l) || !/[EACM]/.test(l))) throw fa("badrestrict", l, b);k.restrict = l || "EA";h.$$moduleName = f.$$moduleName;d.push(h);
                    } catch (m) {
                        c(m);
                    }
                });return d;
            }])), f[b].push(d)) : p(b, Ic(y));return this;
        };this.component = function (a, b) {
            function c(a) {
                function e(b) {
                    return E(b) || H(b) ? function (c, d) {
                        return a.invoke(b, this, { $element: c, $attrs: d });
                    } : b;
                }var f = b.template || b.templateUrl ? b.template : "",
                    g = { controller: d, controllerAs: qg(b.controller) || b.controllerAs || "$ctrl", template: e(f), templateUrl: e(b.templateUrl), transclude: b.transclude, scope: {}, bindToController: b.bindings || {}, restrict: "E", require: b.require };
                p(b, function (a, b) {
                    "$" === b.charAt(0) && (g[b] = a);
                });return g;
            }var d = b.controller || function () {};p(b, function (a, b) {
                "$" === b.charAt(0) && (c[b] = a, E(d) && (d[b] = a));
            });c.$inject = ["$injector"];return this.directive(a, c);
        };this.aHrefSanitizationWhitelist = function (a) {
            return u(a) ? (b.aHrefSanitizationWhitelist(a), this) : b.aHrefSanitizationWhitelist();
        };this.imgSrcSanitizationWhitelist = function (a) {
            return u(a) ? (b.imgSrcSanitizationWhitelist(a), this) : b.imgSrcSanitizationWhitelist();
        };var q = !0;this.debugInfoEnabled = function (a) {
            return u(a) ? (q = a, this) : q;
        };var r = !1;this.preAssignBindingsEnabled = function (a) {
            return u(a) ? (r = a, this) : r;
        };var I = 10;this.onChangesTtl = function (a) {
            return arguments.length ? (I = a, this) : I;
        };var N = !0;this.commentDirectivesEnabled = function (a) {
            return arguments.length ? (N = a, this) : N;
        };var t = !0;this.cssClassDirectivesEnabled = function (a) {
            return arguments.length ? (t = a, this) : t;
        };this.$get = ["$injector", "$interpolate", "$exceptionHandler", "$templateRequest", "$parse", "$controller", "$rootScope", "$sce", "$animate", "$$sanitizeUri", function (a, b, c, e, n, L, C, z, O, X) {
            function T() {
                try {
                    if (! --ya) throw ia = void 0, fa("infchng", I);C.$apply(function () {
                        for (var a = [], b = 0, c = ia.length; b < c; ++b) {
                            try {
                                ia[b]();
                            } catch (d) {
                                a.push(d);
                            }
                        }ia = void 0;if (a.length) throw a;
                    });
                } finally {
                    ya++;
                }
            }function s(a, b) {
                if (b) {
                    var c = Object.keys(b),
                        d,
                        e,
                        f;d = 0;for (e = c.length; d < e; d++) {
                        f = c[d], this[f] = b[f];
                    }
                } else this.$attr = {};this.$$element = a;
            }function Q(a, b, c) {
                ta.innerHTML = "<span " + b + ">";b = ta.firstChild.attributes;var d = b[0];b.removeNamedItem(d.name);d.value = c;a.attributes.setNamedItem(d);
            }function Ma(a, b) {
                try {
                    a.addClass(b);
                } catch (c) {}
            }function ca(a, b, c, d, e) {
                a instanceof F || (a = F(a));var f = Na(a, b, a, c, d, e);ca.$$addScopeClass(a);var g = null;return function (b, c, d) {
                    if (!a) throw fa("multilink");fb(b, "scope");e && e.needsNewScope && (b = b.$parent.$new());d = d || {};var h = d.parentBoundTranscludeFn,
                        k = d.transcludeControllers;d = d.futureParentElement;h && h.$$boundTransclude && (h = h.$$boundTransclude);g || (g = (d = d && d[0]) ? "foreignobject" !== wa(d) && ma.call(d).match(/SVG/) ? "svg" : "html" : "html");d = "html" !== g ? F(ha(g, F("<div>").append(a).html())) : c ? Oa.clone.call(a) : a;if (k) for (var l in k) {
                        d.data("$" + l + "Controller", k[l].instance);
                    }ca.$$addScopeInfo(d, b);c && c(d, b);f && f(b, d, d, h);c || (a = f = null);return d;
                };
            }function Na(a, b, c, d, e, f) {
                function g(a, c, d, e) {
                    var f, k, l, m, n, q, r;if (J) for (r = Array(c.length), m = 0; m < h.length; m += 3) {
                        f = h[m], r[f] = c[f];
                    } else r = c;m = 0;for (n = h.length; m < n;) {
                        k = r[h[m++]], c = h[m++], f = h[m++], c ? (c.scope ? (l = a.$new(), ca.$$addScopeInfo(F(k), l)) : l = a, q = c.transcludeOnThisElement ? ja(a, c.transclude, e) : !c.templateOnThisElement && e ? e : !e && b ? ja(a, b) : null, c(f, l, k, d, q)) : f && f(a, k.childNodes, void 0, e);
                    }
                }for (var h = [], k = H(a) || a instanceof F, l, m, n, q, J, r = 0; r < a.length; r++) {
                    l = new s();11 === za && M(a, r, k);m = hc(a[r], [], l, 0 === r ? d : void 0, e);(f = m.length ? W(m, a[r], l, b, c, null, [], [], f) : null) && f.scope && ca.$$addScopeClass(l.$$element);l = f && f.terminal || !(n = a[r].childNodes) || !n.length ? null : Na(n, f ? (f.transcludeOnThisElement || !f.templateOnThisElement) && f.transclude : b);if (f || l) h.push(r, f, l), q = !0, J = J || f;f = null;
                }return q ? g : null;
            }function M(a, b, c) {
                var d = a[b],
                    e = d.parentNode,
                    f;if (d.nodeType === Ia) for (;;) {
                    f = e ? d.nextSibling : a[b + 1];if (!f || f.nodeType !== Ia) break;d.nodeValue += f.nodeValue;f.parentNode && f.parentNode.removeChild(f);c && f === a[b + 1] && a.splice(b + 1, 1);
                }
            }function ja(a, b, c) {
                function d(e, f, g, h, k) {
                    e || (e = a.$new(!1, k), e.$$transcluded = !0);return b(e, f, { parentBoundTranscludeFn: c, transcludeControllers: g, futureParentElement: h });
                }var e = d.$$slots = V(),
                    f;for (f in b.$$slots) {
                    e[f] = b.$$slots[f] ? ja(a, b.$$slots[f], c) : null;
                }return d;
            }function hc(a, b, c, d, e) {
                var f = c.$attr,
                    g;switch (a.nodeType) {case 1:
                        g = wa(a);Y(b, Ba(g), "E", d, e);for (var k, l, m, n, q = a.attributes, J = 0, r = q && q.length; J < r; J++) {
                            var B = !1,
                                C = !1;k = q[J];l = k.name;m = k.value;k = Ba(l);(n = Ja.test(k)) && (l = l.replace(kd, "").substr(8).replace(/_(.)/g, function (a, b) {
                                return b.toUpperCase();
                            }));(k = k.match(Ka)) && Z(k[1]) && (B = l, C = l.substr(0, l.length - 5) + "end", l = l.substr(0, l.length - 6));k = Ba(l.toLowerCase());f[k] = l;if (n || !c.hasOwnProperty(k)) c[k] = m, gd(a, k) && (c[k] = !0);qa(a, b, m, k, n);Y(b, k, "A", d, e, B, C);
                        }"input" === g && "hidden" === a.getAttribute("type") && a.setAttribute("autocomplete", "off");if (!Ga) break;f = a.className;G(f) && (f = f.animVal);if (D(f) && "" !== f) for (; a = h.exec(f);) {
                            k = Ba(a[2]), Y(b, k, "C", d, e) && (c[k] = S(a[3])), f = f.substr(a.index + a[0].length);
                        }break;case Ia:
                        la(b, a.nodeValue);break;case 8:
                        if (!Fa) break;kb(a, b, c, d, e);}b.sort(ea);return b;
            }function kb(a, b, c, d, e) {
                try {
                    var f = g.exec(a.nodeValue);if (f) {
                        var h = Ba(f[1]);Y(b, h, "M", d, e) && (c[h] = S(f[2]));
                    }
                } catch (k) {}
            }function ld(a, b, c) {
                var d = [],
                    e = 0;if (b && a.hasAttribute && a.hasAttribute(b)) {
                    do {
                        if (!a) throw fa("uterdir", b, c);1 === a.nodeType && (a.hasAttribute(b) && e++, a.hasAttribute(c) && e--);d.push(a);a = a.nextSibling;
                    } while (0 < e);
                } else d.push(a);return F(d);
            }function md(a, b, c) {
                return function (d, e, f, g, h) {
                    e = ld(e[0], b, c);return a(d, e, f, g, h);
                };
            }function ic(a, b, c, d, e, f) {
                var g;return a ? ca(b, c, d, e, f) : function () {
                    g || (g = ca(b, c, d, e, f), b = c = f = null);return g.apply(this, arguments);
                };
            }function W(a, b, d, e, f, g, h, k, l) {
                function m(a, b, c, d) {
                    if (a) {
                        c && (a = md(a, c, d));a.require = z.require;a.directiveName = v;if (C === z || z.$$isolateScope) a = ra(a, { isolateScope: !0 });h.push(a);
                    }if (b) {
                        c && (b = md(b, c, d));b.require = z.require;b.directiveName = v;if (C === z || z.$$isolateScope) b = ra(b, { isolateScope: !0 });k.push(b);
                    }
                }function n(a, e, f, g, l) {
                    function m(a, b, c, d) {
                        var e;Za(a) || (d = c, c = b, b = a, a = void 0);X && (e = O);c || (c = X ? v.parent() : v);if (d) {
                            var f = l.$$slots[d];if (f) return f(a, b, e, c, Q);if (x(f)) throw fa("noslot", d, xa(v));
                        } else return l(a, b, e, c, Q);
                    }var q, z, t, I, y, O, T, v;b === f ? (g = d, v = d.$$element) : (v = F(f), g = new s(v, d));y = e;C ? I = e.$new(!0) : J && (y = e.$parent);l && (T = m, T.$$boundTransclude = l, T.isSlotFilled = function (a) {
                        return !!l.$$slots[a];
                    });B && (O = ba(v, g, T, B, I, e, C));C && (ca.$$addScopeInfo(v, I, !0, !(L && (L === C || L === C.$$originalDirective))), ca.$$addScopeClass(v, !0), I.$$isolateBindings = C.$$isolateBindings, z = na(e, g, I, I.$$isolateBindings, C), z.removeWatches && I.$on("$destroy", z.removeWatches));for (q in O) {
                        z = B[q];t = O[q];var Ib = z.$$bindings.bindToController;if (r) {
                            t.bindingInfo = Ib ? na(y, g, t.instance, Ib, z) : {};var N = t();N !== t.instance && (t.instance = N, v.data("$" + z.name + "Controller", N), t.bindingInfo.removeWatches && t.bindingInfo.removeWatches(), t.bindingInfo = na(y, g, t.instance, Ib, z));
                        } else t.instance = t(), v.data("$" + z.name + "Controller", t.instance), t.bindingInfo = na(y, g, t.instance, Ib, z);
                    }p(B, function (a, b) {
                        var c = a.require;a.bindToController && !H(c) && G(c) && R(O[b].instance, U(b, c, v, O));
                    });p(O, function (a) {
                        var b = a.instance;if (E(b.$onChanges)) try {
                            b.$onChanges(a.bindingInfo.initialChanges);
                        } catch (d) {
                            c(d);
                        }if (E(b.$onInit)) try {
                            b.$onInit();
                        } catch (e) {
                            c(e);
                        }E(b.$doCheck) && (y.$watch(function () {
                            b.$doCheck();
                        }), b.$doCheck());E(b.$onDestroy) && y.$on("$destroy", function () {
                            b.$onDestroy();
                        });
                    });
                    q = 0;for (z = h.length; q < z; q++) {
                        t = h[q], sa(t, t.isolateScope ? I : e, v, g, t.require && U(t.directiveName, t.require, v, O), T);
                    }var Q = e;C && (C.template || null === C.templateUrl) && (Q = I);a && a(Q, f.childNodes, void 0, l);for (q = k.length - 1; 0 <= q; q--) {
                        t = k[q], sa(t, t.isolateScope ? I : e, v, g, t.require && U(t.directiveName, t.require, v, O), T);
                    }p(O, function (a) {
                        a = a.instance;E(a.$postLink) && a.$postLink();
                    });
                }l = l || {};for (var q = -Number.MAX_VALUE, J = l.newScopeDirective, B = l.controllerDirectives, C = l.newIsolateScopeDirective, L = l.templateDirective, t = l.nonTlbTranscludeDirective, I = !1, O = !1, X = l.hasElementTranscludeDirective, y = d.$$element = F(b), z, v, T, N = e, Q, u = !1, Ma = !1, w, A = 0, D = a.length; A < D; A++) {
                    z = a[A];var Na = z.$$start,
                        M = z.$$end;Na && (y = ld(b, Na, M));T = void 0;if (q > z.priority) break;if (w = z.scope) z.templateUrl || (G(w) ? ($("new/isolated scope", C || J, z, y), C = z) : $("new/isolated scope", C, z, y)), J = J || z;v = z.name;if (!u && (z.replace && (z.templateUrl || z.template) || z.transclude && !z.$$tlb)) {
                        for (w = A + 1; u = a[w++];) {
                            if (u.transclude && !u.$$tlb || u.replace && (u.templateUrl || u.template)) {
                                Ma = !0;break;
                            }
                        }u = !0;
                    }!z.templateUrl && z.controller && (B = B || V(), $("'" + v + "' controller", B[v], z, y), B[v] = z);if (w = z.transclude) if (I = !0, z.$$tlb || ($("transclusion", t, z, y), t = z), "element" === w) X = !0, q = z.priority, T = y, y = d.$$element = F(ca.$$createComment(v, d[v])), b = y[0], ka(f, va.call(T, 0), b), T[0].$$parentNode = T[0].parentNode, N = ic(Ma, T, e, q, g && g.name, { nonTlbTranscludeDirective: t });else {
                        var ja = V();if (G(w)) {
                            T = [];var P = V(),
                                kb = V();p(w, function (a, b) {
                                var c = "?" === a.charAt(0);a = c ? a.substring(1) : a;P[a] = b;ja[b] = null;kb[b] = c;
                            });p(y.contents(), function (a) {
                                var b = P[Ba(wa(a))];
                                b ? (kb[b] = !0, ja[b] = ja[b] || [], ja[b].push(a)) : T.push(a);
                            });p(kb, function (a, b) {
                                if (!a) throw fa("reqslot", b);
                            });for (var gc in ja) {
                                ja[gc] && (ja[gc] = ic(Ma, ja[gc], e));
                            }
                        } else T = F(ec(b)).contents();y.empty();N = ic(Ma, T, e, void 0, void 0, { needsNewScope: z.$$isolateScope || z.$$newScope });N.$$slots = ja;
                    }if (z.template) if (O = !0, $("template", L, z, y), L = z, w = E(z.template) ? z.template(y, d) : z.template, w = Ea(w), z.replace) {
                        g = z;T = bc.test(w) ? nd(ha(z.templateNamespace, S(w))) : [];b = T[0];if (1 !== T.length || 1 !== b.nodeType) throw fa("tplrt", v, "");
                        ka(f, y, b);D = { $attr: {} };w = hc(b, [], D);var Y = a.splice(A + 1, a.length - (A + 1));(C || J) && aa(w, C, J);a = a.concat(w).concat(Y);da(d, D);D = a.length;
                    } else y.html(w);if (z.templateUrl) O = !0, $("template", L, z, y), L = z, z.replace && (g = z), n = ga(a.splice(A, a.length - A), y, d, f, I && N, h, k, { controllerDirectives: B, newScopeDirective: J !== z && J, newIsolateScopeDirective: C, templateDirective: L, nonTlbTranscludeDirective: t }), D = a.length;else if (z.compile) try {
                        Q = z.compile(y, d, N);var Z = z.$$originalDirective || z;E(Q) ? m(null, bb(Z, Q), Na, M) : Q && m(bb(Z, Q.pre), bb(Z, Q.post), Na, M);
                    } catch (ea) {
                        c(ea, xa(y));
                    }z.terminal && (n.terminal = !0, q = Math.max(q, z.priority));
                }n.scope = J && !0 === J.scope;n.transcludeOnThisElement = I;n.templateOnThisElement = O;n.transclude = N;l.hasElementTranscludeDirective = X;return n;
            }function U(a, b, c, d) {
                var e;if (D(b)) {
                    var f = b.match(l);b = b.substring(f[0].length);var g = f[1] || f[3],
                        f = "?" === f[2];"^^" === g ? c = c.parent() : e = (e = d && d[b]) && e.instance;if (!e) {
                        var h = "$" + b + "Controller";e = g ? c.inheritedData(h) : c.data(h);
                    }if (!e && !f) throw fa("ctreq", b, a);
                } else if (H(b)) for (e = [], g = 0, f = b.length; g < f; g++) {
                    e[g] = U(a, b[g], c, d);
                } else G(b) && (e = {}, p(b, function (b, f) {
                    e[f] = U(a, b, c, d);
                }));return e || null;
            }function ba(a, b, c, d, e, f, g) {
                var h = V(),
                    k;for (k in d) {
                    var l = d[k],
                        m = { $scope: l === g || l.$$isolateScope ? e : f, $element: a, $attrs: b, $transclude: c },
                        n = l.controller;"@" === n && (n = b[l.name]);m = L(n, m, !0, l.controllerAs);h[l.name] = m;a.data("$" + l.name + "Controller", m.instance);
                }return h;
            }function aa(a, b, c) {
                for (var d = 0, e = a.length; d < e; d++) {
                    a[d] = Wb(a[d], { $$isolateScope: b, $$newScope: c });
                }
            }function Y(b, c, e, g, h, k, l) {
                if (c === h) return null;var m = null;if (f.hasOwnProperty(c)) {
                    h = a.get(c + "Directive");for (var n = 0, q = h.length; n < q; n++) {
                        if (c = h[n], (x(g) || g > c.priority) && -1 !== c.restrict.indexOf(e)) {
                            k && (c = Wb(c, { $$start: k, $$end: l }));if (!c.$$bindings) {
                                var J = m = c,
                                    r = c.name,
                                    B = { isolateScope: null, bindToController: null };G(J.scope) && (!0 === J.bindToController ? (B.bindToController = d(J.scope, r, !0), B.isolateScope = {}) : B.isolateScope = d(J.scope, r, !1));G(J.bindToController) && (B.bindToController = d(J.bindToController, r, !0));if (B.bindToController && !J.controller) throw fa("noctrl", r);m = m.$$bindings = B;G(m.isolateScope) && (c.$$isolateBindings = m.isolateScope);
                            }b.push(c);m = c;
                        }
                    }
                }return m;
            }function Z(b) {
                if (f.hasOwnProperty(b)) for (var c = a.get(b + "Directive"), d = 0, e = c.length; d < e; d++) {
                    if (b = c[d], b.multiElement) return !0;
                }return !1;
            }function da(a, b) {
                var c = b.$attr,
                    d = a.$attr;p(a, function (d, e) {
                    "$" !== e.charAt(0) && (b[e] && b[e] !== d && (d = d.length ? d + (("style" === e ? ";" : " ") + b[e]) : b[e]), a.$set(e, d, !0, c[e]));
                });p(b, function (b, e) {
                    a.hasOwnProperty(e) || "$" === e.charAt(0) || (a[e] = b, "class" !== e && "style" !== e && (d[e] = c[e]));
                });
            }
            function ga(a, b, d, f, g, h, k, l) {
                var m = [],
                    n,
                    q,
                    J = b[0],
                    r = a.shift(),
                    z = Wb(r, { templateUrl: null, transclude: null, replace: null, $$originalDirective: r }),
                    t = E(r.templateUrl) ? r.templateUrl(b, d) : r.templateUrl,
                    C = r.templateNamespace;b.empty();e(t).then(function (c) {
                    var e, B;c = Ea(c);if (r.replace) {
                        c = bc.test(c) ? nd(ha(C, S(c))) : [];e = c[0];if (1 !== c.length || 1 !== e.nodeType) throw fa("tplrt", r.name, t);c = { $attr: {} };ka(f, b, e);var L = hc(e, [], c);G(r.scope) && aa(L, !0);a = L.concat(a);da(d, c);
                    } else e = J, b.html(c);a.unshift(z);n = W(a, e, d, g, b, r, h, k, l);p(f, function (a, c) {
                        a === e && (f[c] = b[0]);
                    });for (q = Na(b[0].childNodes, g); m.length;) {
                        c = m.shift();B = m.shift();var I = m.shift(),
                            y = m.shift(),
                            L = b[0];if (!c.$$destroyed) {
                            if (B !== J) {
                                var O = B.className;l.hasElementTranscludeDirective && r.replace || (L = ec(e));ka(I, F(B), L);Ma(F(L), O);
                            }B = n.transcludeOnThisElement ? ja(c, n.transclude, y) : y;n(q, c, L, f, B);
                        }
                    }m = null;
                }).catch(function (a) {
                    a instanceof Error && c(a);
                });return function (a, b, c, d, e) {
                    a = e;b.$$destroyed || (m ? m.push(b, c, d, a) : (n.transcludeOnThisElement && (a = ja(b, n.transclude, e)), n(q, b, c, d, a)));
                };
            }function ea(a, b) {
                var c = b.priority - a.priority;return 0 !== c ? c : a.name !== b.name ? a.name < b.name ? -1 : 1 : a.index - b.index;
            }function $(a, b, c, d) {
                function e(a) {
                    return a ? " (module: " + a + ")" : "";
                }if (b) throw fa("multidir", b.name, e(b.$$moduleName), c.name, e(c.$$moduleName), a, xa(d));
            }function la(a, c) {
                var d = b(c, !0);d && a.push({ priority: 0, compile: function compile(a) {
                        a = a.parent();var b = !!a.length;b && ca.$$addBindingClass(a);return function (a, c) {
                            var e = c.parent();b || ca.$$addBindingClass(e);ca.$$addBindingInfo(e, d.expressions);
                            a.$watch(d, function (a) {
                                c[0].nodeValue = a;
                            });
                        };
                    } });
            }function ha(a, b) {
                a = P(a || "html");switch (a) {case "svg":case "math":
                        var c = w.document.createElement("div");c.innerHTML = "<" + a + ">" + b + "</" + a + ">";return c.childNodes[0].childNodes;default:
                        return b;}
            }function oa(a, b) {
                if ("srcdoc" === b) return z.HTML;var c = wa(a);if ("src" === b || "ngSrc" === b) {
                    if (-1 === ["img", "video", "audio", "source", "track"].indexOf(c)) return z.RESOURCE_URL;
                } else if ("xlinkHref" === b || "form" === c && "action" === b || "link" === c && "href" === b) return z.RESOURCE_URL;
            }function qa(a, c, d, e, f) {
                var g = oa(a, e),
                    h = k[e] || f,
                    l = b(d, !f, g, h);if (l) {
                    if ("multiple" === e && "select" === wa(a)) throw fa("selmulti", xa(a));if (m.test(e)) throw fa("nodomevents");c.push({ priority: 100, compile: function compile() {
                            return { pre: function pre(a, c, f) {
                                    c = f.$$observers || (f.$$observers = V());var k = f[e];k !== d && (l = k && b(k, !0, g, h), d = k);l && (f[e] = l(a), (c[e] || (c[e] = [])).$$inter = !0, (f.$$observers && f.$$observers[e].$$scope || a).$watch(l, function (a, b) {
                                        "class" === e && a !== b ? f.$updateClass(a, b) : f.$set(e, a);
                                    }));
                                } };
                        } });
                }
            }function ka(a, b, c) {
                var d = b[0],
                    e = b.length,
                    f = d.parentNode,
                    g,
                    h;if (a) for (g = 0, h = a.length; g < h; g++) {
                    if (a[g] === d) {
                        a[g++] = c;h = g + e - 1;for (var k = a.length; g < k; g++, h++) {
                            h < k ? a[g] = a[h] : delete a[g];
                        }a.length -= e - 1;a.context === d && (a.context = c);break;
                    }
                }f && f.replaceChild(c, d);a = w.document.createDocumentFragment();for (g = 0; g < e; g++) {
                    a.appendChild(b[g]);
                }F.hasData(d) && (F.data(c, F.data(d)), F(d).off("$destroy"));F.cleanData(a.querySelectorAll("*"));for (g = 1; g < e; g++) {
                    delete b[g];
                }b[0] = c;b.length = 1;
            }function ra(a, b) {
                return R(function () {
                    return a.apply(null, arguments);
                }, a, b);
            }function sa(a, b, d, e, f, g) {
                try {
                    a(b, d, e, f, g);
                } catch (h) {
                    c(h, xa(d));
                }
            }function na(a, c, d, e, f) {
                function g(b, c, e) {
                    !E(d.$onChanges) || c === e || c !== c && e !== e || (ia || (a.$$postDigest(T), ia = []), m || (m = {}, ia.push(h)), m[b] && (e = m[b].previousValue), m[b] = new Jb(e, c));
                }function h() {
                    d.$onChanges(m);m = void 0;
                }var k = [],
                    l = {},
                    m;p(e, function (e, h) {
                    var m = e.attrName,
                        q = e.optional,
                        r,
                        B,
                        t,
                        z;switch (e.mode) {case "@":
                            q || ua.call(c, m) || (d[h] = c[m] = void 0);q = c.$observe(m, function (a) {
                                if (D(a) || Ha(a)) g(h, a, d[h]), d[h] = a;
                            });c.$$observers[m].$$scope = a;r = c[m];D(r) ? d[h] = b(r)(a) : Ha(r) && (d[h] = r);l[h] = new Jb(jc, d[h]);k.push(q);break;case "=":
                            if (!ua.call(c, m)) {
                                if (q) break;c[m] = void 0;
                            }if (q && !c[m]) break;B = n(c[m]);z = B.literal ? pa : function (a, b) {
                                return a === b || a !== a && b !== b;
                            };t = B.assign || function () {
                                r = d[h] = B(a);throw fa("nonassign", c[m], m, f.name);
                            };r = d[h] = B(a);q = function q(b) {
                                z(b, d[h]) || (z(b, r) ? t(a, b = d[h]) : d[h] = b);return r = b;
                            };q.$stateful = !0;q = e.collection ? a.$watchCollection(c[m], q) : a.$watch(n(c[m], q), null, B.literal);k.push(q);break;case "<":
                            if (!ua.call(c, m)) {
                                if (q) break;
                                c[m] = void 0;
                            }if (q && !c[m]) break;B = n(c[m]);var C = B.literal,
                                L = d[h] = B(a);l[h] = new Jb(jc, d[h]);q = a.$watch(B, function (a, b) {
                                if (b === a) {
                                    if (b === L || C && pa(b, L)) return;b = L;
                                }g(h, a, b);d[h] = a;
                            }, C);k.push(q);break;case "&":
                            B = c.hasOwnProperty(m) ? n(c[m]) : A;if (B === A && q) break;d[h] = function (b) {
                                return B(a, b);
                            };}
                });return { initialChanges: l, removeWatches: k.length && function () {
                        for (var a = 0, b = k.length; a < b; ++a) {
                            k[a]();
                        }
                    } };
            }var Ca = /^\w/,
                ta = w.document.createElement("div"),
                Fa = N,
                Ga = t,
                ya = I,
                ia;s.prototype = { $normalize: Ba, $addClass: function $addClass(a) {
                    a && 0 < a.length && O.addClass(this.$$element, a);
                }, $removeClass: function $removeClass(a) {
                    a && 0 < a.length && O.removeClass(this.$$element, a);
                }, $updateClass: function $updateClass(a, b) {
                    var c = od(a, b);c && c.length && O.addClass(this.$$element, c);(c = od(b, a)) && c.length && O.removeClass(this.$$element, c);
                }, $set: function $set(a, b, d, e) {
                    var f = gd(this.$$element[0], a),
                        g = pd[a],
                        h = a;f ? (this.$$element.prop(a, b), e = f) : g && (this[g] = b, h = g);this[a] = b;e ? this.$attr[a] = e : (e = this.$attr[a]) || (this.$attr[a] = e = Qc(a, "-"));f = wa(this.$$element);if ("a" === f && ("href" === a || "xlinkHref" === a) || "img" === f && "src" === a) this[a] = b = X(b, "src" === a);else if ("img" === f && "srcset" === a && u(b)) {
                        for (var f = "", g = S(b), k = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/, k = /\s/.test(g) ? k : /(,)/, g = g.split(k), k = Math.floor(g.length / 2), l = 0; l < k; l++) {
                            var m = 2 * l,
                                f = f + X(S(g[m]), !0),
                                f = f + (" " + S(g[m + 1]));
                        }g = S(g[2 * l]).split(/\s/);f += X(S(g[0]), !0);2 === g.length && (f += " " + S(g[1]));this[a] = b = f;
                    }!1 !== d && (null === b || x(b) ? this.$$element.removeAttr(e) : Ca.test(e) ? this.$$element.attr(e, b) : Q(this.$$element[0], e, b));(a = this.$$observers) && p(a[h], function (a) {
                        try {
                            a(b);
                        } catch (d) {
                            c(d);
                        }
                    });
                },
                $observe: function $observe(a, b) {
                    var c = this,
                        d = c.$$observers || (c.$$observers = V()),
                        e = d[a] || (d[a] = []);e.push(b);C.$evalAsync(function () {
                        e.$$inter || !c.hasOwnProperty(a) || x(c[a]) || b(c[a]);
                    });return function () {
                        $a(e, b);
                    };
                } };var Aa = b.startSymbol(),
                Da = b.endSymbol(),
                Ea = "{{" === Aa && "}}" === Da ? Ya : function (a) {
                return a.replace(/\{\{/g, Aa).replace(/}}/g, Da);
            },
                Ja = /^ngAttr[A-Z]/,
                Ka = /^(.+)Start$/;ca.$$addBindingInfo = q ? function (a, b) {
                var c = a.data("$binding") || [];H(b) ? c = c.concat(b) : c.push(b);a.data("$binding", c);
            } : A;ca.$$addBindingClass = q ? function (a) {
                Ma(a, "ng-binding");
            } : A;ca.$$addScopeInfo = q ? function (a, b, c, d) {
                a.data(c ? d ? "$isolateScopeNoTemplate" : "$isolateScope" : "$scope", b);
            } : A;ca.$$addScopeClass = q ? function (a, b) {
                Ma(a, b ? "ng-isolate-scope" : "ng-scope");
            } : A;ca.$$createComment = function (a, b) {
                var c = "";q && (c = " " + (a || "") + ": ", b && (c += b + " "));return w.document.createComment(c);
            };return ca;
        }];
    }function Jb(a, b) {
        this.previousValue = a;this.currentValue = b;
    }function Ba(a) {
        return a.replace(kd, "").replace(rg, gb);
    }function od(a, b) {
        var d = "",
            c = a.split(/\s+/),
            e = b.split(/\s+/),
            f = 0;a: for (; f < c.length; f++) {
            for (var g = c[f], h = 0; h < e.length; h++) {
                if (g === e[h]) continue a;
            }d += (0 < d.length ? " " : "") + g;
        }return d;
    }function nd(a) {
        a = F(a);var b = a.length;if (1 >= b) return a;for (; b--;) {
            var d = a[b];(8 === d.nodeType || d.nodeType === Ia && "" === d.nodeValue.trim()) && sg.call(a, b, 1);
        }return a;
    }function qg(a, b) {
        if (b && D(b)) return b;if (D(a)) {
            var d = qd.exec(a);if (d) return d[3];
        }
    }function wf() {
        var a = {},
            b = !1;this.has = function (b) {
            return a.hasOwnProperty(b);
        };this.register = function (b, c) {
            Ka(b, "controller");G(b) ? R(a, b) : a[b] = c;
        };this.allowGlobals = function () {
            b = !0;
        };this.$get = ["$injector", "$window", function (d, c) {
            function e(a, b, c, d) {
                if (!a || !G(a.$scope)) throw M("$controller")("noscp", d, b);a.$scope[b] = c;
            }return function (f, g, h, k) {
                var l, m, n;h = !0 === h;k && D(k) && (n = k);if (D(f)) {
                    k = f.match(qd);if (!k) throw rd("ctrlfmt", f);m = k[1];n = n || k[3];f = a.hasOwnProperty(m) ? a[m] : Sc(g.$scope, m, !0) || (b ? Sc(c, m, !0) : void 0);if (!f) throw rd("ctrlreg", m);tb(f, m, !0);
                }if (h) return h = (H(f) ? f[f.length - 1] : f).prototype, l = Object.create(h || null), n && e(g, n, l, m || f.name), R(function () {
                    var a = d.invoke(f, l, g, m);a !== l && (G(a) || E(a)) && (l = a, n && e(g, n, l, m || f.name));return l;
                }, { instance: l, identifier: n });l = d.instantiate(f, g, m);n && e(g, n, l, m || f.name);return l;
            };
        }];
    }function xf() {
        this.$get = ["$window", function (a) {
            return F(a.document);
        }];
    }function yf() {
        this.$get = ["$document", "$rootScope", function (a, b) {
            function d() {
                e = c.hidden;
            }var c = a[0],
                e = c && c.hidden;a.on("visibilitychange", d);b.$on("$destroy", function () {
                a.off("visibilitychange", d);
            });return function () {
                return e;
            };
        }];
    }function zf() {
        this.$get = ["$log", function (a) {
            return function (b, d) {
                a.error.apply(a, arguments);
            };
        }];
    }function kc(a) {
        return G(a) ? ga(a) ? a.toISOString() : cb(a) : a;
    }function Ef() {
        this.$get = function () {
            return function (a) {
                if (!a) return "";var b = [];Hc(a, function (a, c) {
                    null === a || x(a) || (H(a) ? p(a, function (a) {
                        b.push($(c) + "=" + $(kc(a)));
                    }) : b.push($(c) + "=" + $(kc(a))));
                });return b.join("&");
            };
        };
    }function Ff() {
        this.$get = function () {
            return function (a) {
                function b(a, e, f) {
                    null === a || x(a) || (H(a) ? p(a, function (a, c) {
                        b(a, e + "[" + (G(a) ? c : "") + "]");
                    }) : G(a) && !ga(a) ? Hc(a, function (a, c) {
                        b(a, e + (f ? "" : "[") + c + (f ? "" : "]"));
                    }) : d.push($(e) + "=" + $(kc(a))));
                }if (!a) return "";var d = [];b(a, "", !0);return d.join("&");
            };
        };
    }function lc(a, b) {
        if (D(a)) {
            var d = a.replace(tg, "").trim();if (d) {
                var c = b("Content-Type");(c = c && 0 === c.indexOf(sd)) || (c = (c = d.match(ug)) && vg[c[0]].test(d));c && (a = Lc(d));
            }
        }return a;
    }function td(a) {
        var b = V(),
            d;D(a) ? p(a.split("\n"), function (a) {
            d = a.indexOf(":");var e = P(S(a.substr(0, d)));a = S(a.substr(d + 1));e && (b[e] = b[e] ? b[e] + ", " + a : a);
        }) : G(a) && p(a, function (a, d) {
            var f = P(d),
                g = S(a);f && (b[f] = b[f] ? b[f] + ", " + g : g);
        });return b;
    }function ud(a) {
        var b;return function (d) {
            b || (b = td(a));return d ? (d = b[P(d)], void 0 === d && (d = null), d) : b;
        };
    }function vd(a, b, d, c) {
        if (E(c)) return c(a, b, d);p(c, function (c) {
            a = c(a, b, d);
        });return a;
    }function Df() {
        var a = this.defaults = { transformResponse: [lc], transformRequest: [function (a) {
                return G(a) && "[object File]" !== ma.call(a) && "[object Blob]" !== ma.call(a) && "[object FormData]" !== ma.call(a) ? cb(a) : a;
            }], headers: { common: { Accept: "application/json, text/plain, */*" }, post: qa(mc), put: qa(mc), patch: qa(mc) },
            xsrfCookieName: "XSRF-TOKEN", xsrfHeaderName: "X-XSRF-TOKEN", paramSerializer: "$httpParamSerializer", jsonpCallbackParam: "callback" },
            b = !1;this.useApplyAsync = function (a) {
            return u(a) ? (b = !!a, this) : b;
        };var d = this.interceptors = [];this.$get = ["$browser", "$httpBackend", "$$cookieReader", "$cacheFactory", "$rootScope", "$q", "$injector", "$sce", function (c, e, f, g, h, k, l, m) {
            function n(b) {
                function d(a, b) {
                    for (var c = 0, e = b.length; c < e;) {
                        var f = b[c++],
                            g = b[c++];a = a.then(f, g);
                    }b.length = 0;return a;
                }function e(a, b) {
                    var c,
                        d = {};p(a, function (a, e) {
                        E(a) ? (c = a(b), null != c && (d[e] = c)) : d[e] = a;
                    });return d;
                }function f(a) {
                    var b = R({}, a);b.data = vd(a.data, a.headers, a.status, g.transformResponse);a = a.status;return 200 <= a && 300 > a ? b : k.reject(b);
                }if (!G(b)) throw M("$http")("badreq", b);if (!D(m.valueOf(b.url))) throw M("$http")("badreq", b.url);var g = R({ method: "get", transformRequest: a.transformRequest, transformResponse: a.transformResponse, paramSerializer: a.paramSerializer, jsonpCallbackParam: a.jsonpCallbackParam }, b);g.headers = function (b) {
                    var c = a.headers,
                        d = R({}, b.headers),
                        f,
                        g,
                        h,
                        c = R({}, c.common, c[P(b.method)]);a: for (f in c) {
                        g = P(f);for (h in d) {
                            if (P(h) === g) continue a;
                        }d[f] = c[f];
                    }return e(d, qa(b));
                }(b);g.method = vb(g.method);g.paramSerializer = D(g.paramSerializer) ? l.get(g.paramSerializer) : g.paramSerializer;c.$$incOutstandingRequestCount();var h = [],
                    n = [];b = k.resolve(g);p(t, function (a) {
                    (a.request || a.requestError) && h.unshift(a.request, a.requestError);(a.response || a.responseError) && n.push(a.response, a.responseError);
                });b = d(b, h);b = b.then(function (b) {
                    var c = b.headers,
                        d = vd(b.data, ud(c), void 0, b.transformRequest);x(d) && p(c, function (a, b) {
                        "content-type" === P(b) && delete c[b];
                    });x(b.withCredentials) && !x(a.withCredentials) && (b.withCredentials = a.withCredentials);return q(b, d).then(f, f);
                });b = d(b, n);return b = b.finally(function () {
                    c.$$completeOutstandingRequest(A);
                });
            }function q(c, d) {
                function g(a) {
                    if (a) {
                        var c = {};p(a, function (a, d) {
                            c[d] = function (c) {
                                function d() {
                                    a(c);
                                }b ? h.$applyAsync(d) : h.$$phase ? d() : h.$apply(d);
                            };
                        });return c;
                    }
                }function l(a, c, d, e) {
                    function f() {
                        q(c, a, d, e);
                    }O && (200 <= a && 300 > a ? O.put(Q, [a, c, td(d), e]) : O.remove(Q));b ? h.$applyAsync(f) : (f(), h.$$phase || h.$apply());
                }function q(a, b, d, e) {
                    b = -1 <= b ? b : 0;(200 <= b && 300 > b ? C.resolve : C.reject)({ data: a, status: b, headers: ud(d), config: c, statusText: e });
                }function J(a) {
                    q(a.data, a.status, qa(a.headers()), a.statusText);
                }function t() {
                    var a = n.pendingRequests.indexOf(c);-1 !== a && n.pendingRequests.splice(a, 1);
                }var C = k.defer(),
                    z = C.promise,
                    O,
                    X,
                    T = c.headers,
                    s = "jsonp" === P(c.method),
                    Q = c.url;s ? Q = m.getTrustedResourceUrl(Q) : D(Q) || (Q = m.valueOf(Q));Q = r(Q, c.paramSerializer(c.params));
                s && (Q = I(Q, c.jsonpCallbackParam));n.pendingRequests.push(c);z.then(t, t);!c.cache && !a.cache || !1 === c.cache || "GET" !== c.method && "JSONP" !== c.method || (O = G(c.cache) ? c.cache : G(a.cache) ? a.cache : N);O && (X = O.get(Q), u(X) ? X && E(X.then) ? X.then(J, J) : H(X) ? q(X[1], X[0], qa(X[2]), X[3]) : q(X, 200, {}, "OK") : O.put(Q, z));x(X) && ((X = wd(c.url) ? f()[c.xsrfCookieName || a.xsrfCookieName] : void 0) && (T[c.xsrfHeaderName || a.xsrfHeaderName] = X), e(c.method, Q, d, l, T, c.timeout, c.withCredentials, c.responseType, g(c.eventHandlers), g(c.uploadEventHandlers)));
                return z;
            }function r(a, b) {
                0 < b.length && (a += (-1 === a.indexOf("?") ? "?" : "&") + b);return a;
            }function I(a, b) {
                if (/[&?][^=]+=JSON_CALLBACK/.test(a)) throw xd("badjsonp", a);if (new RegExp("[&?]" + b + "=").test(a)) throw xd("badjsonp", b, a);return a += (-1 === a.indexOf("?") ? "?" : "&") + b + "=JSON_CALLBACK";
            }var N = g("$http");a.paramSerializer = D(a.paramSerializer) ? l.get(a.paramSerializer) : a.paramSerializer;var t = [];p(d, function (a) {
                t.unshift(D(a) ? l.get(a) : l.invoke(a));
            });n.pendingRequests = [];(function (a) {
                p(arguments, function (a) {
                    n[a] = function (b, c) {
                        return n(R({}, c || {}, { method: a, url: b }));
                    };
                });
            })("get", "delete", "head", "jsonp");(function (a) {
                p(arguments, function (a) {
                    n[a] = function (b, c, d) {
                        return n(R({}, d || {}, { method: a, url: b, data: c }));
                    };
                });
            })("post", "put", "patch");n.defaults = a;return n;
        }];
    }function Hf() {
        this.$get = function () {
            return function () {
                return new w.XMLHttpRequest();
            };
        };
    }function Gf() {
        this.$get = ["$browser", "$jsonpCallbacks", "$document", "$xhrFactory", function (a, b, d, c) {
            return wg(a, c, a.defer, b, d[0]);
        }];
    }function wg(a, b, d, c, e) {
        function f(a, b, d) {
            a = a.replace("JSON_CALLBACK", b);var f = e.createElement("script"),
                _m = null;f.type = "text/javascript";f.src = a;f.async = !0;_m = function m(a) {
                f.removeEventListener("load", _m);f.removeEventListener("error", _m);e.body.removeChild(f);f = null;var g = -1,
                    r = "unknown";a && ("load" !== a.type || c.wasCalled(b) || (a = { type: "error" }), r = a.type, g = "error" === a.type ? 404 : 200);d && d(g, r);
            };f.addEventListener("load", _m);f.addEventListener("error", _m);e.body.appendChild(f);return _m;
        }return function (e, h, k, l, m, n, q, r, I, N) {
            function t() {
                y && y();v && v.abort();
            }h = h || a.url();if ("jsonp" === P(e)) var K = c.createCallback(h),
                y = f(h, K, function (a, b) {
                var e = 200 === a && c.getResponse(K);u(B) && d.cancel(B);y = v = null;l(a, e, "", b);c.removeCallback(K);
            });else {
                var v = b(e, h);v.open(e, h, !0);p(m, function (a, b) {
                    u(a) && v.setRequestHeader(b, a);
                });v.onload = function () {
                    var a = v.statusText || "",
                        b = "response" in v ? v.response : v.responseText,
                        c = 1223 === v.status ? 204 : v.status;0 === c && (c = b ? 200 : "file" === Ca(h).protocol ? 404 : 0);var e = v.getAllResponseHeaders();u(B) && d.cancel(B);y = v = null;l(c, b, e, a);
                };e = function e() {
                    u(B) && d.cancel(B);y = v = null;
                    l(-1, null, null, "");
                };v.onerror = e;v.onabort = e;v.ontimeout = e;p(I, function (a, b) {
                    v.addEventListener(b, a);
                });p(N, function (a, b) {
                    v.upload.addEventListener(b, a);
                });q && (v.withCredentials = !0);if (r) try {
                    v.responseType = r;
                } catch (s) {
                    if ("json" !== r) throw s;
                }v.send(x(k) ? null : k);
            }if (0 < n) var B = d(t, n);else n && E(n.then) && n.then(t);
        };
    }function Bf() {
        var a = "{{",
            b = "}}";this.startSymbol = function (b) {
            return b ? (a = b, this) : a;
        };this.endSymbol = function (a) {
            return a ? (b = a, this) : b;
        };this.$get = ["$parse", "$exceptionHandler", "$sce", function (d, c, e) {
            function f(a) {
                return "\\\\\\" + a;
            }function g(c) {
                return c.replace(n, a).replace(q, b);
            }function h(a, b, c, d) {
                var e = a.$watch(function (a) {
                    e();return d(a);
                }, b, c);return e;
            }function k(f, k, n, q) {
                function K(a) {
                    try {
                        var b = a;a = n ? e.getTrusted(n, b) : e.valueOf(b);return q && !u(a) ? a : $b(a);
                    } catch (d) {
                        c(Da.interr(f, d));
                    }
                }if (!f.length || -1 === f.indexOf(a)) {
                    var y;k || (k = g(f), y = la(k), y.exp = f, y.expressions = [], y.$$watchDelegate = h);return y;
                }q = !!q;var v,
                    p,
                    B = 0,
                    J = [],
                    L = [];y = f.length;for (var C = [], z = []; B < y;) {
                    if (-1 !== (v = f.indexOf(a, B)) && -1 !== (p = f.indexOf(b, v + l))) B !== v && C.push(g(f.substring(B, v))), B = f.substring(v + l, p), J.push(B), L.push(d(B, K)), B = p + m, z.push(C.length), C.push("");else {
                        B !== y && C.push(g(f.substring(B)));break;
                    }
                }n && 1 < C.length && Da.throwNoconcat(f);if (!k || J.length) {
                    var O = function O(a) {
                        for (var b = 0, c = J.length; b < c; b++) {
                            if (q && x(a[b])) return;C[z[b]] = a[b];
                        }return C.join("");
                    };return R(function (a) {
                        var b = 0,
                            d = J.length,
                            e = Array(d);try {
                            for (; b < d; b++) {
                                e[b] = L[b](a);
                            }return O(e);
                        } catch (g) {
                            c(Da.interr(f, g));
                        }
                    }, { exp: f, expressions: J, $$watchDelegate: function $$watchDelegate(a, b) {
                            var c;return a.$watchGroup(L, function (d, e) {
                                var f = O(d);E(b) && b.call(this, f, d !== e ? c : f, a);c = f;
                            });
                        } });
                }
            }var l = a.length,
                m = b.length,
                n = new RegExp(a.replace(/./g, f), "g"),
                q = new RegExp(b.replace(/./g, f), "g");k.startSymbol = function () {
                return a;
            };k.endSymbol = function () {
                return b;
            };return k;
        }];
    }function Cf() {
        this.$get = ["$rootScope", "$window", "$q", "$$q", "$browser", function (a, b, d, c, e) {
            function f(f, k, l, m) {
                function n() {
                    q ? f.apply(null, r) : f(t);
                }var q = 4 < arguments.length,
                    r = q ? va.call(arguments, 4) : [],
                    I = b.setInterval,
                    p = b.clearInterval,
                    t = 0,
                    K = u(m) && !m,
                    y = (K ? c : d).defer(),
                    v = y.promise;l = u(l) ? l : 0;v.$$intervalId = I(function () {
                    K ? e.defer(n) : a.$evalAsync(n);y.notify(t++);0 < l && t >= l && (y.resolve(t), p(v.$$intervalId), delete g[v.$$intervalId]);K || a.$apply();
                }, k);g[v.$$intervalId] = y;return v;
            }var g = {};f.cancel = function (a) {
                return a && a.$$intervalId in g ? (g[a.$$intervalId].promise.catch(A), g[a.$$intervalId].reject("canceled"), b.clearInterval(a.$$intervalId), delete g[a.$$intervalId], !0) : !1;
            };return f;
        }];
    }function nc(a) {
        a = a.split("/");for (var b = a.length; b--;) {
            a[b] = db(a[b]);
        }return a.join("/");
    }function yd(a, b) {
        var d = Ca(a);b.$$protocol = d.protocol;b.$$host = d.hostname;b.$$port = Z(d.port) || xg[d.protocol] || null;
    }function zd(a, b) {
        if (yg.test(a)) throw lb("badpath", a);var d = "/" !== a.charAt(0);d && (a = "/" + a);var c = Ca(a);b.$$path = decodeURIComponent(d && "/" === c.pathname.charAt(0) ? c.pathname.substring(1) : c.pathname);b.$$search = Oc(c.search);b.$$hash = decodeURIComponent(c.hash);b.$$path && "/" !== b.$$path.charAt(0) && (b.$$path = "/" + b.$$path);
    }function oc(a, b) {
        return a.slice(0, b.length) === b;
    }function ka(a, b) {
        if (oc(b, a)) return b.substr(a.length);
    }function Aa(a) {
        var b = a.indexOf("#");return -1 === b ? a : a.substr(0, b);
    }function mb(a) {
        return a.replace(/(#.+)|#$/, "$1");
    }function pc(a, b, d) {
        this.$$html5 = !0;d = d || "";yd(a, this);this.$$parse = function (a) {
            var d = ka(b, a);if (!D(d)) throw lb("ipthprfx", a, b);zd(d, this);this.$$path || (this.$$path = "/");this.$$compose();
        };this.$$compose = function () {
            var a = Zb(this.$$search),
                d = this.$$hash ? "#" + db(this.$$hash) : "";this.$$url = nc(this.$$path) + (a ? "?" + a : "") + d;this.$$absUrl = b + this.$$url.substr(1);this.$$urlUpdatedByLocation = !0;
        };this.$$parseLinkUrl = function (c, e) {
            if (e && "#" === e[0]) return this.hash(e.slice(1)), !0;var f, g;u(f = ka(a, c)) ? (g = f, g = d && u(f = ka(d, f)) ? b + (ka("/", f) || f) : a + g) : u(f = ka(b, c)) ? g = b + f : b === c + "/" && (g = b);g && this.$$parse(g);return !!g;
        };
    }function qc(a, b, d) {
        yd(a, this);this.$$parse = function (c) {
            var e = ka(a, c) || ka(b, c),
                f;x(e) || "#" !== e.charAt(0) ? this.$$html5 ? f = e : (f = "", x(e) && (a = c, this.replace())) : (f = ka(d, e), x(f) && (f = e));zd(f, this);c = this.$$path;var e = a,
                g = /^\/[A-Z]:(\/.*)/;oc(f, e) && (f = f.replace(e, ""));g.exec(f) || (c = (f = g.exec(c)) ? f[1] : c);this.$$path = c;this.$$compose();
        };this.$$compose = function () {
            var b = Zb(this.$$search),
                e = this.$$hash ? "#" + db(this.$$hash) : "";this.$$url = nc(this.$$path) + (b ? "?" + b : "") + e;this.$$absUrl = a + (this.$$url ? d + this.$$url : "");this.$$urlUpdatedByLocation = !0;
        };this.$$parseLinkUrl = function (b, d) {
            return Aa(a) === Aa(b) ? (this.$$parse(b), !0) : !1;
        };
    }function Ad(a, b, d) {
        this.$$html5 = !0;qc.apply(this, arguments);this.$$parseLinkUrl = function (c, e) {
            if (e && "#" === e[0]) return this.hash(e.slice(1)), !0;var f, g;a === Aa(c) ? f = c : (g = ka(b, c)) ? f = a + d + g : b === c + "/" && (f = b);f && this.$$parse(f);return !!f;
        };this.$$compose = function () {
            var b = Zb(this.$$search),
                e = this.$$hash ? "#" + db(this.$$hash) : "";this.$$url = nc(this.$$path) + (b ? "?" + b : "") + e;this.$$absUrl = a + d + this.$$url;this.$$urlUpdatedByLocation = !0;
        };
    }function Kb(a) {
        return function () {
            return this[a];
        };
    }function Bd(a, b) {
        return function (d) {
            if (x(d)) return this[a];this[a] = b(d);this.$$compose();return this;
        };
    }function Jf() {
        var a = "!",
            b = { enabled: !1, requireBase: !0, rewriteLinks: !0 };
        this.hashPrefix = function (b) {
            return u(b) ? (a = b, this) : a;
        };this.html5Mode = function (a) {
            if (Ha(a)) return b.enabled = a, this;if (G(a)) {
                Ha(a.enabled) && (b.enabled = a.enabled);Ha(a.requireBase) && (b.requireBase = a.requireBase);if (Ha(a.rewriteLinks) || D(a.rewriteLinks)) b.rewriteLinks = a.rewriteLinks;return this;
            }return b;
        };this.$get = ["$rootScope", "$browser", "$sniffer", "$rootElement", "$window", function (d, c, e, f, g) {
            function h(a, b, d) {
                var e = l.url(),
                    f = l.$$state;try {
                    c.url(a, b, d), l.$$state = c.state();
                } catch (g) {
                    throw l.url(e), l.$$state = f, g;
                }
            }function k(a, b) {
                d.$broadcast("$locationChangeSuccess", l.absUrl(), a, l.$$state, b);
            }var l, m;m = c.baseHref();var n = c.url(),
                q;if (b.enabled) {
                if (!m && b.requireBase) throw lb("nobase");q = n.substring(0, n.indexOf("/", n.indexOf("//") + 2)) + (m || "/");m = e.history ? pc : Ad;
            } else q = Aa(n), m = qc;var r = q.substr(0, Aa(q).lastIndexOf("/") + 1);l = new m(q, r, "#" + a);l.$$parseLinkUrl(n, n);l.$$state = c.state();var I = /^\s*(javascript|mailto):/i;f.on("click", function (a) {
                var e = b.rewriteLinks;if (e && !a.ctrlKey && !a.metaKey && !a.shiftKey && 2 !== a.which && 2 !== a.button) {
                    for (var h = F(a.target); "a" !== wa(h[0]);) {
                        if (h[0] === f[0] || !(h = h.parent())[0]) return;
                    }if (!D(e) || !x(h.attr(e))) {
                        var e = h.prop("href"),
                            k = h.attr("href") || h.attr("xlink:href");G(e) && "[object SVGAnimatedString]" === e.toString() && (e = Ca(e.animVal).href);I.test(e) || !e || h.attr("target") || a.isDefaultPrevented() || !l.$$parseLinkUrl(e, k) || (a.preventDefault(), l.absUrl() !== c.url() && (d.$apply(), g.angular["ff-684208-preventDefault"] = !0));
                    }
                }
            });mb(l.absUrl()) !== mb(n) && c.url(l.absUrl(), !0);var p = !0;
            c.onUrlChange(function (a, b) {
                oc(a, r) ? (d.$evalAsync(function () {
                    var c = l.absUrl(),
                        e = l.$$state,
                        f;a = mb(a);l.$$parse(a);l.$$state = b;f = d.$broadcast("$locationChangeStart", a, c, b, e).defaultPrevented;l.absUrl() === a && (f ? (l.$$parse(c), l.$$state = e, h(c, !1, e)) : (p = !1, k(c, e)));
                }), d.$$phase || d.$digest()) : g.location.href = a;
            });d.$watch(function () {
                if (p || l.$$urlUpdatedByLocation) {
                    l.$$urlUpdatedByLocation = !1;var a = mb(c.url()),
                        b = mb(l.absUrl()),
                        f = c.state(),
                        g = l.$$replace,
                        m = a !== b || l.$$html5 && e.history && f !== l.$$state;if (p || m) p = !1, d.$evalAsync(function () {
                        var b = l.absUrl(),
                            c = d.$broadcast("$locationChangeStart", b, a, l.$$state, f).defaultPrevented;l.absUrl() === b && (c ? (l.$$parse(a), l.$$state = f) : (m && h(b, g, f === l.$$state ? null : l.$$state), k(a, f)));
                    });
                }l.$$replace = !1;
            });return l;
        }];
    }function Kf() {
        var a = !0,
            b = this;this.debugEnabled = function (b) {
            return u(b) ? (a = b, this) : a;
        };this.$get = ["$window", function (d) {
            function c(a) {
                a instanceof Error && (a.stack && f ? a = a.message && -1 === a.stack.indexOf(a.message) ? "Error: " + a.message + "\n" + a.stack : a.stack : a.sourceURL && (a = a.message + "\n" + a.sourceURL + ":" + a.line));return a;
            }function e(a) {
                var b = d.console || {},
                    e = b[a] || b.log || A;a = !1;try {
                    a = !!e.apply;
                } catch (f) {}return a ? function () {
                    var a = [];p(arguments, function (b) {
                        a.push(c(b));
                    });return e.apply(b, a);
                } : function (a, b) {
                    e(a, null == b ? "" : b);
                };
            }var f = za || /\bEdge\//.test(d.navigator && d.navigator.userAgent);return { log: e("log"), info: e("info"), warn: e("warn"), error: e("error"), debug: function () {
                    var c = e("debug");return function () {
                        a && c.apply(b, arguments);
                    };
                }() };
        }];
    }function zg(a) {
        return a + "";
    }function Ag(a, b) {
        return "undefined" !== typeof a ? a : b;
    }function Cd(a, b) {
        return "undefined" === typeof a ? b : "undefined" === typeof b ? a : a + b;
    }function U(a, b) {
        var d, c, e;switch (a.type) {case s.Program:
                d = !0;p(a.body, function (a) {
                    U(a.expression, b);d = d && a.expression.constant;
                });a.constant = d;break;case s.Literal:
                a.constant = !0;a.toWatch = [];break;case s.UnaryExpression:
                U(a.argument, b);a.constant = a.argument.constant;a.toWatch = a.argument.toWatch;break;case s.BinaryExpression:
                U(a.left, b);U(a.right, b);a.constant = a.left.constant && a.right.constant;
                a.toWatch = a.left.toWatch.concat(a.right.toWatch);break;case s.LogicalExpression:
                U(a.left, b);U(a.right, b);a.constant = a.left.constant && a.right.constant;a.toWatch = a.constant ? [] : [a];break;case s.ConditionalExpression:
                U(a.test, b);U(a.alternate, b);U(a.consequent, b);a.constant = a.test.constant && a.alternate.constant && a.consequent.constant;a.toWatch = a.constant ? [] : [a];break;case s.Identifier:
                a.constant = !1;a.toWatch = [a];break;case s.MemberExpression:
                U(a.object, b);a.computed && U(a.property, b);a.constant = a.object.constant && (!a.computed || a.property.constant);a.toWatch = [a];break;case s.CallExpression:
                d = e = a.filter ? !b(a.callee.name).$stateful : !1;c = [];p(a.arguments, function (a) {
                    U(a, b);d = d && a.constant;a.constant || c.push.apply(c, a.toWatch);
                });a.constant = d;a.toWatch = e ? c : [a];break;case s.AssignmentExpression:
                U(a.left, b);U(a.right, b);a.constant = a.left.constant && a.right.constant;a.toWatch = [a];break;case s.ArrayExpression:
                d = !0;c = [];p(a.elements, function (a) {
                    U(a, b);d = d && a.constant;a.constant || c.push.apply(c, a.toWatch);
                });a.constant = d;a.toWatch = c;break;case s.ObjectExpression:
                d = !0;c = [];p(a.properties, function (a) {
                    U(a.value, b);d = d && a.value.constant && !a.computed;a.value.constant || c.push.apply(c, a.value.toWatch);a.computed && (U(a.key, b), a.key.constant || c.push.apply(c, a.key.toWatch));
                });a.constant = d;a.toWatch = c;break;case s.ThisExpression:
                a.constant = !1;a.toWatch = [];break;case s.LocalsExpression:
                a.constant = !1, a.toWatch = [];}
    }function Dd(a) {
        if (1 === a.length) {
            a = a[0].expression;var b = a.toWatch;return 1 !== b.length ? b : b[0] !== a ? b : void 0;
        }
    }function Ed(a) {
        return a.type === s.Identifier || a.type === s.MemberExpression;
    }function Fd(a) {
        if (1 === a.body.length && Ed(a.body[0].expression)) return { type: s.AssignmentExpression, left: a.body[0].expression, right: { type: s.NGValueParameter }, operator: "=" };
    }function Gd(a) {
        return 0 === a.body.length || 1 === a.body.length && (a.body[0].expression.type === s.Literal || a.body[0].expression.type === s.ArrayExpression || a.body[0].expression.type === s.ObjectExpression);
    }function Hd(a, b) {
        this.astBuilder = a;this.$filter = b;
    }function Id(a, b) {
        this.astBuilder = a;this.$filter = b;
    }function rc(a) {
        return E(a.valueOf) ? a.valueOf() : Bg.call(a);
    }function Lf() {
        var a = V(),
            b = { "true": !0, "false": !1, "null": null, undefined: void 0 },
            d,
            c;this.addLiteral = function (a, c) {
            b[a] = c;
        };this.setIdentifierFns = function (a, b) {
            d = a;c = b;return this;
        };this.$get = ["$filter", function (e) {
            function f(a, b, c) {
                return null == a || null == b ? a === b : "object" !== (typeof a === "undefined" ? "undefined" : _typeof(a)) || c || (a = rc(a), "object" !== (typeof a === "undefined" ? "undefined" : _typeof(a))) ? a === b || a !== a && b !== b : !1;
            }function g(a, b, c, d, e) {
                var g = d.inputs,
                    h;if (1 === g.length) {
                    var k = f,
                        g = g[0];return a.$watch(function (a) {
                        var b = g(a);
                        f(b, k, d.literal) || (h = d(a, void 0, void 0, [b]), k = b && rc(b));return h;
                    }, b, c, e);
                }for (var l = [], m = [], n = 0, L = g.length; n < L; n++) {
                    l[n] = f, m[n] = null;
                }return a.$watch(function (a) {
                    for (var b = !1, c = 0, e = g.length; c < e; c++) {
                        var k = g[c](a);if (b || (b = !f(k, l[c], d.literal))) m[c] = k, l[c] = k && rc(k);
                    }b && (h = d(a, void 0, void 0, m));return h;
                }, b, c, e);
            }function h(a, b, c, d, e) {
                function f(a) {
                    return d(a);
                }function h(a, c, d) {
                    l = a;E(b) && b(a, c, d);u(a) && d.$$postDigest(function () {
                        u(l) && k();
                    });
                }var k, l;return k = d.inputs ? g(a, h, c, d, e) : a.$watch(f, h, c);
            }function k(a, b, c, d) {
                function e(a) {
                    var b = !0;p(a, function (a) {
                        u(a) || (b = !1);
                    });return b;
                }var f, g;return f = a.$watch(function (a) {
                    return d(a);
                }, function (a, c, d) {
                    g = a;E(b) && b(a, c, d);e(a) && d.$$postDigest(function () {
                        e(g) && f();
                    });
                }, c);
            }function l(a, b, c, d) {
                var e = a.$watch(function (a) {
                    e();return d(a);
                }, b, c);return e;
            }function m(a, b) {
                if (!b) return a;var c = a.$$watchDelegate,
                    d = !1,
                    c = c !== k && c !== h ? function (c, e, f, g) {
                    f = d && g ? g[0] : a(c, e, f, g);return b(f, c, e);
                } : function (c, d, e, f) {
                    e = a(c, d, e, f);c = b(e, c, d);return u(e) ? c : e;
                },
                    d = !a.inputs;a.$$watchDelegate && a.$$watchDelegate !== g ? (c.$$watchDelegate = a.$$watchDelegate, c.inputs = a.inputs) : b.$stateful || (c.$$watchDelegate = g, c.inputs = a.inputs ? a.inputs : [a]);return c;
            }var n = { csp: Ga().noUnsafeEval, literals: sa(b), isIdentifierStart: E(d) && d, isIdentifierContinue: E(c) && c };return function (b, c) {
                var d, f, p;switch (typeof b === "undefined" ? "undefined" : _typeof(b)) {case "string":
                        return p = b = b.trim(), d = a[p], d || (":" === b.charAt(0) && ":" === b.charAt(1) && (f = !0, b = b.substring(2)), d = new sc(n), d = new tc(d, e, n).parse(b), d.constant ? d.$$watchDelegate = l : f ? d.$$watchDelegate = d.literal ? k : h : d.inputs && (d.$$watchDelegate = g), a[p] = d), m(d, c);case "function":
                        return m(b, c);default:
                        return m(A, c);}
            };
        }];
    }function Nf() {
        var a = !0;this.$get = ["$rootScope", "$exceptionHandler", function (b, d) {
            return Jd(function (a) {
                b.$evalAsync(a);
            }, d, a);
        }];this.errorOnUnhandledRejections = function (b) {
            return u(b) ? (a = b, this) : a;
        };
    }function Of() {
        var a = !0;this.$get = ["$browser", "$exceptionHandler", function (b, d) {
            return Jd(function (a) {
                b.defer(a);
            }, d, a);
        }];this.errorOnUnhandledRejections = function (b) {
            return u(b) ? (a = b, this) : a;
        };
    }function Jd(a, b, d) {
        function c() {
            return new e();
        }function e() {
            var a = this.promise = new f();this.resolve = function (b) {
                k(a, b);
            };this.reject = function (b) {
                m(a, b);
            };this.notify = function (b) {
                q(a, b);
            };
        }function f() {
            this.$$state = { status: 0 };
        }function g() {
            for (; !y && v.length;) {
                var a = v.shift();if (!a.pur) {
                    a.pur = !0;var c = a.value,
                        c = "Possibly unhandled rejection: " + ("function" === typeof c ? c.toString().replace(/ \{[\s\S]*$/, "") : x(c) ? "undefined" : "string" !== typeof c ? Be(c, void 0) : c);a.value instanceof Error ? b(a.value, c) : b(c);
                }
            }
        }function h(b) {
            !d || b.pending || 2 !== b.status || b.pur || (0 === y && 0 === v.length && a(g), v.push(b));!b.processScheduled && b.pending && (b.processScheduled = !0, ++y, a(function () {
                var c, e, f;f = b.pending;b.processScheduled = !1;b.pending = void 0;try {
                    for (var h = 0, l = f.length; h < l; ++h) {
                        b.pur = !0;e = f[h][0];c = f[h][b.status];try {
                            E(c) ? k(e, c(b.value)) : 1 === b.status ? k(e, b.value) : m(e, b.value);
                        } catch (n) {
                            m(e, n);
                        }
                    }
                } finally {
                    --y, d && 0 === y && a(g);
                }
            }));
        }function k(a, b) {
            a.$$state.status || (b === a ? n(a, K("qcycle", b)) : l(a, b));
        }function l(a, b) {
            function c(b) {
                g || (g = !0, l(a, b));
            }function d(b) {
                g || (g = !0, n(a, b));
            }function e(b) {
                q(a, b);
            }var f,
                g = !1;try {
                if (G(b) || E(b)) f = b.then;E(f) ? (a.$$state.status = -1, f.call(b, c, d, e)) : (a.$$state.value = b, a.$$state.status = 1, h(a.$$state));
            } catch (k) {
                d(k);
            }
        }function m(a, b) {
            a.$$state.status || n(a, b);
        }function n(a, b) {
            a.$$state.value = b;a.$$state.status = 2;h(a.$$state);
        }function q(c, d) {
            var e = c.$$state.pending;0 >= c.$$state.status && e && e.length && a(function () {
                for (var a, c, f = 0, g = e.length; f < g; f++) {
                    c = e[f][0];a = e[f][3];try {
                        q(c, E(a) ? a(d) : d);
                    } catch (h) {
                        b(h);
                    }
                }
            });
        }function r(a) {
            var b = new f();m(b, a);return b;
        }function I(a, b, c) {
            var d = null;try {
                E(c) && (d = c());
            } catch (e) {
                return r(e);
            }return d && E(d.then) ? d.then(function () {
                return b(a);
            }, r) : b(a);
        }function s(a, b, c, d) {
            var e = new f();k(e, a);return e.then(b, c, d);
        }function t(a) {
            if (!E(a)) throw K("norslvr", a);var b = new f();a(function (a) {
                k(b, a);
            }, function (a) {
                m(b, a);
            });return b;
        }var K = M("$q", TypeError),
            y = 0,
            v = [];R(f.prototype, { then: function then(a, b, c) {
                if (x(a) && x(b) && x(c)) return this;var d = new f();this.$$state.pending = this.$$state.pending || [];this.$$state.pending.push([d, a, b, c]);
                0 < this.$$state.status && h(this.$$state);return d;
            }, "catch": function _catch(a) {
                return this.then(null, a);
            }, "finally": function _finally(a, b) {
                return this.then(function (b) {
                    return I(b, u, a);
                }, function (b) {
                    return I(b, r, a);
                }, b);
            } });var u = s;t.prototype = f.prototype;t.defer = c;t.reject = r;t.when = s;t.resolve = u;t.all = function (a) {
            var b = new f(),
                c = 0,
                d = H(a) ? [] : {};p(a, function (a, e) {
                c++;s(a).then(function (a) {
                    d[e] = a;--c || k(b, d);
                }, function (a) {
                    m(b, a);
                });
            });0 === c && k(b, d);return b;
        };t.race = function (a) {
            var b = c();p(a, function (a) {
                s(a).then(b.resolve, b.reject);
            });
            return b.promise;
        };return t;
    }function Xf() {
        this.$get = ["$window", "$timeout", function (a, b) {
            var d = a.requestAnimationFrame || a.webkitRequestAnimationFrame,
                c = a.cancelAnimationFrame || a.webkitCancelAnimationFrame || a.webkitCancelRequestAnimationFrame,
                e = !!d,
                f = e ? function (a) {
                var b = d(a);return function () {
                    c(b);
                };
            } : function (a) {
                var c = b(a, 16.66, !1);return function () {
                    b.cancel(c);
                };
            };f.supported = e;return f;
        }];
    }function Mf() {
        function a(a) {
            function b() {
                this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null;
                this.$$listeners = {};this.$$listenerCount = {};this.$$watchersCount = 0;this.$id = ++rb;this.$$ChildScope = null;
            }b.prototype = a;return b;
        }var b = 10,
            d = M("$rootScope"),
            c = null,
            e = null;this.digestTtl = function (a) {
            arguments.length && (b = a);return b;
        };this.$get = ["$exceptionHandler", "$parse", "$browser", function (f, g, h) {
            function k(a) {
                a.currentScope.$$destroyed = !0;
            }function l(a) {
                9 === za && (a.$$childHead && l(a.$$childHead), a.$$nextSibling && l(a.$$nextSibling));a.$parent = a.$$nextSibling = a.$$prevSibling = a.$$childHead = a.$$childTail = a.$root = a.$$watchers = null;
            }function m() {
                this.$id = ++rb;this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null;this.$root = this;this.$$destroyed = !1;this.$$listeners = {};this.$$listenerCount = {};this.$$watchersCount = 0;this.$$isolateBindings = null;
            }function n(a) {
                if (K.$$phase) throw d("inprog", K.$$phase);K.$$phase = a;
            }function q(a, b) {
                do {
                    a.$$watchersCount += b;
                } while (a = a.$parent);
            }function r(a, b, c) {
                do {
                    a.$$listenerCount[c] -= b, 0 === a.$$listenerCount[c] && delete a.$$listenerCount[c];
                } while (a = a.$parent);
            }function I() {}function s() {
                for (; u.length;) {
                    try {
                        u.shift()();
                    } catch (a) {
                        f(a);
                    }
                }e = null;
            }function t() {
                null === e && (e = h.defer(function () {
                    K.$apply(s);
                }));
            }m.prototype = { constructor: m, $new: function $new(b, c) {
                    var d;c = c || this;b ? (d = new m(), d.$root = this.$root) : (this.$$ChildScope || (this.$$ChildScope = a(this)), d = new this.$$ChildScope());d.$parent = c;d.$$prevSibling = c.$$childTail;c.$$childHead ? (c.$$childTail.$$nextSibling = d, c.$$childTail = d) : c.$$childHead = c.$$childTail = d;(b || c !== this) && d.$on("$destroy", k);return d;
                },
                $watch: function $watch(a, b, d, e) {
                    var f = g(a);if (f.$$watchDelegate) return f.$$watchDelegate(this, b, d, f, a);var h = this,
                        k = h.$$watchers,
                        l = { fn: b, last: I, get: f, exp: e || a, eq: !!d };c = null;E(b) || (l.fn = A);k || (k = h.$$watchers = [], k.$$digestWatchIndex = -1);k.unshift(l);k.$$digestWatchIndex++;q(this, 1);return function () {
                        var a = $a(k, l);0 <= a && (q(h, -1), a < k.$$digestWatchIndex && k.$$digestWatchIndex--);c = null;
                    };
                }, $watchGroup: function $watchGroup(a, b) {
                    function c() {
                        h = !1;k ? (k = !1, b(e, e, g)) : b(e, d, g);
                    }var d = Array(a.length),
                        e = Array(a.length),
                        f = [],
                        g = this,
                        h = !1,
                        k = !0;if (!a.length) {
                        var l = !0;g.$evalAsync(function () {
                            l && b(e, e, g);
                        });return function () {
                            l = !1;
                        };
                    }if (1 === a.length) return this.$watch(a[0], function (a, c, f) {
                        e[0] = a;d[0] = c;b(e, a === c ? e : d, f);
                    });p(a, function (a, b) {
                        var k = g.$watch(a, function (a, f) {
                            e[b] = a;d[b] = f;h || (h = !0, g.$evalAsync(c));
                        });f.push(k);
                    });return function () {
                        for (; f.length;) {
                            f.shift()();
                        }
                    };
                }, $watchCollection: function $watchCollection(a, b) {
                    function c(a) {
                        e = a;var b, d, g, h;if (!x(e)) {
                            if (G(e)) {
                                if (ra(e)) for (f !== n && (f = n, p = f.length = 0, l++), a = e.length, p !== a && (l++, f.length = p = a), b = 0; b < a; b++) {
                                    h = f[b], g = e[b], d = h !== h && g !== g, d || h === g || (l++, f[b] = g);
                                } else {
                                    f !== q && (f = q = {}, p = 0, l++);a = 0;for (b in e) {
                                        ua.call(e, b) && (a++, g = e[b], h = f[b], b in f ? (d = h !== h && g !== g, d || h === g || (l++, f[b] = g)) : (p++, f[b] = g, l++));
                                    }if (p > a) for (b in l++, f) {
                                        ua.call(e, b) || (p--, delete f[b]);
                                    }
                                }
                            } else f !== e && (f = e, l++);return l;
                        }
                    }c.$stateful = !0;var d = this,
                        e,
                        f,
                        h,
                        k = 1 < b.length,
                        l = 0,
                        m = g(a, c),
                        n = [],
                        q = {},
                        r = !0,
                        p = 0;return this.$watch(m, function () {
                        r ? (r = !1, b(e, e, d)) : b(e, h, d);if (k) if (G(e)) {
                            if (ra(e)) {
                                h = Array(e.length);for (var a = 0; a < e.length; a++) {
                                    h[a] = e[a];
                                }
                            } else for (a in h = {}, e) {
                                ua.call(e, a) && (h[a] = e[a]);
                            }
                        } else h = e;
                    });
                }, $digest: function $digest() {
                    var a,
                        g,
                        k,
                        l,
                        m,
                        q,
                        r,
                        p = b,
                        t,
                        u = [],
                        x,
                        w;n("$digest");h.$$checkUrlChange();this === K && null !== e && (h.defer.cancel(e), s());c = null;do {
                        r = !1;t = this;for (q = 0; q < y.length; q++) {
                            try {
                                w = y[q], l = w.fn, l(w.scope, w.locals);
                            } catch (A) {
                                f(A);
                            }c = null;
                        }y.length = 0;a: do {
                            if (q = t.$$watchers) for (q.$$digestWatchIndex = q.length; q.$$digestWatchIndex--;) {
                                try {
                                    if (a = q[q.$$digestWatchIndex]) if (m = a.get, (g = m(t)) !== (k = a.last) && !(a.eq ? pa(g, k) : da(g) && da(k))) r = !0, c = a, a.last = a.eq ? sa(g, null) : g, l = a.fn, l(g, k === I ? g : k, t), 5 > p && (x = 4 - p, u[x] || (u[x] = []), u[x].push({ msg: E(a.exp) ? "fn: " + (a.exp.name || a.exp.toString()) : a.exp, newVal: g, oldVal: k }));else if (a === c) {
                                        r = !1;break a;
                                    }
                                } catch (F) {
                                    f(F);
                                }
                            }if (!(q = t.$$watchersCount && t.$$childHead || t !== this && t.$$nextSibling)) for (; t !== this && !(q = t.$$nextSibling);) {
                                t = t.$parent;
                            }
                        } while (t = q);if ((r || y.length) && !p--) throw K.$$phase = null, d("infdig", b, u);
                    } while (r || y.length);for (K.$$phase = null; B < v.length;) {
                        try {
                            v[B++]();
                        } catch (La) {
                            f(La);
                        }
                    }v.length = B = 0;h.$$checkUrlChange();
                }, $destroy: function $destroy() {
                    if (!this.$$destroyed) {
                        var a = this.$parent;this.$broadcast("$destroy");this.$$destroyed = !0;this === K && h.$$applicationDestroyed();q(this, -this.$$watchersCount);for (var b in this.$$listenerCount) {
                            r(this, this.$$listenerCount[b], b);
                        }a && a.$$childHead === this && (a.$$childHead = this.$$nextSibling);a && a.$$childTail === this && (a.$$childTail = this.$$prevSibling);this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling);this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling);this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = A;this.$on = this.$watch = this.$watchGroup = function () {
                            return A;
                        };this.$$listeners = {};this.$$nextSibling = null;l(this);
                    }
                }, $eval: function $eval(a, b) {
                    return g(a)(this, b);
                }, $evalAsync: function $evalAsync(a, b) {
                    K.$$phase || y.length || h.defer(function () {
                        y.length && K.$digest();
                    });y.push({ scope: this, fn: g(a), locals: b });
                }, $$postDigest: function $$postDigest(a) {
                    v.push(a);
                }, $apply: function $apply(a) {
                    try {
                        n("$apply");try {
                            return this.$eval(a);
                        } finally {
                            K.$$phase = null;
                        }
                    } catch (b) {
                        f(b);
                    } finally {
                        try {
                            K.$digest();
                        } catch (c) {
                            throw f(c), c;
                        }
                    }
                },
                $applyAsync: function $applyAsync(a) {
                    function b() {
                        c.$eval(a);
                    }var c = this;a && u.push(b);a = g(a);t();
                }, $on: function $on(a, b) {
                    var c = this.$$listeners[a];c || (this.$$listeners[a] = c = []);c.push(b);var d = this;do {
                        d.$$listenerCount[a] || (d.$$listenerCount[a] = 0), d.$$listenerCount[a]++;
                    } while (d = d.$parent);var e = this;return function () {
                        var d = c.indexOf(b);-1 !== d && (c[d] = null, r(e, 1, a));
                    };
                }, $emit: function $emit(a, b) {
                    var c = [],
                        d,
                        e = this,
                        g = !1,
                        h = { name: a, targetScope: e, stopPropagation: function stopPropagation() {
                            g = !0;
                        }, preventDefault: function preventDefault() {
                            h.defaultPrevented = !0;
                        }, defaultPrevented: !1 },
                        k = ab([h], arguments, 1),
                        l,
                        m;do {
                        d = e.$$listeners[a] || c;h.currentScope = e;l = 0;for (m = d.length; l < m; l++) {
                            if (d[l]) try {
                                d[l].apply(null, k);
                            } catch (n) {
                                f(n);
                            } else d.splice(l, 1), l--, m--;
                        }if (g) return h.currentScope = null, h;e = e.$parent;
                    } while (e);h.currentScope = null;return h;
                }, $broadcast: function $broadcast(a, b) {
                    var c = this,
                        d = this,
                        e = { name: a, targetScope: this, preventDefault: function preventDefault() {
                            e.defaultPrevented = !0;
                        }, defaultPrevented: !1 };if (!this.$$listenerCount[a]) return e;for (var g = ab([e], arguments, 1), h, k; c = d;) {
                        e.currentScope = c;d = c.$$listeners[a] || [];h = 0;for (k = d.length; h < k; h++) {
                            if (d[h]) try {
                                d[h].apply(null, g);
                            } catch (l) {
                                f(l);
                            } else d.splice(h, 1), h--, k--;
                        }if (!(d = c.$$listenerCount[a] && c.$$childHead || c !== this && c.$$nextSibling)) for (; c !== this && !(d = c.$$nextSibling);) {
                            c = c.$parent;
                        }
                    }e.currentScope = null;return e;
                } };var K = new m(),
                y = K.$$asyncQueue = [],
                v = K.$$postDigestQueue = [],
                u = K.$$applyAsyncQueue = [],
                B = 0;return K;
        }];
    }function Ee() {
        var a = /^\s*(https?|ftp|mailto|tel|file):/,
            b = /^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist = function (b) {
            return u(b) ? (a = b, this) : a;
        };this.imgSrcSanitizationWhitelist = function (a) {
            return u(a) ? (b = a, this) : b;
        };this.$get = function () {
            return function (d, c) {
                var e = c ? b : a,
                    f;f = Ca(d).href;return "" === f || f.match(e) ? d : "unsafe:" + f;
            };
        };
    }function Cg(a) {
        if ("self" === a) return a;if (D(a)) {
            if (-1 < a.indexOf("***")) throw ta("iwcard", a);a = Kd(a).replace(/\\\*\\\*/g, ".*").replace(/\\\*/g, "[^:/.?&;]*");return new RegExp("^" + a + "$");
        }if (Xa(a)) return new RegExp("^" + a.source + "$");throw ta("imatcher");
    }function Ld(a) {
        var b = [];u(a) && p(a, function (a) {
            b.push(Cg(a));
        });
        return b;
    }function Qf() {
        this.SCE_CONTEXTS = oa;var a = ["self"],
            b = [];this.resourceUrlWhitelist = function (b) {
            arguments.length && (a = Ld(b));return a;
        };this.resourceUrlBlacklist = function (a) {
            arguments.length && (b = Ld(a));return b;
        };this.$get = ["$injector", function (d) {
            function c(a, b) {
                return "self" === a ? wd(b) : !!a.exec(b.href);
            }function e(a) {
                var b = function b(a) {
                    this.$$unwrapTrustedValue = function () {
                        return a;
                    };
                };a && (b.prototype = new a());b.prototype.valueOf = function () {
                    return this.$$unwrapTrustedValue();
                };b.prototype.toString = function () {
                    return this.$$unwrapTrustedValue().toString();
                };
                return b;
            }var f = function f(a) {
                throw ta("unsafe");
            };d.has("$sanitize") && (f = d.get("$sanitize"));var g = e(),
                h = {};h[oa.HTML] = e(g);h[oa.CSS] = e(g);h[oa.URL] = e(g);h[oa.JS] = e(g);h[oa.RESOURCE_URL] = e(h[oa.URL]);return { trustAs: function trustAs(a, b) {
                    var c = h.hasOwnProperty(a) ? h[a] : null;if (!c) throw ta("icontext", a, b);if (null === b || x(b) || "" === b) return b;if ("string" !== typeof b) throw ta("itype", a);return new c(b);
                }, getTrusted: function getTrusted(d, e) {
                    if (null === e || x(e) || "" === e) return e;var g = h.hasOwnProperty(d) ? h[d] : null;if (g && e instanceof g) return e.$$unwrapTrustedValue();if (d === oa.RESOURCE_URL) {
                        var g = Ca(e.toString()),
                            n,
                            q,
                            r = !1;n = 0;for (q = a.length; n < q; n++) {
                            if (c(a[n], g)) {
                                r = !0;break;
                            }
                        }if (r) for (n = 0, q = b.length; n < q; n++) {
                            if (c(b[n], g)) {
                                r = !1;break;
                            }
                        }if (r) return e;throw ta("insecurl", e.toString());
                    }if (d === oa.HTML) return f(e);throw ta("unsafe");
                }, valueOf: function valueOf(a) {
                    return a instanceof g ? a.$$unwrapTrustedValue() : a;
                } };
        }];
    }function Pf() {
        var a = !0;this.enabled = function (b) {
            arguments.length && (a = !!b);return a;
        };this.$get = ["$parse", "$sceDelegate", function (b, d) {
            if (a && 8 > za) throw ta("iequirks");var c = qa(oa);c.isEnabled = function () {
                return a;
            };c.trustAs = d.trustAs;c.getTrusted = d.getTrusted;c.valueOf = d.valueOf;a || (c.trustAs = c.getTrusted = function (a, b) {
                return b;
            }, c.valueOf = Ya);c.parseAs = function (a, d) {
                var e = b(d);return e.literal && e.constant ? e : b(d, function (b) {
                    return c.getTrusted(a, b);
                });
            };var e = c.parseAs,
                f = c.getTrusted,
                g = c.trustAs;p(oa, function (a, b) {
                var d = P(b);c[("parse_as_" + d).replace(uc, gb)] = function (b) {
                    return e(a, b);
                };c[("get_trusted_" + d).replace(uc, gb)] = function (b) {
                    return f(a, b);
                };c[("trust_as_" + d).replace(uc, gb)] = function (b) {
                    return g(a, b);
                };
            });return c;
        }];
    }function Rf() {
        this.$get = ["$window", "$document", function (a, b) {
            var d = {},
                c = !((!a.nw || !a.nw.process) && a.chrome && (a.chrome.app && a.chrome.app.runtime || !a.chrome.app && a.chrome.runtime && a.chrome.runtime.id)) && a.history && a.history.pushState,
                e = Z((/android (\d+)/.exec(P((a.navigator || {}).userAgent)) || [])[1]),
                f = /Boxee/i.test((a.navigator || {}).userAgent),
                g = b[0] || {},
                h = g.body && g.body.style,
                k = !1,
                l = !1;h && (k = !!("transition" in h || "webkitTransition" in h), l = !!("animation" in h || "webkitAnimation" in h));return { history: !(!c || 4 > e || f), hasEvent: function hasEvent(a) {
                    if ("input" === a && za) return !1;if (x(d[a])) {
                        var b = g.createElement("div");d[a] = "on" + a in b;
                    }return d[a];
                }, csp: Ga(), transitions: k, animations: l, android: e };
        }];
    }function Tf() {
        var a;this.httpOptions = function (b) {
            return b ? (a = b, this) : a;
        };this.$get = ["$exceptionHandler", "$templateCache", "$http", "$q", "$sce", function (b, d, c, e, f) {
            function g(h, k) {
                g.totalPendingRequests++;if (!D(h) || x(d.get(h))) h = f.getTrustedResourceUrl(h);var l = c.defaults && c.defaults.transformResponse;H(l) ? l = l.filter(function (a) {
                    return a !== lc;
                }) : l === lc && (l = null);return c.get(h, R({ cache: d, transformResponse: l }, a)).finally(function () {
                    g.totalPendingRequests--;
                }).then(function (a) {
                    d.put(h, a.data);return a.data;
                }, function (a) {
                    k || (a = Dg("tpload", h, a.status, a.statusText), b(a));return e.reject(a);
                });
            }g.totalPendingRequests = 0;return g;
        }];
    }function Uf() {
        this.$get = ["$rootScope", "$browser", "$location", function (a, b, d) {
            return { findBindings: function findBindings(a, b, d) {
                    a = a.getElementsByClassName("ng-binding");
                    var g = [];p(a, function (a) {
                        var c = ea.element(a).data("$binding");c && p(c, function (c) {
                            d ? new RegExp("(^|\\s)" + Kd(b) + "(\\s|\\||$)").test(c) && g.push(a) : -1 !== c.indexOf(b) && g.push(a);
                        });
                    });return g;
                }, findModels: function findModels(a, b, d) {
                    for (var g = ["ng-", "data-ng-", "ng\\:"], h = 0; h < g.length; ++h) {
                        var k = a.querySelectorAll("[" + g[h] + "model" + (d ? "=" : "*=") + '"' + b + '"]');if (k.length) return k;
                    }
                }, getLocation: function getLocation() {
                    return d.url();
                }, setLocation: function setLocation(b) {
                    b !== d.url() && (d.url(b), a.$digest());
                }, whenStable: function whenStable(a) {
                    b.notifyWhenNoOutstandingRequests(a);
                } };
        }];
    }
    function Vf() {
        this.$get = ["$rootScope", "$browser", "$q", "$$q", "$exceptionHandler", function (a, b, d, c, e) {
            function f(f, k, l) {
                E(f) || (l = k, k = f, f = A);var m = va.call(arguments, 3),
                    n = u(l) && !l,
                    q = (n ? c : d).defer(),
                    r = q.promise,
                    p;p = b.defer(function () {
                    try {
                        q.resolve(f.apply(null, m));
                    } catch (b) {
                        q.reject(b), e(b);
                    } finally {
                        delete g[r.$$timeoutId];
                    }n || a.$apply();
                }, k);r.$$timeoutId = p;g[p] = q;return r;
            }var g = {};f.cancel = function (a) {
                return a && a.$$timeoutId in g ? (g[a.$$timeoutId].promise.catch(A), g[a.$$timeoutId].reject("canceled"), delete g[a.$$timeoutId], b.defer.cancel(a.$$timeoutId)) : !1;
            };return f;
        }];
    }function Ca(a) {
        za && (aa.setAttribute("href", a), a = aa.href);aa.setAttribute("href", a);return { href: aa.href, protocol: aa.protocol ? aa.protocol.replace(/:$/, "") : "", host: aa.host, search: aa.search ? aa.search.replace(/^\?/, "") : "", hash: aa.hash ? aa.hash.replace(/^#/, "") : "", hostname: aa.hostname, port: aa.port, pathname: "/" === aa.pathname.charAt(0) ? aa.pathname : "/" + aa.pathname };
    }function wd(a) {
        a = D(a) ? Ca(a) : a;return a.protocol === Md.protocol && a.host === Md.host;
    }function Wf() {
        this.$get = la(w);
    }function Nd(a) {
        function b(a) {
            try {
                return decodeURIComponent(a);
            } catch (b) {
                return a;
            }
        }var d = a[0] || {},
            c = {},
            e = "";return function () {
            var a, g, h, k, l;try {
                a = d.cookie || "";
            } catch (m) {
                a = "";
            }if (a !== e) for (e = a, a = e.split("; "), c = {}, h = 0; h < a.length; h++) {
                g = a[h], k = g.indexOf("="), 0 < k && (l = b(g.substring(0, k)), x(c[l]) && (c[l] = b(g.substring(k + 1))));
            }return c;
        };
    }function $f() {
        this.$get = Nd;
    }function $c(a) {
        function b(d, c) {
            if (G(d)) {
                var e = {};p(d, function (a, c) {
                    e[c] = b(c, a);
                });return e;
            }return a.factory(d + "Filter", c);
        }this.register = b;this.$get = ["$injector", function (a) {
            return function (b) {
                return a.get(b + "Filter");
            };
        }];b("currency", Od);b("date", Pd);b("filter", Eg);b("json", Fg);b("limitTo", Gg);b("lowercase", Hg);b("number", Qd);b("orderBy", Rd);b("uppercase", Ig);
    }function Eg() {
        return function (a, b, d, c) {
            if (!ra(a)) {
                if (null == a) return a;throw M("filter")("notarray", a);
            }c = c || "$";var e;switch (vc(b)) {case "function":
                    break;case "boolean":case "null":case "number":case "string":
                    e = !0;case "object":
                    b = Jg(b, d, c, e);break;default:
                    return a;}return Array.prototype.filter.call(a, b);
        };
    }function Jg(a, b, d, c) {
        var e = G(a) && d in a;!0 === b ? b = pa : E(b) || (b = function b(a, _b) {
            if (x(a)) return !1;if (null === a || null === _b) return a === _b;if (G(_b) || G(a) && !Xb(a)) return !1;a = P("" + a);_b = P("" + _b);return -1 !== a.indexOf(_b);
        });return function (f) {
            return e && !G(f) ? Ea(f, a[d], b, d, !1) : Ea(f, a, b, d, c);
        };
    }function Ea(a, b, d, c, e, f) {
        var g = vc(a),
            h = vc(b);if ("string" === h && "!" === b.charAt(0)) return !Ea(a, b.substring(1), d, c, e);if (H(a)) return a.some(function (a) {
            return Ea(a, b, d, c, e);
        });switch (g) {case "object":
                var k;if (e) {
                    for (k in a) {
                        if (k.charAt && "$" !== k.charAt(0) && Ea(a[k], b, d, c, !0)) return !0;
                    }return f ? !1 : Ea(a, b, d, c, !1);
                }if ("object" === h) {
                    for (k in b) {
                        if (f = b[k], !E(f) && !x(f) && (g = k === c, !Ea(g ? a : a[k], f, d, c, g, g))) return !1;
                    }return !0;
                }return d(a, b);case "function":
                return !1;default:
                return d(a, b);}
    }function vc(a) {
        return null === a ? "null" : typeof a === "undefined" ? "undefined" : _typeof(a);
    }function Od(a) {
        var b = a.NUMBER_FORMATS;return function (a, c, e) {
            x(c) && (c = b.CURRENCY_SYM);x(e) && (e = b.PATTERNS[1].maxFrac);return null == a ? a : Sd(a, b.PATTERNS[1], b.GROUP_SEP, b.DECIMAL_SEP, e).replace(/\u00A4/g, c);
        };
    }function Qd(a) {
        var b = a.NUMBER_FORMATS;return function (a, c) {
            return null == a ? a : Sd(a, b.PATTERNS[0], b.GROUP_SEP, b.DECIMAL_SEP, c);
        };
    }function Kg(a) {
        var b = 0,
            d,
            c,
            e,
            f,
            g;-1 < (c = a.indexOf(Td)) && (a = a.replace(Td, ""));0 < (e = a.search(/e/i)) ? (0 > c && (c = e), c += +a.slice(e + 1), a = a.substring(0, e)) : 0 > c && (c = a.length);for (e = 0; a.charAt(e) === wc; e++) {}if (e === (g = a.length)) d = [0], c = 1;else {
            for (g--; a.charAt(g) === wc;) {
                g--;
            }c -= e;d = [];for (f = 0; e <= g; e++, f++) {
                d[f] = +a.charAt(e);
            }
        }c > Ud && (d = d.splice(0, Ud - 1), b = c - 1, c = 1);return { d: d, e: b, i: c };
    }function Lg(a, b, d, c) {
        var e = a.d,
            f = e.length - a.i;b = x(b) ? Math.min(Math.max(d, f), c) : +b;d = b + a.i;c = e[d];if (0 < d) {
            e.splice(Math.max(a.i, d));for (var g = d; g < e.length; g++) {
                e[g] = 0;
            }
        } else for (f = Math.max(0, f), a.i = 1, e.length = Math.max(1, d = b + 1), e[0] = 0, g = 1; g < d; g++) {
            e[g] = 0;
        }if (5 <= c) if (0 > d - 1) {
            for (c = 0; c > d; c--) {
                e.unshift(0), a.i++;
            }e.unshift(1);a.i++;
        } else e[d - 1]++;for (; f < Math.max(0, b); f++) {
            e.push(0);
        }if (b = e.reduceRight(function (a, b, c, d) {
            b += a;d[c] = b % 10;return Math.floor(b / 10);
        }, 0)) e.unshift(b), a.i++;
    }function Sd(a, b, d, c, e) {
        if (!D(a) && !ba(a) || isNaN(a)) return "";var f = !isFinite(a),
            g = !1,
            h = Math.abs(a) + "",
            k = "";if (f) k = "\u221E";else {
            g = Kg(h);Lg(g, e, b.minFrac, b.maxFrac);k = g.d;h = g.i;e = g.e;f = [];for (g = k.reduce(function (a, b) {
                return a && !b;
            }, !0); 0 > h;) {
                k.unshift(0), h++;
            }0 < h ? f = k.splice(h, k.length) : (f = k, k = [0]);h = [];for (k.length >= b.lgSize && h.unshift(k.splice(-b.lgSize, k.length).join("")); k.length > b.gSize;) {
                h.unshift(k.splice(-b.gSize, k.length).join(""));
            }k.length && h.unshift(k.join(""));k = h.join(d);f.length && (k += c + f.join(""));e && (k += "e+" + e);
        }return 0 > a && !g ? b.negPre + k + b.negSuf : b.posPre + k + b.posSuf;
    }function Lb(a, b, d, c) {
        var e = "";if (0 > a || c && 0 >= a) c ? a = -a + 1 : (a = -a, e = "-");for (a = "" + a; a.length < b;) {
            a = wc + a;
        }d && (a = a.substr(a.length - b));return e + a;
    }function Y(a, b, d, c, e) {
        d = d || 0;return function (f) {
            f = f["get" + a]();if (0 < d || f > -d) f += d;0 === f && -12 === d && (f = 12);return Lb(f, b, c, e);
        };
    }function nb(a, b, d) {
        return function (c, e) {
            var f = c["get" + a](),
                g = vb((d ? "STANDALONE" : "") + (b ? "SHORT" : "") + a);return e[g][f];
        };
    }function Vd(a) {
        var b = new Date(a, 0, 1).getDay();return new Date(a, 0, (4 >= b ? 5 : 12) - b);
    }function Wd(a) {
        return function (b) {
            var d = Vd(b.getFullYear());b = +new Date(b.getFullYear(), b.getMonth(), b.getDate() + (4 - b.getDay())) - +d;b = 1 + Math.round(b / 6048E5);return Lb(b, a);
        };
    }function xc(a, b) {
        return 0 >= a.getFullYear() ? b.ERAS[0] : b.ERAS[1];
    }function Pd(a) {
        function b(a) {
            var b;if (b = a.match(d)) {
                a = new Date(0);var f = 0,
                    g = 0,
                    h = b[8] ? a.setUTCFullYear : a.setFullYear,
                    k = b[8] ? a.setUTCHours : a.setHours;b[9] && (f = Z(b[9] + b[10]), g = Z(b[9] + b[11]));h.call(a, Z(b[1]), Z(b[2]) - 1, Z(b[3]));f = Z(b[4] || 0) - f;g = Z(b[5] || 0) - g;h = Z(b[6] || 0);b = Math.round(1E3 * parseFloat("0." + (b[7] || 0)));k.call(a, f, g, h, b);
            }return a;
        }var d = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function (c, d, f) {
            var g = "",
                h = [],
                k,
                l;d = d || "mediumDate";d = a.DATETIME_FORMATS[d] || d;D(c) && (c = Mg.test(c) ? Z(c) : b(c));ba(c) && (c = new Date(c));if (!ga(c) || !isFinite(c.getTime())) return c;for (; d;) {
                (l = Ng.exec(d)) ? (h = ab(h, l, 1), d = h.pop()) : (h.push(d), d = null);
            }var m = c.getTimezoneOffset();f && (m = Mc(f, m), c = Yb(c, f, !0));p(h, function (b) {
                k = Og[b];g += k ? k(c, a.DATETIME_FORMATS, m) : "''" === b ? "'" : b.replace(/(^'|'$)/g, "").replace(/''/g, "'");
            });return g;
        };
    }function Fg() {
        return function (a, b) {
            x(b) && (b = 2);return cb(a, b);
        };
    }function Gg() {
        return function (a, b, d) {
            b = Infinity === Math.abs(Number(b)) ? Number(b) : Z(b);if (da(b)) return a;ba(a) && (a = a.toString());if (!ra(a)) return a;d = !d || isNaN(d) ? 0 : Z(d);d = 0 > d ? Math.max(0, a.length + d) : d;return 0 <= b ? yc(a, d, d + b) : 0 === d ? yc(a, b, a.length) : yc(a, Math.max(0, d + b), d);
        };
    }function yc(a, b, d) {
        return D(a) ? a.slice(b, d) : va.call(a, b, d);
    }function Rd(a) {
        function b(b) {
            return b.map(function (b) {
                var c = 1,
                    d = Ya;if (E(b)) d = b;else if (D(b)) {
                    if ("+" === b.charAt(0) || "-" === b.charAt(0)) c = "-" === b.charAt(0) ? -1 : 1, b = b.substring(1);if ("" !== b && (d = a(b), d.constant)) var e = d(),
                        d = function d(a) {
                        return a[e];
                    };
                }return { get: d, descending: c };
            });
        }function d(a) {
            switch (typeof a === "undefined" ? "undefined" : _typeof(a)) {case "number":case "boolean":case "string":
                    return !0;default:
                    return !1;}
        }function c(a, b) {
            var c = 0,
                d = a.type,
                k = b.type;if (d === k) {
                var k = a.value,
                    l = b.value;"string" === d ? (k = k.toLowerCase(), l = l.toLowerCase()) : "object" === d && (G(k) && (k = a.index), G(l) && (l = b.index));k !== l && (c = k < l ? -1 : 1);
            } else c = d < k ? -1 : 1;return c;
        }return function (a, f, g, h) {
            if (null == a) return a;if (!ra(a)) throw M("orderBy")("notarray", a);H(f) || (f = [f]);0 === f.length && (f = ["+"]);var k = b(f),
                l = g ? -1 : 1,
                m = E(h) ? h : c;a = Array.prototype.map.call(a, function (a, b) {
                return { value: a, tieBreaker: { value: b, type: "number", index: b }, predicateValues: k.map(function (c) {
                        var e = c.get(a);c = typeof e === "undefined" ? "undefined" : _typeof(e);if (null === e) c = "string", e = "null";else if ("object" === c) a: {
                            if (E(e.valueOf) && (e = e.valueOf(), d(e))) break a;Xb(e) && (e = e.toString(), d(e));
                        }return { value: e, type: c,
                            index: b };
                    }) };
            });a.sort(function (a, b) {
                for (var c = 0, d = k.length; c < d; c++) {
                    var e = m(a.predicateValues[c], b.predicateValues[c]);if (e) return e * k[c].descending * l;
                }return m(a.tieBreaker, b.tieBreaker) * l;
            });return a = a.map(function (a) {
                return a.value;
            });
        };
    }function Qa(a) {
        E(a) && (a = { link: a });a.restrict = a.restrict || "AC";return la(a);
    }function Mb(a, b, d, c, e) {
        this.$$controls = [];this.$error = {};this.$$success = {};this.$pending = void 0;this.$name = e(b.name || b.ngForm || "")(d);this.$dirty = !1;this.$valid = this.$pristine = !0;this.$submitted = this.$invalid = !1;this.$$parentForm = Nb;this.$$element = a;this.$$animate = c;Xd(this);
    }function Xd(a) {
        a.$$classCache = {};a.$$classCache[Yd] = !(a.$$classCache[ob] = a.$$element.hasClass(ob));
    }function Zd(a) {
        function b(a, b, c) {
            c && !a.$$classCache[b] ? (a.$$animate.addClass(a.$$element, b), a.$$classCache[b] = !0) : !c && a.$$classCache[b] && (a.$$animate.removeClass(a.$$element, b), a.$$classCache[b] = !1);
        }function d(a, c, d) {
            c = c ? "-" + Qc(c, "-") : "";b(a, ob + c, !0 === d);b(a, Yd + c, !1 === d);
        }var c = a.set,
            e = a.unset;a.clazz.prototype.$setValidity = function (a, g, h) {
            x(g) ? (this.$pending || (this.$pending = {}), c(this.$pending, a, h)) : (this.$pending && e(this.$pending, a, h), $d(this.$pending) && (this.$pending = void 0));Ha(g) ? g ? (e(this.$error, a, h), c(this.$$success, a, h)) : (c(this.$error, a, h), e(this.$$success, a, h)) : (e(this.$error, a, h), e(this.$$success, a, h));this.$pending ? (b(this, "ng-pending", !0), this.$valid = this.$invalid = void 0, d(this, "", null)) : (b(this, "ng-pending", !1), this.$valid = $d(this.$error), this.$invalid = !this.$valid, d(this, "", this.$valid));g = this.$pending && this.$pending[a] ? void 0 : this.$error[a] ? !1 : this.$$success[a] ? !0 : null;d(this, a, g);this.$$parentForm.$setValidity(a, g, this);
        };
    }function $d(a) {
        if (a) for (var b in a) {
            if (a.hasOwnProperty(b)) return !1;
        }return !0;
    }function zc(a) {
        a.$formatters.push(function (b) {
            return a.$isEmpty(b) ? b : b.toString();
        });
    }function Ra(a, b, d, c, e, f) {
        var g = P(b[0].type);if (!e.android) {
            var h = !1;b.on("compositionstart", function () {
                h = !0;
            });b.on("compositionend", function () {
                h = !1;l();
            });
        }var k,
            l = function l(a) {
            k && (f.defer.cancel(k), k = null);if (!h) {
                var e = b.val();
                a = a && a.type;"password" === g || d.ngTrim && "false" === d.ngTrim || (e = S(e));(c.$viewValue !== e || "" === e && c.$$hasNativeValidators) && c.$setViewValue(e, a);
            }
        };if (e.hasEvent("input")) b.on("input", l);else {
            var m = function m(a, b, c) {
                k || (k = f.defer(function () {
                    k = null;b && b.value === c || l(a);
                }));
            };b.on("keydown", function (a) {
                var b = a.keyCode;91 === b || 15 < b && 19 > b || 37 <= b && 40 >= b || m(a, this, this.value);
            });if (e.hasEvent("paste")) b.on("paste cut", m);
        }b.on("change", l);if (ae[g] && c.$$hasNativeValidators && g === d.type) b.on("keydown wheel mousedown", function (a) {
            if (!k) {
                var b = this.validity,
                    c = b.badInput,
                    d = b.typeMismatch;k = f.defer(function () {
                    k = null;b.badInput === c && b.typeMismatch === d || l(a);
                });
            }
        });c.$render = function () {
            var a = c.$isEmpty(c.$viewValue) ? "" : c.$viewValue;b.val() !== a && b.val(a);
        };
    }function Ob(a, b) {
        return function (d, c) {
            var e, f;if (ga(d)) return d;if (D(d)) {
                '"' === d.charAt(0) && '"' === d.charAt(d.length - 1) && (d = d.substring(1, d.length - 1));if (Pg.test(d)) return new Date(d);a.lastIndex = 0;if (e = a.exec(d)) return e.shift(), f = c ? { yyyy: c.getFullYear(), MM: c.getMonth() + 1, dd: c.getDate(), HH: c.getHours(), mm: c.getMinutes(), ss: c.getSeconds(), sss: c.getMilliseconds() / 1E3 } : { yyyy: 1970, MM: 1, dd: 1, HH: 0, mm: 0, ss: 0, sss: 0 }, p(e, function (a, c) {
                    c < b.length && (f[b[c]] = +a);
                }), new Date(f.yyyy, f.MM - 1, f.dd, f.HH, f.mm, f.ss || 0, 1E3 * f.sss || 0);
            }return NaN;
        };
    }function pb(a, b, d, c) {
        return function (e, f, g, h, k, l, m) {
            function n(a) {
                return a && !(a.getTime && a.getTime() !== a.getTime());
            }function q(a) {
                return u(a) && !ga(a) ? d(a) || void 0 : a;
            }Ac(e, f, g, h);Ra(e, f, g, h, k, l);var r = h && h.$options.getOption("timezone"),
                p;h.$$parserName = a;h.$parsers.push(function (a) {
                if (h.$isEmpty(a)) return null;if (b.test(a)) return a = d(a, p), r && (a = Yb(a, r)), a;
            });h.$formatters.push(function (a) {
                if (a && !ga(a)) throw qb("datefmt", a);if (n(a)) return (p = a) && r && (p = Yb(p, r, !0)), m("date")(a, c, r);p = null;return "";
            });if (u(g.min) || g.ngMin) {
                var s;h.$validators.min = function (a) {
                    return !n(a) || x(s) || d(a) >= s;
                };g.$observe("min", function (a) {
                    s = q(a);h.$validate();
                });
            }if (u(g.max) || g.ngMax) {
                var t;h.$validators.max = function (a) {
                    return !n(a) || x(t) || d(a) <= t;
                };g.$observe("max", function (a) {
                    t = q(a);h.$validate();
                });
            }
        };
    }function Ac(a, b, d, c) {
        (c.$$hasNativeValidators = G(b[0].validity)) && c.$parsers.push(function (a) {
            var c = b.prop("validity") || {};return c.badInput || c.typeMismatch ? void 0 : a;
        });
    }function be(a) {
        a.$$parserName = "number";a.$parsers.push(function (b) {
            if (a.$isEmpty(b)) return null;if (Qg.test(b)) return parseFloat(b);
        });a.$formatters.push(function (b) {
            if (!a.$isEmpty(b)) {
                if (!ba(b)) throw qb("numfmt", b);b = b.toString();
            }return b;
        });
    }function Sa(a) {
        u(a) && !ba(a) && (a = parseFloat(a));return da(a) ? void 0 : a;
    }function Bc(a) {
        var b = a.toString(),
            d = b.indexOf(".");return -1 === d ? -1 < a && 1 > a && (a = /e-(\d+)$/.exec(b)) ? Number(a[1]) : 0 : b.length - d - 1;
    }function ce(a, b, d) {
        a = Number(a);var c = (a | 0) !== a,
            e = (b | 0) !== b,
            f = (d | 0) !== d;if (c || e || f) {
            var g = c ? Bc(a) : 0,
                h = e ? Bc(b) : 0,
                k = f ? Bc(d) : 0,
                g = Math.max(g, h, k),
                g = Math.pow(10, g);a *= g;b *= g;d *= g;c && (a = Math.round(a));e && (b = Math.round(b));f && (d = Math.round(d));
        }return 0 === (a - b) % d;
    }function de(a, b, d, c, e) {
        if (u(c)) {
            a = a(c);if (!a.constant) throw qb("constexpr", d, c);return a(b);
        }return e;
    }function Cc(a, b) {
        function d(a, b) {
            if (!a || !a.length) return [];if (!b || !b.length) return a;var c = [],
                d = 0;a: for (; d < a.length; d++) {
                for (var e = a[d], f = 0; f < b.length; f++) {
                    if (e === b[f]) continue a;
                }c.push(e);
            }return c;
        }function c(a) {
            var b = a;H(a) ? b = a.map(c).join(" ") : G(a) && (b = Object.keys(a).filter(function (b) {
                return a[b];
            }).join(" "));return b;
        }function e(a) {
            var b = a;if (H(a)) b = a.map(e);else if (G(a)) {
                var c = !1,
                    b = Object.keys(a).filter(function (b) {
                    b = a[b];!c && x(b) && (c = !0);return b;
                });c && b.push(void 0);
            }return b;
        }a = "ngClass" + a;var f;return ["$parse", function (g) {
            return { restrict: "AC",
                link: function link(h, k, l) {
                    function m(a, b) {
                        var c = [];p(a, function (a) {
                            if (0 < b || K[a]) K[a] = (K[a] || 0) + b, K[a] === +(0 < b) && c.push(a);
                        });return c.join(" ");
                    }function n(a) {
                        if (a === b) {
                            var c = v,
                                c = m(c && c.split(" "), 1);l.$addClass(c);
                        } else c = v, c = m(c && c.split(" "), -1), l.$removeClass(c);y = a;
                    }function q(a) {
                        a = c(a);a !== v && r(a);
                    }function r(a) {
                        if (y === b) {
                            var c = v && v.split(" "),
                                e = a && a.split(" "),
                                f = d(c, e),
                                c = d(e, c),
                                f = m(f, -1),
                                c = m(c, 1);l.$addClass(c);l.$removeClass(f);
                        }v = a;
                    }var s = l[a].trim(),
                        u = ":" === s.charAt(0) && ":" === s.charAt(1),
                        s = g(s, u ? e : c),
                        t = u ? q : r,
                        K = k.data("$classCounts"),
                        y = !0,
                        v;K || (K = V(), k.data("$classCounts", K));"ngClass" !== a && (f || (f = g("$index", function (a) {
                        return a & 1;
                    })), h.$watch(f, n));h.$watch(s, t, u);
                } };
        }];
    }function Pb(a, b, d, c, e, f, g, h, k) {
        this.$modelValue = this.$viewValue = Number.NaN;this.$$rawModelValue = void 0;this.$validators = {};this.$asyncValidators = {};this.$parsers = [];this.$formatters = [];this.$viewChangeListeners = [];this.$untouched = !0;this.$touched = !1;this.$pristine = !0;this.$dirty = !1;this.$valid = !0;this.$invalid = !1;this.$error = {};
        this.$$success = {};this.$pending = void 0;this.$name = k(d.name || "", !1)(a);this.$$parentForm = Nb;this.$options = Qb;this.$$parsedNgModel = e(d.ngModel);this.$$parsedNgModelAssign = this.$$parsedNgModel.assign;this.$$ngModelGet = this.$$parsedNgModel;this.$$ngModelSet = this.$$parsedNgModelAssign;this.$$pendingDebounce = null;this.$$parserValid = void 0;this.$$currentValidationRunId = 0;this.$$scope = a;this.$$attr = d;this.$$element = c;this.$$animate = f;this.$$timeout = g;this.$$parse = e;this.$$q = h;this.$$exceptionHandler = b;Xd(this);
        Rg(this);
    }function Rg(a) {
        a.$$scope.$watch(function () {
            var b = a.$$ngModelGet(a.$$scope);if (b !== a.$modelValue && (a.$modelValue === a.$modelValue || b === b)) {
                a.$modelValue = a.$$rawModelValue = b;a.$$parserValid = void 0;for (var d = a.$formatters, c = d.length, e = b; c--;) {
                    e = d[c](e);
                }a.$viewValue !== e && (a.$$updateEmptyClasses(e), a.$viewValue = a.$$lastCommittedViewValue = e, a.$render(), a.$$runValidators(a.$modelValue, a.$viewValue, A));
            }return b;
        });
    }function Dc(a) {
        this.$$options = a;
    }function ee(a, b) {
        p(b, function (b, c) {
            u(a[c]) || (a[c] = b);
        });
    }
    function Ta(a, b) {
        a.prop("selected", b);a.attr("selected", b);
    }var Sg = /^\/(.+)\/([a-z]*)$/,
        ua = Object.prototype.hasOwnProperty,
        Fc = { objectMaxDepth: 5 },
        P = function P(a) {
        return D(a) ? a.toLowerCase() : a;
    },
        vb = function vb(a) {
        return D(a) ? a.toUpperCase() : a;
    },
        za,
        F,
        na,
        va = [].slice,
        sg = [].splice,
        Tg = [].push,
        ma = Object.prototype.toString,
        Jc = Object.getPrototypeOf,
        Fa = M("ng"),
        ea = w.angular || (w.angular = {}),
        ac,
        rb = 0;za = w.document.documentMode;var da = Number.isNaN || function (a) {
        return a !== a;
    };A.$inject = [];Ya.$inject = [];var H = Array.isArray,
        qe = /^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/,
        S = function S(a) {
        return D(a) ? a.trim() : a;
    },
        Kd = function Kd(a) {
        return a.replace(/([-()[\]{}+?*.$^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
    },
        Ga = function Ga() {
        if (!u(Ga.rules)) {
            var a = w.document.querySelector("[ng-csp]") || w.document.querySelector("[data-ng-csp]");if (a) {
                var b = a.getAttribute("ng-csp") || a.getAttribute("data-ng-csp");Ga.rules = { noUnsafeEval: !b || -1 !== b.indexOf("no-unsafe-eval"), noInlineStyle: !b || -1 !== b.indexOf("no-inline-style") };
            } else {
                a = Ga;try {
                    new Function(""), b = !1;
                } catch (d) {
                    b = !0;
                }a.rules = { noUnsafeEval: b, noInlineStyle: !1 };
            }
        }return Ga.rules;
    },
        sb = function sb() {
        if (u(sb.name_)) return sb.name_;var a,
            b,
            d = Ja.length,
            c,
            e;for (b = 0; b < d; ++b) {
            if (c = Ja[b], a = w.document.querySelector("[" + c.replace(":", "\\:") + "jq]")) {
                e = a.getAttribute(c + "jq");break;
            }
        }return sb.name_ = e;
    },
        se = /:/g,
        Ja = ["ng-", "data-ng-", "ng:", "x-ng-"],
        ve = function (a) {
        var b = a.currentScript;if (!b) return !0;if (!(b instanceof w.HTMLScriptElement || b instanceof w.SVGScriptElement)) return !1;b = b.attributes;
        return [b.getNamedItem("src"), b.getNamedItem("href"), b.getNamedItem("xlink:href")].every(function (b) {
            if (!b) return !0;if (!b.value) return !1;var c = a.createElement("a");c.href = b.value;if (a.location.origin === c.origin) return !0;switch (c.protocol) {case "http:":case "https:":case "ftp:":case "blob:":case "file:":case "data:":
                    return !0;default:
                    return !1;}
        });
    }(w.document),
        ye = /[A-Z]/g,
        Rc = !1,
        Ia = 3,
        De = { full: "1.6.3", major: 1, minor: 6, dot: 3, codeName: "scriptalicious-bootstrapping" };W.expando = "ng339";var ib = W.cache = {},
        eg = 1;
    W._data = function (a) {
        return this.cache[a[this.expando]] || {};
    };var ag = /-([a-z])/g,
        Ug = /^-ms-/,
        Ab = { mouseleave: "mouseout", mouseenter: "mouseover" },
        cc = M("jqLite"),
        dg = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,
        bc = /<|&#?\w+;/,
        bg = /<([\w:-]+)/,
        cg = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
        ha = { option: [1, '<select multiple="multiple">', "</select>"], thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] };ha.optgroup = ha.option;ha.tbody = ha.tfoot = ha.colgroup = ha.caption = ha.thead;ha.th = ha.td;var jg = w.Node.prototype.contains || function (a) {
        return !!(this.compareDocumentPosition(a) & 16);
    },
        Oa = W.prototype = { ready: cd, toString: function toString() {
            var a = [];p(this, function (b) {
                a.push("" + b);
            });return "[" + a.join(", ") + "]";
        }, eq: function eq(a) {
            return 0 <= a ? F(this[a]) : F(this[this.length + a]);
        }, length: 0, push: Tg, sort: [].sort, splice: [].splice },
        Gb = {};p("multiple selected checked disabled readOnly required open".split(" "), function (a) {
        Gb[P(a)] = a;
    });var hd = {};p("input select option textarea button form details".split(" "), function (a) {
        hd[a] = !0;
    });var pd = { ngMinlength: "minlength", ngMaxlength: "maxlength", ngMin: "min", ngMax: "max", ngPattern: "pattern", ngStep: "step" };p({ data: fc, removeData: hb, hasData: function hasData(a) {
            for (var b in ib[a.ng339]) {
                return !0;
            }return !1;
        }, cleanData: function cleanData(a) {
            for (var b = 0, d = a.length; b < d; b++) {
                hb(a[b]);
            }
        } }, function (a, b) {
        W[b] = a;
    });p({ data: fc, inheritedData: Eb, scope: function scope(a) {
            return F.data(a, "$scope") || Eb(a.parentNode || a, ["$isolateScope", "$scope"]);
        }, isolateScope: function isolateScope(a) {
            return F.data(a, "$isolateScope") || F.data(a, "$isolateScopeNoTemplate");
        }, controller: ed, injector: function injector(a) {
            return Eb(a, "$injector");
        }, removeAttr: function removeAttr(a, b) {
            a.removeAttribute(b);
        }, hasClass: Bb, css: function css(a, b, d) {
            b = xb(b.replace(Ug, "ms-"));if (u(d)) a.style[b] = d;else return a.style[b];
        }, attr: function attr(a, b, d) {
            var c = a.nodeType;if (c !== Ia && 2 !== c && 8 !== c && a.getAttribute) {
                var c = P(b),
                    e = Gb[c];if (u(d)) null === d || !1 === d && e ? a.removeAttribute(b) : a.setAttribute(b, e ? c : d);else return a = a.getAttribute(b), e && null !== a && (a = c), null === a ? void 0 : a;
            }
        }, prop: function prop(a, b, d) {
            if (u(d)) a[b] = d;else return a[b];
        }, text: function () {
            function a(a, d) {
                if (x(d)) {
                    var c = a.nodeType;return 1 === c || c === Ia ? a.textContent : "";
                }a.textContent = d;
            }a.$dv = "";return a;
        }(), val: function val(a, b) {
            if (x(b)) {
                if (a.multiple && "select" === wa(a)) {
                    var d = [];p(a.options, function (a) {
                        a.selected && d.push(a.value || a.text);
                    });return d;
                }return a.value;
            }a.value = b;
        }, html: function html(a, b) {
            if (x(b)) return a.innerHTML;yb(a, !0);a.innerHTML = b;
        },
        empty: fd }, function (a, b) {
        W.prototype[b] = function (b, c) {
            var e,
                f,
                g = this.length;if (a !== fd && x(2 === a.length && a !== Bb && a !== ed ? b : c)) {
                if (G(b)) {
                    for (e = 0; e < g; e++) {
                        if (a === fc) a(this[e], b);else for (f in b) {
                            a(this[e], f, b[f]);
                        }
                    }return this;
                }e = a.$dv;g = x(e) ? Math.min(g, 1) : g;for (f = 0; f < g; f++) {
                    var h = a(this[f], b, c);e = e ? e + h : h;
                }return e;
            }for (e = 0; e < g; e++) {
                a(this[e], b, c);
            }return this;
        };
    });p({ removeData: hb, on: function on(a, b, d, c) {
            if (u(c)) throw cc("onargs");if (ad(a)) {
                c = zb(a, !0);var e = c.events,
                    f = c.handle;f || (f = c.handle = gg(a, e));c = 0 <= b.indexOf(" ") ? b.split(" ") : [b];for (var g = c.length, h = function h(b, c, g) {
                    var h = e[b];h || (h = e[b] = [], h.specialHandlerWrapper = c, "$destroy" === b || g || a.addEventListener(b, f));h.push(d);
                }; g--;) {
                    b = c[g], Ab[b] ? (h(Ab[b], ig), h(b, void 0, !0)) : h(b);
                }
            }
        }, off: dd, one: function one(a, b, d) {
            a = F(a);a.on(b, function e() {
                a.off(b, d);a.off(b, e);
            });a.on(b, d);
        }, replaceWith: function replaceWith(a, b) {
            var d,
                c = a.parentNode;yb(a);p(new W(b), function (b) {
                d ? c.insertBefore(b, d.nextSibling) : c.replaceChild(b, a);d = b;
            });
        }, children: function children(a) {
            var b = [];p(a.childNodes, function (a) {
                1 === a.nodeType && b.push(a);
            });return b;
        }, contents: function contents(a) {
            return a.contentDocument || a.childNodes || [];
        }, append: function append(a, b) {
            var d = a.nodeType;if (1 === d || 11 === d) {
                b = new W(b);for (var d = 0, c = b.length; d < c; d++) {
                    a.appendChild(b[d]);
                }
            }
        }, prepend: function prepend(a, b) {
            if (1 === a.nodeType) {
                var d = a.firstChild;p(new W(b), function (b) {
                    a.insertBefore(b, d);
                });
            }
        }, wrap: function wrap(a, b) {
            var d = F(b).eq(0).clone()[0],
                c = a.parentNode;c && c.replaceChild(d, a);d.appendChild(a);
        }, remove: Fb, detach: function detach(a) {
            Fb(a, !0);
        }, after: function after(a, b) {
            var d = a,
                c = a.parentNode;
            if (c) {
                b = new W(b);for (var e = 0, f = b.length; e < f; e++) {
                    var g = b[e];c.insertBefore(g, d.nextSibling);d = g;
                }
            }
        }, addClass: Db, removeClass: Cb, toggleClass: function toggleClass(a, b, d) {
            b && p(b.split(" "), function (b) {
                var e = d;x(e) && (e = !Bb(a, b));(e ? Db : Cb)(a, b);
            });
        }, parent: function parent(a) {
            return (a = a.parentNode) && 11 !== a.nodeType ? a : null;
        }, next: function next(a) {
            return a.nextElementSibling;
        }, find: function find(a, b) {
            return a.getElementsByTagName ? a.getElementsByTagName(b) : [];
        }, clone: ec, triggerHandler: function triggerHandler(a, b, d) {
            var c,
                e,
                f = b.type || b,
                g = zb(a);if (g = (g = g && g.events) && g[f]) c = { preventDefault: function preventDefault() {
                    this.defaultPrevented = !0;
                }, isDefaultPrevented: function isDefaultPrevented() {
                    return !0 === this.defaultPrevented;
                }, stopImmediatePropagation: function stopImmediatePropagation() {
                    this.immediatePropagationStopped = !0;
                }, isImmediatePropagationStopped: function isImmediatePropagationStopped() {
                    return !0 === this.immediatePropagationStopped;
                }, stopPropagation: A, type: f, target: a }, b.type && (c = R(c, b)), b = qa(g), e = d ? [c].concat(d) : [c], p(b, function (b) {
                c.isImmediatePropagationStopped() || b.apply(a, e);
            });
        } }, function (a, b) {
        W.prototype[b] = function (b, c, e) {
            for (var f, g = 0, h = this.length; g < h; g++) {
                x(f) ? (f = a(this[g], b, c, e), u(f) && (f = F(f))) : dc(f, a(this[g], b, c, e));
            }return u(f) ? f : this;
        };
    });W.prototype.bind = W.prototype.on;W.prototype.unbind = W.prototype.off;var Vg = Object.create(null);id.prototype = { _idx: function _idx(a) {
            if (a === this._lastKey) return this._lastIndex;this._lastKey = a;return this._lastIndex = this._keys.indexOf(a);
        }, _transformKey: function _transformKey(a) {
            return da(a) ? Vg : a;
        }, get: function get(a) {
            a = this._transformKey(a);a = this._idx(a);if (-1 !== a) return this._values[a];
        }, set: function set(a, b) {
            a = this._transformKey(a);var d = this._idx(a);-1 === d && (d = this._lastIndex = this._keys.length);this._keys[d] = a;this._values[d] = b;
        }, delete: function _delete(a) {
            a = this._transformKey(a);a = this._idx(a);if (-1 === a) return !1;this._keys.splice(a, 1);this._values.splice(a, 1);this._lastKey = NaN;this._lastIndex = -1;return !0;
        } };var Hb = id,
        Zf = [function () {
        this.$get = [function () {
            return Hb;
        }];
    }],
        lg = /^([^(]+?)=>/,
        mg = /^[^(]*\(\s*([^)]*)\)/m,
        Wg = /,/,
        Xg = /^\s*(_?)(\S+?)\1\s*$/,
        kg = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg,
        ya = M("$injector");eb.$$annotate = function (a, b, d) {
        var c;if ("function" === typeof a) {
            if (!(c = a.$inject)) {
                c = [];if (a.length) {
                    if (b) throw D(d) && d || (d = a.name || ng(a)), ya("strictdi", d);b = jd(a);p(b[1].split(Wg), function (a) {
                        a.replace(Xg, function (a, b, d) {
                            c.push(d);
                        });
                    });
                }a.$inject = c;
            }
        } else H(a) ? (b = a.length - 1, tb(a[b], "fn"), c = a.slice(0, b)) : tb(a, "fn", !0);return c;
    };var fe = M("$animate"),
        qf = function qf() {
        this.$get = A;
    },
        rf = function rf() {
        var a = new Hb(),
            b = [];this.$get = ["$$AnimateRunner", "$rootScope", function (d, c) {
            function e(a, b, c) {
                var d = !1;b && (b = D(b) ? b.split(" ") : H(b) ? b : [], p(b, function (b) {
                    b && (d = !0, a[b] = c);
                }));
                return d;
            }function f() {
                p(b, function (b) {
                    var c = a.get(b);if (c) {
                        var d = og(b.attr("class")),
                            e = "",
                            f = "";p(c, function (a, b) {
                            a !== !!d[b] && (a ? e += (e.length ? " " : "") + b : f += (f.length ? " " : "") + b);
                        });p(b, function (a) {
                            e && Db(a, e);f && Cb(a, f);
                        });a.delete(b);
                    }
                });b.length = 0;
            }return { enabled: A, on: A, off: A, pin: A, push: function push(g, h, k, l) {
                    l && l();k = k || {};k.from && g.css(k.from);k.to && g.css(k.to);if (k.addClass || k.removeClass) if (h = k.addClass, l = k.removeClass, k = a.get(g) || {}, h = e(k, h, !0), l = e(k, l, !1), h || l) a.set(g, k), b.push(g), 1 === b.length && c.$$postDigest(f);
                    g = new d();g.complete();return g;
                } };
        }];
    },
        of = ["$provide", function (a) {
        var b = this,
            d = null;this.$$registeredAnimations = Object.create(null);this.register = function (c, d) {
            if (c && "." !== c.charAt(0)) throw fe("notcsel", c);var f = c + "-animation";b.$$registeredAnimations[c.substr(1)] = f;a.factory(f, d);
        };this.classNameFilter = function (a) {
            if (1 === arguments.length && (d = a instanceof RegExp ? a : null) && /[(\s|\/)]ng-animate[(\s|\/)]/.test(d.toString())) throw d = null, fe("nongcls", "ng-animate");return d;
        };this.$get = ["$$animateQueue", function (a) {
            function b(a, c, d) {
                if (d) {
                    var e;a: {
                        for (e = 0; e < d.length; e++) {
                            var l = d[e];if (1 === l.nodeType) {
                                e = l;break a;
                            }
                        }e = void 0;
                    }!e || e.parentNode || e.previousElementSibling || (d = null);
                }d ? d.after(a) : c.prepend(a);
            }return { on: a.on, off: a.off, pin: a.pin, enabled: a.enabled, cancel: function cancel(a) {
                    a.end && a.end();
                }, enter: function enter(d, g, h, k) {
                    g = g && F(g);h = h && F(h);g = g || h.parent();b(d, g, h);return a.push(d, "enter", ia(k));
                }, move: function move(d, g, h, k) {
                    g = g && F(g);h = h && F(h);g = g || h.parent();b(d, g, h);return a.push(d, "move", ia(k));
                }, leave: function leave(b, d) {
                    return a.push(b, "leave", ia(d), function () {
                        b.remove();
                    });
                }, addClass: function addClass(b, d, e) {
                    e = ia(e);e.addClass = jb(e.addclass, d);return a.push(b, "addClass", e);
                }, removeClass: function removeClass(b, d, e) {
                    e = ia(e);e.removeClass = jb(e.removeClass, d);return a.push(b, "removeClass", e);
                }, setClass: function setClass(b, d, e, k) {
                    k = ia(k);k.addClass = jb(k.addClass, d);k.removeClass = jb(k.removeClass, e);return a.push(b, "setClass", k);
                }, animate: function animate(b, d, e, k, l) {
                    l = ia(l);l.from = l.from ? R(l.from, d) : d;l.to = l.to ? R(l.to, e) : e;l.tempClasses = jb(l.tempClasses, k || "ng-inline-animate");return a.push(b, "animate", l);
                } };
        }];
    }],
        tf = function tf() {
        this.$get = ["$$rAF", function (a) {
            function b(b) {
                d.push(b);1 < d.length || a(function () {
                    for (var a = 0; a < d.length; a++) {
                        d[a]();
                    }d = [];
                });
            }var d = [];return function () {
                var a = !1;b(function () {
                    a = !0;
                });return function (d) {
                    a ? d() : b(d);
                };
            };
        }];
    },
        sf = function sf() {
        this.$get = ["$q", "$sniffer", "$$animateAsyncRun", "$$isDocumentHidden", "$timeout", function (a, b, d, c, e) {
            function f(a) {
                this.setHost(a);var b = d();this._doneCallbacks = [];this._tick = function (a) {
                    c() ? e(a, 0, !1) : b(a);
                };this._state = 0;
            }f.chain = function (a, b) {
                function c() {
                    if (d === a.length) b(!0);else a[d](function (a) {
                        !1 === a ? b(!1) : (d++, c());
                    });
                }var d = 0;c();
            };f.all = function (a, b) {
                function c(f) {
                    e = e && f;++d === a.length && b(e);
                }var d = 0,
                    e = !0;p(a, function (a) {
                    a.done(c);
                });
            };f.prototype = { setHost: function setHost(a) {
                    this.host = a || {};
                }, done: function done(a) {
                    2 === this._state ? a() : this._doneCallbacks.push(a);
                }, progress: A, getPromise: function getPromise() {
                    if (!this.promise) {
                        var b = this;this.promise = a(function (a, c) {
                            b.done(function (b) {
                                !1 === b ? c() : a();
                            });
                        });
                    }return this.promise;
                }, then: function then(a, b) {
                    return this.getPromise().then(a, b);
                }, "catch": function _catch(a) {
                    return this.getPromise()["catch"](a);
                },
                "finally": function _finally(a) {
                    return this.getPromise()["finally"](a);
                }, pause: function pause() {
                    this.host.pause && this.host.pause();
                }, resume: function resume() {
                    this.host.resume && this.host.resume();
                }, end: function end() {
                    this.host.end && this.host.end();this._resolve(!0);
                }, cancel: function cancel() {
                    this.host.cancel && this.host.cancel();this._resolve(!1);
                }, complete: function complete(a) {
                    var b = this;0 === b._state && (b._state = 1, b._tick(function () {
                        b._resolve(a);
                    }));
                }, _resolve: function _resolve(a) {
                    2 !== this._state && (p(this._doneCallbacks, function (b) {
                        b(a);
                    }), this._doneCallbacks.length = 0, this._state = 2);
                } };return f;
        }];
    },
        pf = function pf() {
        this.$get = ["$$rAF", "$q", "$$AnimateRunner", function (a, b, d) {
            return function (b, e) {
                function f() {
                    a(function () {
                        g.addClass && (b.addClass(g.addClass), g.addClass = null);g.removeClass && (b.removeClass(g.removeClass), g.removeClass = null);g.to && (b.css(g.to), g.to = null);h || k.complete();h = !0;
                    });return k;
                }var g = e || {};g.$$prepared || (g = sa(g));g.cleanupStyles && (g.from = g.to = null);g.from && (b.css(g.from), g.from = null);var h,
                    k = new d();return { start: f, end: f };
            };
        }];
    },
        fa = M("$compile"),
        jc = new function () {}();
    Tc.$inject = ["$provide", "$$sanitizeUriProvider"];Jb.prototype.isFirstChange = function () {
        return this.previousValue === jc;
    };var kd = /^((?:x|data)[:\-_])/i,
        rg = /[:\-_]+(.)/g,
        rd = M("$controller"),
        qd = /^(\S+)(\s+as\s+([\w$]+))?$/,
        Af = function Af() {
        this.$get = ["$document", function (a) {
            return function (b) {
                b ? !b.nodeType && b instanceof F && (b = b[0]) : b = a[0].body;return b.offsetWidth + 1;
            };
        }];
    },
        sd = "application/json",
        mc = { "Content-Type": sd + ";charset=utf-8" },
        ug = /^\[|^\{(?!\{)/,
        vg = { "[": /]$/, "{": /}$/ },
        tg = /^\)]\}',?\n/,
        xd = M("$http"),
        Da = ea.$interpolateMinErr = M("$interpolate");Da.throwNoconcat = function (a) {
        throw Da("noconcat", a);
    };Da.interr = function (a, b) {
        return Da("interr", a, b.toString());
    };var If = function If() {
        this.$get = function () {
            function a(a) {
                var b = function b(a) {
                    b.data = a;b.called = !0;
                };b.id = a;return b;
            }var b = ea.callbacks,
                d = {};return { createCallback: function createCallback(c) {
                    c = "_" + (b.$$counter++).toString(36);var e = "angular.callbacks." + c,
                        f = a(c);d[e] = b[c] = f;return e;
                }, wasCalled: function wasCalled(a) {
                    return d[a].called;
                }, getResponse: function getResponse(a) {
                    return d[a].data;
                }, removeCallback: function removeCallback(a) {
                    delete b[d[a].id];
                    delete d[a];
                } };
        };
    },
        Yg = /^([^?#]*)(\?([^#]*))?(#(.*))?$/,
        xg = { http: 80, https: 443, ftp: 21 },
        lb = M("$location"),
        yg = /^\s*[\\/]{2,}/,
        Zg = { $$absUrl: "", $$html5: !1, $$replace: !1, absUrl: Kb("$$absUrl"), url: function url(a) {
            if (x(a)) return this.$$url;var b = Yg.exec(a);(b[1] || "" === a) && this.path(decodeURIComponent(b[1]));(b[2] || b[1] || "" === a) && this.search(b[3] || "");this.hash(b[5] || "");return this;
        }, protocol: Kb("$$protocol"), host: Kb("$$host"), port: Kb("$$port"), path: Bd("$$path", function (a) {
            a = null !== a ? a.toString() : "";return "/" === a.charAt(0) ? a : "/" + a;
        }), search: function search(a, b) {
            switch (arguments.length) {case 0:
                    return this.$$search;case 1:
                    if (D(a) || ba(a)) a = a.toString(), this.$$search = Oc(a);else if (G(a)) a = sa(a, {}), p(a, function (b, c) {
                        null == b && delete a[c];
                    }), this.$$search = a;else throw lb("isrcharg");break;default:
                    x(b) || null === b ? delete this.$$search[a] : this.$$search[a] = b;}this.$$compose();return this;
        }, hash: Bd("$$hash", function (a) {
            return null !== a ? a.toString() : "";
        }), replace: function replace() {
            this.$$replace = !0;return this;
        } };p([Ad, qc, pc], function (a) {
        a.prototype = Object.create(Zg);a.prototype.state = function (b) {
            if (!arguments.length) return this.$$state;if (a !== pc || !this.$$html5) throw lb("nostate");this.$$state = x(b) ? null : b;this.$$urlUpdatedByLocation = !0;return this;
        };
    });var Ua = M("$parse"),
        Bg = {}.constructor.prototype.valueOf,
        Rb = V();p("+ - * / % === !== == != < > <= >= && || ! = |".split(" "), function (a) {
        Rb[a] = !0;
    });var $g = { n: "\n", f: "\f", r: "\r", t: "\t", v: "\v", "'": "'", '"': '"' },
        sc = function sc(a) {
        this.options = a;
    };sc.prototype = { constructor: sc, lex: function lex(a) {
            this.text = a;this.index = 0;for (this.tokens = []; this.index < this.text.length;) {
                if (a = this.text.charAt(this.index), '"' === a || "'" === a) this.readString(a);else if (this.isNumber(a) || "." === a && this.isNumber(this.peek())) this.readNumber();else if (this.isIdentifierStart(this.peekMultichar())) this.readIdent();else if (this.is(a, "(){}[].,;:?")) this.tokens.push({ index: this.index, text: a }), this.index++;else if (this.isWhitespace(a)) this.index++;else {
                    var b = a + this.peek(),
                        d = b + this.peek(2),
                        c = Rb[b],
                        e = Rb[d];Rb[a] || c || e ? (a = e ? d : c ? b : a, this.tokens.push({ index: this.index,
                        text: a, operator: !0 }), this.index += a.length) : this.throwError("Unexpected next character ", this.index, this.index + 1);
                }
            }return this.tokens;
        }, is: function is(a, b) {
            return -1 !== b.indexOf(a);
        }, peek: function peek(a) {
            a = a || 1;return this.index + a < this.text.length ? this.text.charAt(this.index + a) : !1;
        }, isNumber: function isNumber(a) {
            return "0" <= a && "9" >= a && "string" === typeof a;
        }, isWhitespace: function isWhitespace(a) {
            return " " === a || "\r" === a || "\t" === a || "\n" === a || "\v" === a || "\xA0" === a;
        }, isIdentifierStart: function isIdentifierStart(a) {
            return this.options.isIdentifierStart ? this.options.isIdentifierStart(a, this.codePointAt(a)) : this.isValidIdentifierStart(a);
        }, isValidIdentifierStart: function isValidIdentifierStart(a) {
            return "a" <= a && "z" >= a || "A" <= a && "Z" >= a || "_" === a || "$" === a;
        }, isIdentifierContinue: function isIdentifierContinue(a) {
            return this.options.isIdentifierContinue ? this.options.isIdentifierContinue(a, this.codePointAt(a)) : this.isValidIdentifierContinue(a);
        }, isValidIdentifierContinue: function isValidIdentifierContinue(a, b) {
            return this.isValidIdentifierStart(a, b) || this.isNumber(a);
        }, codePointAt: function codePointAt(a) {
            return 1 === a.length ? a.charCodeAt(0) : (a.charCodeAt(0) << 10) + a.charCodeAt(1) - 56613888;
        }, peekMultichar: function peekMultichar() {
            var a = this.text.charAt(this.index),
                b = this.peek();if (!b) return a;var d = a.charCodeAt(0),
                c = b.charCodeAt(0);return 55296 <= d && 56319 >= d && 56320 <= c && 57343 >= c ? a + b : a;
        }, isExpOperator: function isExpOperator(a) {
            return "-" === a || "+" === a || this.isNumber(a);
        }, throwError: function throwError(a, b, d) {
            d = d || this.index;b = u(b) ? "s " + b + "-" + this.index + " [" + this.text.substring(b, d) + "]" : " " + d;throw Ua("lexerr", a, b, this.text);
        }, readNumber: function readNumber() {
            for (var a = "", b = this.index; this.index < this.text.length;) {
                var d = P(this.text.charAt(this.index));
                if ("." === d || this.isNumber(d)) a += d;else {
                    var c = this.peek();if ("e" === d && this.isExpOperator(c)) a += d;else if (this.isExpOperator(d) && c && this.isNumber(c) && "e" === a.charAt(a.length - 1)) a += d;else if (!this.isExpOperator(d) || c && this.isNumber(c) || "e" !== a.charAt(a.length - 1)) break;else this.throwError("Invalid exponent");
                }this.index++;
            }this.tokens.push({ index: b, text: a, constant: !0, value: Number(a) });
        }, readIdent: function readIdent() {
            var a = this.index;for (this.index += this.peekMultichar().length; this.index < this.text.length;) {
                var b = this.peekMultichar();if (!this.isIdentifierContinue(b)) break;this.index += b.length;
            }this.tokens.push({ index: a, text: this.text.slice(a, this.index), identifier: !0 });
        }, readString: function readString(a) {
            var b = this.index;this.index++;for (var d = "", c = a, e = !1; this.index < this.text.length;) {
                var f = this.text.charAt(this.index),
                    c = c + f;if (e) "u" === f ? (e = this.text.substring(this.index + 1, this.index + 5), e.match(/[\da-f]{4}/i) || this.throwError("Invalid unicode escape [\\u" + e + "]"), this.index += 4, d += String.fromCharCode(parseInt(e, 16))) : d += $g[f] || f, e = !1;else if ("\\" === f) e = !0;else {
                    if (f === a) {
                        this.index++;this.tokens.push({ index: b, text: c, constant: !0, value: d });return;
                    }d += f;
                }this.index++;
            }this.throwError("Unterminated quote", b);
        } };var s = function s(a, b) {
        this.lexer = a;this.options = b;
    };s.Program = "Program";s.ExpressionStatement = "ExpressionStatement";s.AssignmentExpression = "AssignmentExpression";s.ConditionalExpression = "ConditionalExpression";s.LogicalExpression = "LogicalExpression";s.BinaryExpression = "BinaryExpression";s.UnaryExpression = "UnaryExpression";
    s.CallExpression = "CallExpression";s.MemberExpression = "MemberExpression";s.Identifier = "Identifier";s.Literal = "Literal";s.ArrayExpression = "ArrayExpression";s.Property = "Property";s.ObjectExpression = "ObjectExpression";s.ThisExpression = "ThisExpression";s.LocalsExpression = "LocalsExpression";s.NGValueParameter = "NGValueParameter";s.prototype = { ast: function ast(a) {
            this.text = a;this.tokens = this.lexer.lex(a);a = this.program();0 !== this.tokens.length && this.throwError("is an unexpected token", this.tokens[0]);return a;
        },
        program: function program() {
            for (var a = [];;) {
                if (0 < this.tokens.length && !this.peek("}", ")", ";", "]") && a.push(this.expressionStatement()), !this.expect(";")) return { type: s.Program, body: a };
            }
        }, expressionStatement: function expressionStatement() {
            return { type: s.ExpressionStatement, expression: this.filterChain() };
        }, filterChain: function filterChain() {
            for (var a = this.expression(); this.expect("|");) {
                a = this.filter(a);
            }return a;
        }, expression: function expression() {
            return this.assignment();
        }, assignment: function assignment() {
            var a = this.ternary();if (this.expect("=")) {
                if (!Ed(a)) throw Ua("lval");
                a = { type: s.AssignmentExpression, left: a, right: this.assignment(), operator: "=" };
            }return a;
        }, ternary: function ternary() {
            var a = this.logicalOR(),
                b,
                d;return this.expect("?") && (b = this.expression(), this.consume(":")) ? (d = this.expression(), { type: s.ConditionalExpression, test: a, alternate: b, consequent: d }) : a;
        }, logicalOR: function logicalOR() {
            for (var a = this.logicalAND(); this.expect("||");) {
                a = { type: s.LogicalExpression, operator: "||", left: a, right: this.logicalAND() };
            }return a;
        }, logicalAND: function logicalAND() {
            for (var a = this.equality(); this.expect("&&");) {
                a = { type: s.LogicalExpression, operator: "&&", left: a, right: this.equality() };
            }return a;
        }, equality: function equality() {
            for (var a = this.relational(), b; b = this.expect("==", "!=", "===", "!==");) {
                a = { type: s.BinaryExpression, operator: b.text, left: a, right: this.relational() };
            }return a;
        }, relational: function relational() {
            for (var a = this.additive(), b; b = this.expect("<", ">", "<=", ">=");) {
                a = { type: s.BinaryExpression, operator: b.text, left: a, right: this.additive() };
            }return a;
        }, additive: function additive() {
            for (var a = this.multiplicative(), b; b = this.expect("+", "-");) {
                a = { type: s.BinaryExpression,
                    operator: b.text, left: a, right: this.multiplicative() };
            }return a;
        }, multiplicative: function multiplicative() {
            for (var a = this.unary(), b; b = this.expect("*", "/", "%");) {
                a = { type: s.BinaryExpression, operator: b.text, left: a, right: this.unary() };
            }return a;
        }, unary: function unary() {
            var a;return (a = this.expect("+", "-", "!")) ? { type: s.UnaryExpression, operator: a.text, prefix: !0, argument: this.unary() } : this.primary();
        }, primary: function primary() {
            var a;this.expect("(") ? (a = this.filterChain(), this.consume(")")) : this.expect("[") ? a = this.arrayDeclaration() : this.expect("{") ? a = this.object() : this.selfReferential.hasOwnProperty(this.peek().text) ? a = sa(this.selfReferential[this.consume().text]) : this.options.literals.hasOwnProperty(this.peek().text) ? a = { type: s.Literal, value: this.options.literals[this.consume().text] } : this.peek().identifier ? a = this.identifier() : this.peek().constant ? a = this.constant() : this.throwError("not a primary expression", this.peek());for (var b; b = this.expect("(", "[", ".");) {
                "(" === b.text ? (a = { type: s.CallExpression, callee: a, arguments: this.parseArguments() }, this.consume(")")) : "[" === b.text ? (a = { type: s.MemberExpression, object: a, property: this.expression(), computed: !0 }, this.consume("]")) : "." === b.text ? a = { type: s.MemberExpression, object: a, property: this.identifier(), computed: !1 } : this.throwError("IMPOSSIBLE");
            }return a;
        }, filter: function filter(a) {
            a = [a];for (var b = { type: s.CallExpression, callee: this.identifier(), arguments: a, filter: !0 }; this.expect(":");) {
                a.push(this.expression());
            }return b;
        }, parseArguments: function parseArguments() {
            var a = [];if (")" !== this.peekToken().text) {
                do {
                    a.push(this.filterChain());
                } while (this.expect(","));
            }return a;
        }, identifier: function identifier() {
            var a = this.consume();a.identifier || this.throwError("is not a valid identifier", a);return { type: s.Identifier, name: a.text };
        }, constant: function constant() {
            return { type: s.Literal, value: this.consume().value };
        }, arrayDeclaration: function arrayDeclaration() {
            var a = [];if ("]" !== this.peekToken().text) {
                do {
                    if (this.peek("]")) break;a.push(this.expression());
                } while (this.expect(","));
            }this.consume("]");return { type: s.ArrayExpression, elements: a };
        }, object: function object() {
            var a = [],
                b;if ("}" !== this.peekToken().text) {
                do {
                    if (this.peek("}")) break;
                    b = { type: s.Property, kind: "init" };this.peek().constant ? (b.key = this.constant(), b.computed = !1, this.consume(":"), b.value = this.expression()) : this.peek().identifier ? (b.key = this.identifier(), b.computed = !1, this.peek(":") ? (this.consume(":"), b.value = this.expression()) : b.value = b.key) : this.peek("[") ? (this.consume("["), b.key = this.expression(), this.consume("]"), b.computed = !0, this.consume(":"), b.value = this.expression()) : this.throwError("invalid key", this.peek());a.push(b);
                } while (this.expect(","));
            }this.consume("}");
            return { type: s.ObjectExpression, properties: a };
        }, throwError: function throwError(a, b) {
            throw Ua("syntax", b.text, a, b.index + 1, this.text, this.text.substring(b.index));
        }, consume: function consume(a) {
            if (0 === this.tokens.length) throw Ua("ueoe", this.text);var b = this.expect(a);b || this.throwError("is unexpected, expecting [" + a + "]", this.peek());return b;
        }, peekToken: function peekToken() {
            if (0 === this.tokens.length) throw Ua("ueoe", this.text);return this.tokens[0];
        }, peek: function peek(a, b, d, c) {
            return this.peekAhead(0, a, b, d, c);
        }, peekAhead: function peekAhead(a, b, d, c, e) {
            if (this.tokens.length > a) {
                a = this.tokens[a];var f = a.text;if (f === b || f === d || f === c || f === e || !(b || d || c || e)) return a;
            }return !1;
        }, expect: function expect(a, b, d, c) {
            return (a = this.peek(a, b, d, c)) ? (this.tokens.shift(), a) : !1;
        }, selfReferential: { "this": { type: s.ThisExpression }, $locals: { type: s.LocalsExpression } } };Hd.prototype = { compile: function compile(a) {
            var b = this;a = this.astBuilder.ast(a);this.state = { nextId: 0, filters: {}, fn: { vars: [], body: [], own: {} }, assign: { vars: [], body: [], own: {} }, inputs: [] };U(a, b.$filter);var d = "",
                c;this.stage = "assign";
            if (c = Fd(a)) this.state.computing = "assign", d = this.nextId(), this.recurse(c, d), this.return_(d), d = "fn.assign=" + this.generateFunction("assign", "s,v,l");c = Dd(a.body);b.stage = "inputs";p(c, function (a, c) {
                var d = "fn" + c;b.state[d] = { vars: [], body: [], own: {} };b.state.computing = d;var h = b.nextId();b.recurse(a, h);b.return_(h);b.state.inputs.push(d);a.watchId = c;
            });this.state.computing = "fn";this.stage = "main";this.recurse(a);d = '"' + this.USE + " " + this.STRICT + '";\n' + this.filterPrefix() + "var fn=" + this.generateFunction("fn", "s,l,a,i") + d + this.watchFns() + "return fn;";d = new Function("$filter", "getStringValue", "ifDefined", "plus", d)(this.$filter, zg, Ag, Cd);this.state = this.stage = void 0;d.literal = Gd(a);d.constant = a.constant;return d;
        }, USE: "use", STRICT: "strict", watchFns: function watchFns() {
            var a = [],
                b = this.state.inputs,
                d = this;p(b, function (b) {
                a.push("var " + b + "=" + d.generateFunction(b, "s"));
            });b.length && a.push("fn.inputs=[" + b.join(",") + "];");return a.join("");
        }, generateFunction: function generateFunction(a, b) {
            return "function(" + b + "){" + this.varsPrefix(a) + this.body(a) + "};";
        },
        filterPrefix: function filterPrefix() {
            var a = [],
                b = this;p(this.state.filters, function (d, c) {
                a.push(d + "=$filter(" + b.escape(c) + ")");
            });return a.length ? "var " + a.join(",") + ";" : "";
        }, varsPrefix: function varsPrefix(a) {
            return this.state[a].vars.length ? "var " + this.state[a].vars.join(",") + ";" : "";
        }, body: function body(a) {
            return this.state[a].body.join("");
        }, recurse: function recurse(a, b, d, c, e, f) {
            var g,
                h,
                k = this,
                l,
                m,
                n;c = c || A;if (!f && u(a.watchId)) b = b || this.nextId(), this.if_("i", this.lazyAssign(b, this.computedMember("i", a.watchId)), this.lazyRecurse(a, b, d, c, e, !0));else switch (a.type) {case s.Program:
                    p(a.body, function (b, c) {
                        k.recurse(b.expression, void 0, void 0, function (a) {
                            h = a;
                        });c !== a.body.length - 1 ? k.current().body.push(h, ";") : k.return_(h);
                    });break;case s.Literal:
                    m = this.escape(a.value);this.assign(b, m);c(b || m);break;case s.UnaryExpression:
                    this.recurse(a.argument, void 0, void 0, function (a) {
                        h = a;
                    });m = a.operator + "(" + this.ifDefined(h, 0) + ")";this.assign(b, m);c(m);break;case s.BinaryExpression:
                    this.recurse(a.left, void 0, void 0, function (a) {
                        g = a;
                    });this.recurse(a.right, void 0, void 0, function (a) {
                        h = a;
                    });m = "+" === a.operator ? this.plus(g, h) : "-" === a.operator ? this.ifDefined(g, 0) + a.operator + this.ifDefined(h, 0) : "(" + g + ")" + a.operator + "(" + h + ")";this.assign(b, m);c(m);break;case s.LogicalExpression:
                    b = b || this.nextId();k.recurse(a.left, b);k.if_("&&" === a.operator ? b : k.not(b), k.lazyRecurse(a.right, b));c(b);break;case s.ConditionalExpression:
                    b = b || this.nextId();k.recurse(a.test, b);k.if_(b, k.lazyRecurse(a.alternate, b), k.lazyRecurse(a.consequent, b));c(b);break;case s.Identifier:
                    b = b || this.nextId();
                    d && (d.context = "inputs" === k.stage ? "s" : this.assign(this.nextId(), this.getHasOwnProperty("l", a.name) + "?l:s"), d.computed = !1, d.name = a.name);k.if_("inputs" === k.stage || k.not(k.getHasOwnProperty("l", a.name)), function () {
                        k.if_("inputs" === k.stage || "s", function () {
                            e && 1 !== e && k.if_(k.isNull(k.nonComputedMember("s", a.name)), k.lazyAssign(k.nonComputedMember("s", a.name), "{}"));k.assign(b, k.nonComputedMember("s", a.name));
                        });
                    }, b && k.lazyAssign(b, k.nonComputedMember("l", a.name)));c(b);break;case s.MemberExpression:
                    g = d && (d.context = this.nextId()) || this.nextId();b = b || this.nextId();k.recurse(a.object, g, void 0, function () {
                        k.if_(k.notNull(g), function () {
                            a.computed ? (h = k.nextId(), k.recurse(a.property, h), k.getStringValue(h), e && 1 !== e && k.if_(k.not(k.computedMember(g, h)), k.lazyAssign(k.computedMember(g, h), "{}")), m = k.computedMember(g, h), k.assign(b, m), d && (d.computed = !0, d.name = h)) : (e && 1 !== e && k.if_(k.isNull(k.nonComputedMember(g, a.property.name)), k.lazyAssign(k.nonComputedMember(g, a.property.name), "{}")), m = k.nonComputedMember(g, a.property.name), k.assign(b, m), d && (d.computed = !1, d.name = a.property.name));
                        }, function () {
                            k.assign(b, "undefined");
                        });c(b);
                    }, !!e);break;case s.CallExpression:
                    b = b || this.nextId();a.filter ? (h = k.filter(a.callee.name), l = [], p(a.arguments, function (a) {
                        var b = k.nextId();k.recurse(a, b);l.push(b);
                    }), m = h + "(" + l.join(",") + ")", k.assign(b, m), c(b)) : (h = k.nextId(), g = {}, l = [], k.recurse(a.callee, h, g, function () {
                        k.if_(k.notNull(h), function () {
                            p(a.arguments, function (b) {
                                k.recurse(b, a.constant ? void 0 : k.nextId(), void 0, function (a) {
                                    l.push(a);
                                });
                            });
                            m = g.name ? k.member(g.context, g.name, g.computed) + "(" + l.join(",") + ")" : h + "(" + l.join(",") + ")";k.assign(b, m);
                        }, function () {
                            k.assign(b, "undefined");
                        });c(b);
                    }));break;case s.AssignmentExpression:
                    h = this.nextId();g = {};this.recurse(a.left, void 0, g, function () {
                        k.if_(k.notNull(g.context), function () {
                            k.recurse(a.right, h);m = k.member(g.context, g.name, g.computed) + a.operator + h;k.assign(b, m);c(b || m);
                        });
                    }, 1);break;case s.ArrayExpression:
                    l = [];p(a.elements, function (b) {
                        k.recurse(b, a.constant ? void 0 : k.nextId(), void 0, function (a) {
                            l.push(a);
                        });
                    });
                    m = "[" + l.join(",") + "]";this.assign(b, m);c(b || m);break;case s.ObjectExpression:
                    l = [];n = !1;p(a.properties, function (a) {
                        a.computed && (n = !0);
                    });n ? (b = b || this.nextId(), this.assign(b, "{}"), p(a.properties, function (a) {
                        a.computed ? (g = k.nextId(), k.recurse(a.key, g)) : g = a.key.type === s.Identifier ? a.key.name : "" + a.key.value;h = k.nextId();k.recurse(a.value, h);k.assign(k.member(b, g, a.computed), h);
                    })) : (p(a.properties, function (b) {
                        k.recurse(b.value, a.constant ? void 0 : k.nextId(), void 0, function (a) {
                            l.push(k.escape(b.key.type === s.Identifier ? b.key.name : "" + b.key.value) + ":" + a);
                        });
                    }), m = "{" + l.join(",") + "}", this.assign(b, m));c(b || m);break;case s.ThisExpression:
                    this.assign(b, "s");c(b || "s");break;case s.LocalsExpression:
                    this.assign(b, "l");c(b || "l");break;case s.NGValueParameter:
                    this.assign(b, "v"), c(b || "v");}
        }, getHasOwnProperty: function getHasOwnProperty(a, b) {
            var d = a + "." + b,
                c = this.current().own;c.hasOwnProperty(d) || (c[d] = this.nextId(!1, a + "&&(" + this.escape(b) + " in " + a + ")"));return c[d];
        }, assign: function assign(a, b) {
            if (a) return this.current().body.push(a, "=", b, ";"), a;
        }, filter: function filter(a) {
            this.state.filters.hasOwnProperty(a) || (this.state.filters[a] = this.nextId(!0));return this.state.filters[a];
        }, ifDefined: function ifDefined(a, b) {
            return "ifDefined(" + a + "," + this.escape(b) + ")";
        }, plus: function plus(a, b) {
            return "plus(" + a + "," + b + ")";
        }, return_: function return_(a) {
            this.current().body.push("return ", a, ";");
        }, if_: function if_(a, b, d) {
            if (!0 === a) b();else {
                var c = this.current().body;c.push("if(", a, "){");b();c.push("}");d && (c.push("else{"), d(), c.push("}"));
            }
        }, not: function not(a) {
            return "!(" + a + ")";
        }, isNull: function isNull(a) {
            return a + "==null";
        }, notNull: function notNull(a) {
            return a + "!=null";
        }, nonComputedMember: function nonComputedMember(a, b) {
            var d = /[^$_a-zA-Z0-9]/g;return (/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(b) ? a + "." + b : a + '["' + b.replace(d, this.stringEscapeFn) + '"]'
            );
        }, computedMember: function computedMember(a, b) {
            return a + "[" + b + "]";
        }, member: function member(a, b, d) {
            return d ? this.computedMember(a, b) : this.nonComputedMember(a, b);
        }, getStringValue: function getStringValue(a) {
            this.assign(a, "getStringValue(" + a + ")");
        }, lazyRecurse: function lazyRecurse(a, b, d, c, e, f) {
            var g = this;return function () {
                g.recurse(a, b, d, c, e, f);
            };
        }, lazyAssign: function lazyAssign(a, b) {
            var d = this;return function () {
                d.assign(a, b);
            };
        }, stringEscapeRegex: /[^ a-zA-Z0-9]/g,
        stringEscapeFn: function stringEscapeFn(a) {
            return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
        }, escape: function escape(a) {
            if (D(a)) return "'" + a.replace(this.stringEscapeRegex, this.stringEscapeFn) + "'";if (ba(a)) return a.toString();if (!0 === a) return "true";if (!1 === a) return "false";if (null === a) return "null";if ("undefined" === typeof a) return "undefined";throw Ua("esc");
        }, nextId: function nextId(a, b) {
            var d = "v" + this.state.nextId++;a || this.current().vars.push(d + (b ? "=" + b : ""));return d;
        }, current: function current() {
            return this.state[this.state.computing];
        } };
    Id.prototype = { compile: function compile(a) {
            var b = this;a = this.astBuilder.ast(a);U(a, b.$filter);var d, c;if (d = Fd(a)) c = this.recurse(d);d = Dd(a.body);var e;d && (e = [], p(d, function (a, c) {
                var d = b.recurse(a);a.input = d;e.push(d);a.watchId = c;
            }));var f = [];p(a.body, function (a) {
                f.push(b.recurse(a.expression));
            });d = 0 === a.body.length ? A : 1 === a.body.length ? f[0] : function (a, b) {
                var c;p(f, function (d) {
                    c = d(a, b);
                });return c;
            };c && (d.assign = function (a, b, d) {
                return c(a, d, b);
            });e && (d.inputs = e);d.literal = Gd(a);d.constant = a.constant;return d;
        }, recurse: function recurse(a, b, d) {
            var c,
                e,
                f = this,
                g;if (a.input) return this.inputs(a.input, a.watchId);switch (a.type) {case s.Literal:
                    return this.value(a.value, b);case s.UnaryExpression:
                    return e = this.recurse(a.argument), this["unary" + a.operator](e, b);case s.BinaryExpression:
                    return c = this.recurse(a.left), e = this.recurse(a.right), this["binary" + a.operator](c, e, b);case s.LogicalExpression:
                    return c = this.recurse(a.left), e = this.recurse(a.right), this["binary" + a.operator](c, e, b);case s.ConditionalExpression:
                    return this["ternary?:"](this.recurse(a.test), this.recurse(a.alternate), this.recurse(a.consequent), b);case s.Identifier:
                    return f.identifier(a.name, b, d);case s.MemberExpression:
                    return c = this.recurse(a.object, !1, !!d), a.computed || (e = a.property.name), a.computed && (e = this.recurse(a.property)), a.computed ? this.computedMember(c, e, b, d) : this.nonComputedMember(c, e, b, d);case s.CallExpression:
                    return g = [], p(a.arguments, function (a) {
                        g.push(f.recurse(a));
                    }), a.filter && (e = this.$filter(a.callee.name)), a.filter || (e = this.recurse(a.callee, !0)), a.filter ? function (a, c, d, f) {
                        for (var n = [], q = 0; q < g.length; ++q) {
                            n.push(g[q](a, c, d, f));
                        }a = e.apply(void 0, n, f);return b ? { context: void 0, name: void 0, value: a } : a;
                    } : function (a, c, d, f) {
                        var n = e(a, c, d, f),
                            q;if (null != n.value) {
                            q = [];for (var r = 0; r < g.length; ++r) {
                                q.push(g[r](a, c, d, f));
                            }q = n.value.apply(n.context, q);
                        }return b ? { value: q } : q;
                    };case s.AssignmentExpression:
                    return c = this.recurse(a.left, !0, 1), e = this.recurse(a.right), function (a, d, f, g) {
                        var n = c(a, d, f, g);a = e(a, d, f, g);n.context[n.name] = a;return b ? { value: a } : a;
                    };case s.ArrayExpression:
                    return g = [], p(a.elements, function (a) {
                        g.push(f.recurse(a));
                    }), function (a, c, d, e) {
                        for (var f = [], q = 0; q < g.length; ++q) {
                            f.push(g[q](a, c, d, e));
                        }return b ? { value: f } : f;
                    };case s.ObjectExpression:
                    return g = [], p(a.properties, function (a) {
                        a.computed ? g.push({ key: f.recurse(a.key), computed: !0, value: f.recurse(a.value) }) : g.push({ key: a.key.type === s.Identifier ? a.key.name : "" + a.key.value, computed: !1, value: f.recurse(a.value) });
                    }), function (a, c, d, e) {
                        for (var f = {}, q = 0; q < g.length; ++q) {
                            g[q].computed ? f[g[q].key(a, c, d, e)] = g[q].value(a, c, d, e) : f[g[q].key] = g[q].value(a, c, d, e);
                        }return b ? { value: f } : f;
                    };case s.ThisExpression:
                    return function (a) {
                        return b ? { value: a } : a;
                    };case s.LocalsExpression:
                    return function (a, c) {
                        return b ? { value: c } : c;
                    };case s.NGValueParameter:
                    return function (a, c, d) {
                        return b ? { value: d } : d;
                    };}
        }, "unary+": function unary(a, b) {
            return function (d, c, e, f) {
                d = a(d, c, e, f);d = u(d) ? +d : 0;return b ? { value: d } : d;
            };
        }, "unary-": function unary(a, b) {
            return function (d, c, e, f) {
                d = a(d, c, e, f);d = u(d) ? -d : -0;return b ? { value: d } : d;
            };
        }, "unary!": function unary(a, b) {
            return function (d, c, e, f) {
                d = !a(d, c, e, f);return b ? { value: d } : d;
            };
        }, "binary+": function binary(a, b, d) {
            return function (c, e, f, g) {
                var h = a(c, e, f, g);c = b(c, e, f, g);h = Cd(h, c);return d ? { value: h } : h;
            };
        }, "binary-": function binary(a, b, d) {
            return function (c, e, f, g) {
                var h = a(c, e, f, g);c = b(c, e, f, g);h = (u(h) ? h : 0) - (u(c) ? c : 0);return d ? { value: h } : h;
            };
        }, "binary*": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) * b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary/": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) / b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary%": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) % b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary===": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) === b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary!==": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) !== b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary==": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) == b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary!=": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) != b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary<": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) < b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary>": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) > b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary<=": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) <= b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary>=": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) >= b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary&&": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) && b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "binary||": function binary(a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) || b(c, e, f, g);return d ? { value: c } : c;
            };
        }, "ternary?:": function ternary(a, b, d, c) {
            return function (e, f, g, h) {
                e = a(e, f, g, h) ? b(e, f, g, h) : d(e, f, g, h);return c ? { value: e } : e;
            };
        }, value: function value(a, b) {
            return function () {
                return b ? { context: void 0, name: void 0, value: a } : a;
            };
        }, identifier: function identifier(a, b, d) {
            return function (c, e, f, g) {
                c = e && a in e ? e : c;d && 1 !== d && c && null == c[a] && (c[a] = {});e = c ? c[a] : void 0;return b ? { context: c, name: a, value: e } : e;
            };
        }, computedMember: function computedMember(a, b, d, c) {
            return function (e, f, g, h) {
                var k = a(e, f, g, h),
                    l,
                    m;null != k && (l = b(e, f, g, h), l += "", c && 1 !== c && k && !k[l] && (k[l] = {}), m = k[l]);return d ? { context: k, name: l, value: m } : m;
            };
        }, nonComputedMember: function nonComputedMember(a, b, d, c) {
            return function (e, f, g, h) {
                e = a(e, f, g, h);c && 1 !== c && e && null == e[b] && (e[b] = {});f = null != e ? e[b] : void 0;return d ? { context: e, name: b, value: f } : f;
            };
        }, inputs: function inputs(a, b) {
            return function (d, c, e, f) {
                return f ? f[b] : a(d, c, e);
            };
        } };var tc = function tc(a, b, d) {
        this.lexer = a;this.$filter = b;this.options = d;this.ast = new s(a, d);this.astCompiler = d.csp ? new Id(this.ast, b) : new Hd(this.ast, b);
    };tc.prototype = { constructor: tc,
        parse: function parse(a) {
            return this.astCompiler.compile(a);
        } };var ta = M("$sce"),
        oa = { HTML: "html", CSS: "css", URL: "url", RESOURCE_URL: "resourceUrl", JS: "js" },
        uc = /_([a-z])/g,
        Dg = M("$compile"),
        aa = w.document.createElement("a"),
        Md = Ca(w.location.href);Nd.$inject = ["$document"];$c.$inject = ["$provide"];var Ud = 22,
        Td = ".",
        wc = "0";Od.$inject = ["$locale"];Qd.$inject = ["$locale"];var Og = { yyyy: Y("FullYear", 4, 0, !1, !0), yy: Y("FullYear", 2, 0, !0, !0), y: Y("FullYear", 1, 0, !1, !0), MMMM: nb("Month"), MMM: nb("Month", !0), MM: Y("Month", 2, 1), M: Y("Month", 1, 1), LLLL: nb("Month", !1, !0), dd: Y("Date", 2), d: Y("Date", 1), HH: Y("Hours", 2), H: Y("Hours", 1), hh: Y("Hours", 2, -12), h: Y("Hours", 1, -12), mm: Y("Minutes", 2), m: Y("Minutes", 1), ss: Y("Seconds", 2), s: Y("Seconds", 1), sss: Y("Milliseconds", 3), EEEE: nb("Day"), EEE: nb("Day", !0), a: function a(_a, b) {
            return 12 > _a.getHours() ? b.AMPMS[0] : b.AMPMS[1];
        }, Z: function Z(a, b, d) {
            a = -1 * d;return a = (0 <= a ? "+" : "") + (Lb(Math[0 < a ? "floor" : "ceil"](a / 60), 2) + Lb(Math.abs(a % 60), 2));
        }, ww: Wd(2), w: Wd(1), G: xc, GG: xc, GGG: xc, GGGG: function GGGG(a, b) {
            return 0 >= a.getFullYear() ? b.ERANAMES[0] : b.ERANAMES[1];
        } },
        Ng = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,
        Mg = /^-?\d+$/;Pd.$inject = ["$locale"];var Hg = la(P),
        Ig = la(vb);Rd.$inject = ["$parse"];var Fe = la({ restrict: "E", compile: function compile(a, b) {
            if (!b.href && !b.xlinkHref) return function (a, b) {
                if ("a" === b[0].nodeName.toLowerCase()) {
                    var e = "[object SVGAnimatedString]" === ma.call(b.prop("href")) ? "xlink:href" : "href";b.on("click", function (a) {
                        b.attr(e) || a.preventDefault();
                    });
                }
            };
        } }),
        wb = {};p(Gb, function (a, b) {
        function d(a, d, e) {
            a.$watch(e[c], function (a) {
                e.$set(b, !!a);
            });
        }if ("multiple" !== a) {
            var c = Ba("ng-" + b),
                e = d;"checked" === a && (e = function e(a, b, _e) {
                _e.ngModel !== _e[c] && d(a, b, _e);
            });wb[c] = function () {
                return { restrict: "A", priority: 100, link: e };
            };
        }
    });p(pd, function (a, b) {
        wb[b] = function () {
            return { priority: 100, link: function link(a, c, e) {
                    if ("ngPattern" === b && "/" === e.ngPattern.charAt(0) && (c = e.ngPattern.match(Sg))) {
                        e.$set("ngPattern", new RegExp(c[1], c[2]));return;
                    }a.$watch(e[b], function (a) {
                        e.$set(b, a);
                    });
                } };
        };
    });p(["src", "srcset", "href"], function (a) {
        var b = Ba("ng-" + a);wb[b] = function () {
            return { priority: 99, link: function link(d, c, e) {
                    var f = a,
                        g = a;"href" === a && "[object SVGAnimatedString]" === ma.call(c.prop("href")) && (g = "xlinkHref", e.$attr[g] = "xlink:href", f = null);e.$observe(b, function (b) {
                        b ? (e.$set(g, b), za && f && c.prop(f, e[g])) : "href" === a && e.$set(g, null);
                    });
                } };
        };
    });var Nb = { $addControl: A, $$renameControl: function $$renameControl(a, b) {
            a.$name = b;
        }, $removeControl: A, $setValidity: A, $setDirty: A, $setPristine: A, $setSubmitted: A };Mb.$inject = ["$element", "$attrs", "$scope", "$animate", "$interpolate"];Mb.prototype = { $rollbackViewValue: function $rollbackViewValue() {
            p(this.$$controls, function (a) {
                a.$rollbackViewValue();
            });
        }, $commitViewValue: function $commitViewValue() {
            p(this.$$controls, function (a) {
                a.$commitViewValue();
            });
        }, $addControl: function $addControl(a) {
            Ka(a.$name, "input");this.$$controls.push(a);a.$name && (this[a.$name] = a);a.$$parentForm = this;
        }, $$renameControl: function $$renameControl(a, b) {
            var d = a.$name;this[d] === a && delete this[d];this[b] = a;a.$name = b;
        }, $removeControl: function $removeControl(a) {
            a.$name && this[a.$name] === a && delete this[a.$name];p(this.$pending, function (b, d) {
                this.$setValidity(d, null, a);
            }, this);p(this.$error, function (b, d) {
                this.$setValidity(d, null, a);
            }, this);p(this.$$success, function (b, d) {
                this.$setValidity(d, null, a);
            }, this);$a(this.$$controls, a);a.$$parentForm = Nb;
        }, $setDirty: function $setDirty() {
            this.$$animate.removeClass(this.$$element, Va);this.$$animate.addClass(this.$$element, Sb);this.$dirty = !0;this.$pristine = !1;this.$$parentForm.$setDirty();
        }, $setPristine: function $setPristine() {
            this.$$animate.setClass(this.$$element, Va, Sb + " ng-submitted");this.$dirty = !1;this.$pristine = !0;this.$submitted = !1;p(this.$$controls, function (a) {
                a.$setPristine();
            });
        }, $setUntouched: function $setUntouched() {
            p(this.$$controls, function (a) {
                a.$setUntouched();
            });
        }, $setSubmitted: function $setSubmitted() {
            this.$$animate.addClass(this.$$element, "ng-submitted");this.$submitted = !0;this.$$parentForm.$setSubmitted();
        } };Zd({ clazz: Mb, set: function set(a, b, d) {
            var c = a[b];c ? -1 === c.indexOf(d) && c.push(d) : a[b] = [d];
        }, unset: function unset(a, b, d) {
            var c = a[b];c && ($a(c, d), 0 === c.length && delete a[b]);
        } });var ge = function ge(a) {
        return ["$timeout", "$parse", function (b, d) {
            function c(a) {
                return "" === a ? d('this[""]').assign : d(a).assign || A;
            }return { name: "form", restrict: a ? "EAC" : "E", require: ["form", "^^?form"], controller: Mb, compile: function compile(d, f) {
                    d.addClass(Va).addClass(ob);var g = f.name ? "name" : a && f.ngForm ? "ngForm" : !1;return { pre: function pre(a, d, e, f) {
                            var n = f[0];if (!("action" in e)) {
                                var q = function q(b) {
                                    a.$apply(function () {
                                        n.$commitViewValue();n.$setSubmitted();
                                    });b.preventDefault();
                                };d[0].addEventListener("submit", q);d.on("$destroy", function () {
                                    b(function () {
                                        d[0].removeEventListener("submit", q);
                                    }, 0, !1);
                                });
                            }(f[1] || n.$$parentForm).$addControl(n);
                            var r = g ? c(n.$name) : A;g && (r(a, n), e.$observe(g, function (b) {
                                n.$name !== b && (r(a, void 0), n.$$parentForm.$$renameControl(n, b), r = c(n.$name), r(a, n));
                            }));d.on("$destroy", function () {
                                n.$$parentForm.$removeControl(n);r(a, void 0);R(n, Nb);
                            });
                        } };
                } };
        }];
    },
        Ge = ge(),
        Se = ge(!0),
        Pg = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,
        ah = /^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,
        bh = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/,
        Qg = /^\s*(-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,
        he = /^(\d{4,})-(\d{2})-(\d{2})$/,
        ie = /^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
        Ec = /^(\d{4,})-W(\d\d)$/,
        je = /^(\d{4,})-(\d\d)$/,
        ke = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
        ae = V();p(["date", "datetime-local", "month", "time", "week"], function (a) {
        ae[a] = !0;
    });var le = { text: function text(a, b, d, c, e, f) {
            Ra(a, b, d, c, e, f);zc(c);
        }, date: pb("date", he, Ob(he, ["yyyy", "MM", "dd"]), "yyyy-MM-dd"), "datetime-local": pb("datetimelocal", ie, Ob(ie, "yyyy MM dd HH mm ss sss".split(" ")), "yyyy-MM-ddTHH:mm:ss.sss"), time: pb("time", ke, Ob(ke, ["HH", "mm", "ss", "sss"]), "HH:mm:ss.sss"), week: pb("week", Ec, function (a, b) {
            if (ga(a)) return a;if (D(a)) {
                Ec.lastIndex = 0;var d = Ec.exec(a);if (d) {
                    var c = +d[1],
                        e = +d[2],
                        f = d = 0,
                        g = 0,
                        h = 0,
                        k = Vd(c),
                        e = 7 * (e - 1);b && (d = b.getHours(), f = b.getMinutes(), g = b.getSeconds(), h = b.getMilliseconds());return new Date(c, 0, k.getDate() + e, d, f, g, h);
                }
            }return NaN;
        }, "yyyy-Www"), month: pb("month", je, Ob(je, ["yyyy", "MM"]), "yyyy-MM"), number: function number(a, b, d, c, e, f) {
            Ac(a, b, d, c);be(c);Ra(a, b, d, c, e, f);var g, h;if (u(d.min) || d.ngMin) c.$validators.min = function (a) {
                return c.$isEmpty(a) || x(g) || a >= g;
            }, d.$observe("min", function (a) {
                g = Sa(a);c.$validate();
            });if (u(d.max) || d.ngMax) c.$validators.max = function (a) {
                return c.$isEmpty(a) || x(h) || a <= h;
            }, d.$observe("max", function (a) {
                h = Sa(a);c.$validate();
            });if (u(d.step) || d.ngStep) {
                var k;c.$validators.step = function (a, b) {
                    return c.$isEmpty(b) || x(k) || ce(b, g || 0, k);
                };d.$observe("step", function (a) {
                    k = Sa(a);c.$validate();
                });
            }
        }, url: function url(a, b, d, c, e, f) {
            Ra(a, b, d, c, e, f);zc(c);c.$$parserName = "url";c.$validators.url = function (a, b) {
                var d = a || b;return c.$isEmpty(d) || ah.test(d);
            };
        }, email: function email(a, b, d, c, e, f) {
            Ra(a, b, d, c, e, f);zc(c);c.$$parserName = "email";c.$validators.email = function (a, b) {
                var d = a || b;return c.$isEmpty(d) || bh.test(d);
            };
        }, radio: function radio(a, b, d, c) {
            var e = !d.ngTrim || "false" !== S(d.ngTrim);x(d.name) && b.attr("name", ++rb);b.on("click", function (a) {
                var g;b[0].checked && (g = d.value, e && (g = S(g)), c.$setViewValue(g, a && a.type));
            });c.$render = function () {
                var a = d.value;e && (a = S(a));b[0].checked = a === c.$viewValue;
            };
            d.$observe("value", c.$render);
        }, range: function range(a, b, d, c, e, f) {
            function g(a, c) {
                b.attr(a, d[a]);d.$observe(a, c);
            }function h(a) {
                n = Sa(a);da(c.$modelValue) || (m ? (a = b.val(), n > a && (a = n, b.val(a)), c.$setViewValue(a)) : c.$validate());
            }function k(a) {
                q = Sa(a);da(c.$modelValue) || (m ? (a = b.val(), q < a && (b.val(q), a = q < n ? n : q), c.$setViewValue(a)) : c.$validate());
            }function l(a) {
                r = Sa(a);da(c.$modelValue) || (m && c.$viewValue !== b.val() ? c.$setViewValue(b.val()) : c.$validate());
            }Ac(a, b, d, c);be(c);Ra(a, b, d, c, e, f);var m = c.$$hasNativeValidators && "range" === b[0].type,
                n = m ? 0 : void 0,
                q = m ? 100 : void 0,
                r = m ? 1 : void 0,
                p = b[0].validity;a = u(d.min);e = u(d.max);f = u(d.step);var s = c.$render;c.$render = m && u(p.rangeUnderflow) && u(p.rangeOverflow) ? function () {
                s();c.$setViewValue(b.val());
            } : s;a && (c.$validators.min = m ? function () {
                return !0;
            } : function (a, b) {
                return c.$isEmpty(b) || x(n) || b >= n;
            }, g("min", h));e && (c.$validators.max = m ? function () {
                return !0;
            } : function (a, b) {
                return c.$isEmpty(b) || x(q) || b <= q;
            }, g("max", k));f && (c.$validators.step = m ? function () {
                return !p.stepMismatch;
            } : function (a, b) {
                return c.$isEmpty(b) || x(r) || ce(b, n || 0, r);
            }, g("step", l));
        }, checkbox: function checkbox(a, b, d, c, e, f, g, h) {
            var k = de(h, a, "ngTrueValue", d.ngTrueValue, !0),
                l = de(h, a, "ngFalseValue", d.ngFalseValue, !1);b.on("click", function (a) {
                c.$setViewValue(b[0].checked, a && a.type);
            });c.$render = function () {
                b[0].checked = c.$viewValue;
            };c.$isEmpty = function (a) {
                return !1 === a;
            };c.$formatters.push(function (a) {
                return pa(a, k);
            });c.$parsers.push(function (a) {
                return a ? k : l;
            });
        }, hidden: A, button: A, submit: A, reset: A, file: A },
        Uc = ["$browser", "$sniffer", "$filter", "$parse", function (a, b, d, c) {
        return { restrict: "E", require: ["?ngModel"], link: { pre: function pre(e, f, g, h) {
                    h[0] && (le[P(g.type)] || le.text)(e, f, g, h[0], b, a, d, c);
                } } };
    }],
        ch = /^(true|false|\d+)$/,
        kf = function kf() {
        function a(a, d, c) {
            var e = u(c) ? c : 9 === za ? "" : null;a.prop("value", e);d.$set("value", c);
        }return { restrict: "A", priority: 100, compile: function compile(b, d) {
                return ch.test(d.ngValue) ? function (b, d, f) {
                    b = b.$eval(f.ngValue);a(d, f, b);
                } : function (b, d, f) {
                    b.$watch(f.ngValue, function (b) {
                        a(d, f, b);
                    });
                };
            } };
    },
        Ke = ["$compile", function (a) {
        return { restrict: "AC",
            compile: function compile(b) {
                a.$$addBindingClass(b);return function (b, c, e) {
                    a.$$addBindingInfo(c, e.ngBind);c = c[0];b.$watch(e.ngBind, function (a) {
                        c.textContent = $b(a);
                    });
                };
            } };
    }],
        Me = ["$interpolate", "$compile", function (a, b) {
        return { compile: function compile(d) {
                b.$$addBindingClass(d);return function (c, d, f) {
                    c = a(d.attr(f.$attr.ngBindTemplate));b.$$addBindingInfo(d, c.expressions);d = d[0];f.$observe("ngBindTemplate", function (a) {
                        d.textContent = x(a) ? "" : a;
                    });
                };
            } };
    }],
        Le = ["$sce", "$parse", "$compile", function (a, b, d) {
        return { restrict: "A", compile: function compile(c, e) {
                var f = b(e.ngBindHtml),
                    g = b(e.ngBindHtml, function (b) {
                    return a.valueOf(b);
                });d.$$addBindingClass(c);return function (b, c, e) {
                    d.$$addBindingInfo(c, e.ngBindHtml);b.$watch(g, function () {
                        var d = f(b);c.html(a.getTrustedHtml(d) || "");
                    });
                };
            } };
    }],
        jf = la({ restrict: "A", require: "ngModel", link: function link(a, b, d, c) {
            c.$viewChangeListeners.push(function () {
                a.$eval(d.ngChange);
            });
        } }),
        Ne = Cc("", !0),
        Pe = Cc("Odd", 0),
        Oe = Cc("Even", 1),
        Qe = Qa({ compile: function compile(a, b) {
            b.$set("ngCloak", void 0);a.removeClass("ng-cloak");
        } }),
        Re = [function () {
        return { restrict: "A",
            scope: !0, controller: "@", priority: 500 };
    }],
        Zc = {},
        dh = { blur: !0, focus: !0 };p("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function (a) {
        var b = Ba("ng-" + a);Zc[b] = ["$parse", "$rootScope", function (d, c) {
            return { restrict: "A", compile: function compile(e, f) {
                    var g = d(f[b]);return function (b, d) {
                        d.on(a, function (d) {
                            var e = function e() {
                                g(b, { $event: d });
                            };dh[a] && c.$$phase ? b.$evalAsync(e) : b.$apply(e);
                        });
                    };
                } };
        }];
    });var Ue = ["$animate", "$compile", function (a, b) {
        return { multiElement: !0, transclude: "element", priority: 600, terminal: !0, restrict: "A", $$tlb: !0, link: function link(d, c, e, f, g) {
                var h, k, l;d.$watch(e.ngIf, function (d) {
                    d ? k || g(function (d, f) {
                        k = f;d[d.length++] = b.$$createComment("end ngIf", e.ngIf);h = { clone: d };a.enter(d, c.parent(), c);
                    }) : (l && (l.remove(), l = null), k && (k.$destroy(), k = null), h && (l = ub(h.clone), a.leave(l).done(function (a) {
                        !1 !== a && (l = null);
                    }), h = null));
                });
            } };
    }],
        Ve = ["$templateRequest", "$anchorScroll", "$animate", function (a, b, d) {
        return { restrict: "ECA", priority: 400,
            terminal: !0, transclude: "element", controller: ea.noop, compile: function compile(c, e) {
                var f = e.ngInclude || e.src,
                    g = e.onload || "",
                    h = e.autoscroll;return function (c, e, m, n, q) {
                    var r = 0,
                        p,
                        s,
                        t,
                        x = function x() {
                        s && (s.remove(), s = null);p && (p.$destroy(), p = null);t && (d.leave(t).done(function (a) {
                            !1 !== a && (s = null);
                        }), s = t, t = null);
                    };c.$watch(f, function (f) {
                        var m = function m(a) {
                            !1 === a || !u(h) || h && !c.$eval(h) || b();
                        },
                            s = ++r;f ? (a(f, !0).then(function (a) {
                            if (!c.$$destroyed && s === r) {
                                var b = c.$new();n.template = a;a = q(b, function (a) {
                                    x();d.enter(a, null, e).done(m);
                                });
                                p = b;t = a;p.$emit("$includeContentLoaded", f);c.$eval(g);
                            }
                        }, function () {
                            c.$$destroyed || s !== r || (x(), c.$emit("$includeContentError", f));
                        }), c.$emit("$includeContentRequested", f)) : (x(), n.template = null);
                    });
                };
            } };
    }],
        mf = ["$compile", function (a) {
        return { restrict: "ECA", priority: -400, require: "ngInclude", link: function link(b, d, c, e) {
                ma.call(d[0]).match(/SVG/) ? (d.empty(), a(bd(e.template, w.document).childNodes)(b, function (a) {
                    d.append(a);
                }, { futureParentElement: d })) : (d.html(e.template), a(d.contents())(b));
            } };
    }],
        We = Qa({ priority: 450, compile: function compile() {
            return { pre: function pre(a, b, d) {
                    a.$eval(d.ngInit);
                } };
        } }),
        hf = function hf() {
        return { restrict: "A", priority: 100, require: "ngModel", link: function link(a, b, d, c) {
                var e = d.ngList || ", ",
                    f = "false" !== d.ngTrim,
                    g = f ? S(e) : e;c.$parsers.push(function (a) {
                    if (!x(a)) {
                        var b = [];a && p(a.split(g), function (a) {
                            a && b.push(f ? S(a) : a);
                        });return b;
                    }
                });c.$formatters.push(function (a) {
                    if (H(a)) return a.join(e);
                });c.$isEmpty = function (a) {
                    return !a || !a.length;
                };
            } };
    },
        ob = "ng-valid",
        Yd = "ng-invalid",
        Va = "ng-pristine",
        Sb = "ng-dirty",
        qb = M("ngModel");Pb.$inject = "$scope $exceptionHandler $attrs $element $parse $animate $timeout $q $interpolate".split(" ");
    Pb.prototype = { $$initGetterSetters: function $$initGetterSetters() {
            if (this.$options.getOption("getterSetter")) {
                var a = this.$$parse(this.$$attr.ngModel + "()"),
                    b = this.$$parse(this.$$attr.ngModel + "($$$p)");this.$$ngModelGet = function (b) {
                    var c = this.$$parsedNgModel(b);E(c) && (c = a(b));return c;
                };this.$$ngModelSet = function (a, c) {
                    E(this.$$parsedNgModel(a)) ? b(a, { $$$p: c }) : this.$$parsedNgModelAssign(a, c);
                };
            } else if (!this.$$parsedNgModel.assign) throw qb("nonassign", this.$$attr.ngModel, xa(this.$$element));
        }, $render: A, $isEmpty: function $isEmpty(a) {
            return x(a) || "" === a || null === a || a !== a;
        }, $$updateEmptyClasses: function $$updateEmptyClasses(a) {
            this.$isEmpty(a) ? (this.$$animate.removeClass(this.$$element, "ng-not-empty"), this.$$animate.addClass(this.$$element, "ng-empty")) : (this.$$animate.removeClass(this.$$element, "ng-empty"), this.$$animate.addClass(this.$$element, "ng-not-empty"));
        }, $setPristine: function $setPristine() {
            this.$dirty = !1;this.$pristine = !0;this.$$animate.removeClass(this.$$element, Sb);this.$$animate.addClass(this.$$element, Va);
        }, $setDirty: function $setDirty() {
            this.$dirty = !0;this.$pristine = !1;this.$$animate.removeClass(this.$$element, Va);this.$$animate.addClass(this.$$element, Sb);this.$$parentForm.$setDirty();
        }, $setUntouched: function $setUntouched() {
            this.$touched = !1;this.$untouched = !0;this.$$animate.setClass(this.$$element, "ng-untouched", "ng-touched");
        }, $setTouched: function $setTouched() {
            this.$touched = !0;this.$untouched = !1;this.$$animate.setClass(this.$$element, "ng-touched", "ng-untouched");
        }, $rollbackViewValue: function $rollbackViewValue() {
            this.$$timeout.cancel(this.$$pendingDebounce);this.$viewValue = this.$$lastCommittedViewValue;this.$render();
        }, $validate: function $validate() {
            if (!da(this.$modelValue)) {
                var a = this.$$lastCommittedViewValue,
                    b = this.$$rawModelValue,
                    d = this.$valid,
                    c = this.$modelValue,
                    e = this.$options.getOption("allowInvalid"),
                    f = this;this.$$runValidators(b, a, function (a) {
                    e || d === a || (f.$modelValue = a ? b : void 0, f.$modelValue !== c && f.$$writeModelToScope());
                });
            }
        }, $$runValidators: function $$runValidators(a, b, d) {
            function c() {
                var c = !0;p(k.$validators, function (d, e) {
                    var g = Boolean(d(a, b));c = c && g;f(e, g);
                });return c ? !0 : (p(k.$asyncValidators, function (a, b) {
                    f(b, null);
                }), !1);
            }function e() {
                var c = [],
                    d = !0;p(k.$asyncValidators, function (e, g) {
                    var k = e(a, b);if (!k || !E(k.then)) throw qb("nopromise", k);f(g, void 0);c.push(k.then(function () {
                        f(g, !0);
                    }, function () {
                        d = !1;f(g, !1);
                    }));
                });c.length ? k.$$q.all(c).then(function () {
                    g(d);
                }, A) : g(!0);
            }function f(a, b) {
                h === k.$$currentValidationRunId && k.$setValidity(a, b);
            }function g(a) {
                h === k.$$currentValidationRunId && d(a);
            }this.$$currentValidationRunId++;var h = this.$$currentValidationRunId,
                k = this;(function () {
                var a = k.$$parserName || "parse";if (x(k.$$parserValid)) f(a, null);else return k.$$parserValid || (p(k.$validators, function (a, b) {
                    f(b, null);
                }), p(k.$asyncValidators, function (a, b) {
                    f(b, null);
                })), f(a, k.$$parserValid), k.$$parserValid;return !0;
            })() ? c() ? e() : g(!1) : g(!1);
        }, $commitViewValue: function $commitViewValue() {
            var a = this.$viewValue;this.$$timeout.cancel(this.$$pendingDebounce);if (this.$$lastCommittedViewValue !== a || "" === a && this.$$hasNativeValidators) this.$$updateEmptyClasses(a), this.$$lastCommittedViewValue = a, this.$pristine && this.$setDirty(), this.$$parseAndValidate();
        }, $$parseAndValidate: function $$parseAndValidate() {
            var a = this.$$lastCommittedViewValue,
                b = this;if (this.$$parserValid = x(a) ? void 0 : !0) for (var d = 0; d < this.$parsers.length; d++) {
                if (a = this.$parsers[d](a), x(a)) {
                    this.$$parserValid = !1;break;
                }
            }da(this.$modelValue) && (this.$modelValue = this.$$ngModelGet(this.$$scope));var c = this.$modelValue,
                e = this.$options.getOption("allowInvalid");this.$$rawModelValue = a;e && (this.$modelValue = a, b.$modelValue !== c && b.$$writeModelToScope());this.$$runValidators(a, this.$$lastCommittedViewValue, function (d) {
                e || (b.$modelValue = d ? a : void 0, b.$modelValue !== c && b.$$writeModelToScope());
            });
        }, $$writeModelToScope: function $$writeModelToScope() {
            this.$$ngModelSet(this.$$scope, this.$modelValue);p(this.$viewChangeListeners, function (a) {
                try {
                    a();
                } catch (b) {
                    this.$$exceptionHandler(b);
                }
            }, this);
        }, $setViewValue: function $setViewValue(a, b) {
            this.$viewValue = a;this.$options.getOption("updateOnDefault") && this.$$debounceViewValueCommit(b);
        }, $$debounceViewValueCommit: function $$debounceViewValueCommit(a) {
            var b = this.$options.getOption("debounce");ba(b[a]) ? b = b[a] : ba(b["default"]) && (b = b["default"]);this.$$timeout.cancel(this.$$pendingDebounce);var d = this;0 < b ? this.$$pendingDebounce = this.$$timeout(function () {
                d.$commitViewValue();
            }, b) : this.$$scope.$root.$$phase ? this.$commitViewValue() : this.$$scope.$apply(function () {
                d.$commitViewValue();
            });
        }, $overrideModelOptions: function $overrideModelOptions(a) {
            this.$options = this.$options.createChild(a);
        } };Zd({ clazz: Pb, set: function set(a, b) {
            a[b] = !0;
        }, unset: function unset(a, b) {
            delete a[b];
        } });var gf = ["$rootScope", function (a) {
        return { restrict: "A", require: ["ngModel", "^?form", "^?ngModelOptions"], controller: Pb, priority: 1, compile: function compile(b) {
                b.addClass(Va).addClass("ng-untouched").addClass(ob);return { pre: function pre(a, b, e, f) {
                        var g = f[0];b = f[1] || g.$$parentForm;if (f = f[2]) g.$options = f.$options;g.$$initGetterSetters();b.$addControl(g);e.$observe("name", function (a) {
                            g.$name !== a && g.$$parentForm.$$renameControl(g, a);
                        });a.$on("$destroy", function () {
                            g.$$parentForm.$removeControl(g);
                        });
                    }, post: function post(b, c, e, f) {
                        function g() {
                            h.$setTouched();
                        }var h = f[0];if (h.$options.getOption("updateOn")) c.on(h.$options.getOption("updateOn"), function (a) {
                            h.$$debounceViewValueCommit(a && a.type);
                        });c.on("blur", function () {
                            h.$touched || (a.$$phase ? b.$evalAsync(g) : b.$apply(g));
                        });
                    } };
            } };
    }],
        Qb,
        eh = /(\s+|^)default(\s+|$)/;Dc.prototype = { getOption: function getOption(a) {
            return this.$$options[a];
        }, createChild: function createChild(a) {
            var b = !1;a = R({}, a);p(a, function (d, c) {
                "$inherit" === d ? "*" === c ? b = !0 : (a[c] = this.$$options[c], "updateOn" === c && (a.updateOnDefault = this.$$options.updateOnDefault)) : "updateOn" === c && (a.updateOnDefault = !1, a[c] = S(d.replace(eh, function () {
                    a.updateOnDefault = !0;return " ";
                })));
            }, this);b && (delete a["*"], ee(a, this.$$options));ee(a, Qb.$$options);return new Dc(a);
        } };Qb = new Dc({ updateOn: "", updateOnDefault: !0,
        debounce: 0, getterSetter: !1, allowInvalid: !1, timezone: null });var lf = function lf() {
        function a(a, d) {
            this.$$attrs = a;this.$$scope = d;
        }a.$inject = ["$attrs", "$scope"];a.prototype = { $onInit: function $onInit() {
                var a = this.parentCtrl ? this.parentCtrl.$options : Qb,
                    d = this.$$scope.$eval(this.$$attrs.ngModelOptions);this.$options = a.createChild(d);
            } };return { restrict: "A", priority: 10, require: { parentCtrl: "?^^ngModelOptions" }, bindToController: !0, controller: a };
    },
        Xe = Qa({ terminal: !0, priority: 1E3 }),
        fh = M("ngOptions"),
        gh = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([$\w][$\w]*)|(?:\(\s*([$\w][$\w]*)\s*,\s*([$\w][$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,
        ef = ["$compile", "$document", "$parse", function (a, b, d) {
        function c(a, b, c) {
            function e(a, b, c, d, f) {
                this.selectValue = a;this.viewValue = b;this.label = c;this.group = d;this.disabled = f;
            }function f(a) {
                var b;if (!p && ra(a)) b = a;else {
                    b = [];for (var c in a) {
                        a.hasOwnProperty(c) && "$" !== c.charAt(0) && b.push(c);
                    }
                }return b;
            }var n = a.match(gh);if (!n) throw fh("iexp", a, xa(b));var q = n[5] || n[7],
                p = n[6];a = / as /.test(n[0]) && n[1];var s = n[9];b = d(n[2] ? n[1] : q);var u = a && d(a) || b,
                t = s && d(s),
                x = s ? function (a, b) {
                return t(c, b);
            } : function (a) {
                return Pa(a);
            },
                y = function y(a, b) {
                return x(a, C(a, b));
            },
                v = d(n[2] || n[1]),
                w = d(n[3] || ""),
                B = d(n[4] || ""),
                J = d(n[8]),
                L = {},
                C = p ? function (a, b) {
                L[p] = b;L[q] = a;return L;
            } : function (a) {
                L[q] = a;return L;
            };return { trackBy: s, getTrackByValue: y, getWatchables: d(J, function (a) {
                    var b = [];a = a || [];for (var d = f(a), e = d.length, g = 0; g < e; g++) {
                        var h = a === d ? g : d[g],
                            l = a[h],
                            h = C(l, h),
                            l = x(l, h);b.push(l);if (n[2] || n[1]) l = v(c, h), b.push(l);n[4] && (h = B(c, h), b.push(h));
                    }return b;
                }), getOptions: function getOptions() {
                    for (var a = [], b = {}, d = J(c) || [], g = f(d), h = g.length, n = 0; n < h; n++) {
                        var q = d === g ? n : g[n],
                            p = C(d[q], q),
                            r = u(c, p),
                            q = x(r, p),
                            t = v(c, p),
                            L = w(c, p),
                            p = B(c, p),
                            r = new e(q, r, t, L, p);a.push(r);b[q] = r;
                    }return { items: a, selectValueMap: b, getOptionFromViewValue: function getOptionFromViewValue(a) {
                            return b[y(a)];
                        }, getViewValueFromOption: function getViewValueFromOption(a) {
                            return s ? sa(a.viewValue) : a.viewValue;
                        } };
                } };
        }var e = w.document.createElement("option"),
            f = w.document.createElement("optgroup");return { restrict: "A", terminal: !0, require: ["select", "ngModel"], link: { pre: function pre(a, b, c, d) {
                    d[0].registerOption = A;
                }, post: function post(d, h, k, l) {
                    function m(a) {
                        var b = (a = v.getOptionFromViewValue(a)) && a.element;b && !b.selected && (b.selected = !0);return a;
                    }function n(a, b) {
                        a.element = b;b.disabled = a.disabled;a.label !== b.label && (b.label = a.label, b.textContent = a.label);b.value = a.selectValue;
                    }function q() {
                        var a = v && r.readValue();if (v) for (var b = v.items.length - 1; 0 <= b; b--) {
                            var c = v.items[b];u(c.group) ? Fb(c.element.parentNode) : Fb(c.element);
                        }v = A.getOptions();var d = {};y && h.prepend(r.emptyOption);v.items.forEach(function (a) {
                            var b;if (u(a.group)) {
                                b = d[a.group];b || (b = f.cloneNode(!1), B.appendChild(b), b.label = null === a.group ? "null" : a.group, d[a.group] = b);var c = e.cloneNode(!1);
                            } else b = B, c = e.cloneNode(!1);b.appendChild(c);n(a, c);
                        });h[0].appendChild(B);s.$render();s.$isEmpty(a) || (b = r.readValue(), (A.trackBy || x ? pa(a, b) : a === b) || (s.$setViewValue(b), s.$render()));
                    }var r = l[0],
                        s = l[1],
                        x = k.multiple;l = 0;for (var t = h.children(), w = t.length; l < w; l++) {
                        if ("" === t[l].value) {
                            r.hasEmptyOption = !0;r.emptyOption = t.eq(l);break;
                        }
                    }var y = !!r.emptyOption;F(e.cloneNode(!1)).val("?");var v,
                        A = c(k.ngOptions, h, d),
                        B = b[0].createDocumentFragment();r.generateUnknownOptionValue = function (a) {
                        return "?";
                    };x ? (r.writeValue = function (a) {
                        var b = a && a.map(m) || [];v.items.forEach(function (a) {
                            a.element.selected && -1 === Array.prototype.indexOf.call(b, a) && (a.element.selected = !1);
                        });
                    }, r.readValue = function () {
                        var a = h.val() || [],
                            b = [];p(a, function (a) {
                            (a = v.selectValueMap[a]) && !a.disabled && b.push(v.getViewValueFromOption(a));
                        });return b;
                    }, A.trackBy && d.$watchCollection(function () {
                        if (H(s.$viewValue)) return s.$viewValue.map(function (a) {
                            return A.getTrackByValue(a);
                        });
                    }, function () {
                        s.$render();
                    })) : (r.writeValue = function (a) {
                        var b = v.selectValueMap[h.val()],
                            c = v.getOptionFromViewValue(a);b && b.element.removeAttribute("selected");c ? (h[0].value !== c.selectValue && (r.removeUnknownOption(), r.unselectEmptyOption(), h[0].value = c.selectValue, c.element.selected = !0), c.element.setAttribute("selected", "selected")) : y ? r.selectEmptyOption() : r.unknownOption.parent().length ? r.updateUnknownOption(a) : r.renderUnknownOption(a);
                    }, r.readValue = function () {
                        var a = v.selectValueMap[h.val()];return a && !a.disabled ? (r.unselectEmptyOption(), r.removeUnknownOption(), v.getViewValueFromOption(a)) : null;
                    }, A.trackBy && d.$watch(function () {
                        return A.getTrackByValue(s.$viewValue);
                    }, function () {
                        s.$render();
                    }));y && (r.emptyOption.remove(), a(r.emptyOption)(d), 8 === r.emptyOption[0].nodeType ? (r.hasEmptyOption = !1, r.registerOption = function (a, b) {
                        "" === b.val() && (r.hasEmptyOption = !0, r.emptyOption = b, r.emptyOption.removeClass("ng-scope"), s.$render(), b.on("$destroy", function () {
                            r.hasEmptyOption = !1;r.emptyOption = void 0;
                        }));
                    }) : r.emptyOption.removeClass("ng-scope"));h.empty();q();d.$watchCollection(A.getWatchables, q);
                } } };
    }],
        Ye = ["$locale", "$interpolate", "$log", function (a, b, d) {
        var c = /{}/g,
            e = /^when(Minus)?(.+)$/;return { link: function link(f, g, h) {
                function k(a) {
                    g.text(a || "");
                }var l = h.count,
                    m = h.$attr.when && g.attr(h.$attr.when),
                    n = h.offset || 0,
                    q = f.$eval(m) || {},
                    r = {},
                    s = b.startSymbol(),
                    u = b.endSymbol(),
                    t = s + l + "-" + n + u,
                    w = ea.noop,
                    y;p(h, function (a, b) {
                    var c = e.exec(b);c && (c = (c[1] ? "-" : "") + P(c[2]), q[c] = g.attr(h.$attr[b]));
                });p(q, function (a, d) {
                    r[d] = b(a.replace(c, t));
                });f.$watch(l, function (b) {
                    var c = parseFloat(b),
                        e = da(c);e || c in q || (c = a.pluralCat(c - n));c === y || e && da(y) || (w(), e = r[c], x(e) ? (null != b && d.debug("ngPluralize: no rule defined for '" + c + "' in " + m), w = A, k()) : w = f.$watch(e, k), y = c);
                });
            } };
    }],
        Ze = ["$parse", "$animate", "$compile", function (a, b, d) {
        var c = M("ngRepeat"),
            e = function e(a, b, c, d, _e2, m, n) {
            a[c] = d;_e2 && (a[_e2] = m);a.$index = b;a.$first = 0 === b;a.$last = b === n - 1;a.$middle = !(a.$first || a.$last);a.$odd = !(a.$even = 0 === (b & 1));
        };return { restrict: "A", multiElement: !0, transclude: "element", priority: 1E3, terminal: !0, $$tlb: !0, compile: function compile(f, g) {
                var h = g.ngRepeat,
                    k = d.$$createComment("end ngRepeat", h),
                    l = h.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if (!l) throw c("iexp", h);var m = l[1],
                    n = l[2],
                    q = l[3],
                    r = l[4],
                    l = m.match(/^(?:(\s*[$\w]+)|\(\s*([$\w]+)\s*,\s*([$\w]+)\s*\))$/);if (!l) throw c("iidexp", m);var s = l[3] || l[1],
                    u = l[2];if (q && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(q) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(q))) throw c("badident", q);var t,
                    x,
                    y,
                    v,
                    w = { $id: Pa };r ? t = a(r) : (y = function y(a, b) {
                    return Pa(b);
                }, v = function v(a) {
                    return a;
                });return function (a, d, f, g, l) {
                    t && (x = function x(b, c, d) {
                        u && (w[u] = b);w[s] = c;w.$index = d;return t(a, w);
                    });var m = V();a.$watchCollection(n, function (f) {
                        var g,
                            n,
                            r = d[0],
                            t,
                            w = V(),
                            A,
                            E,
                            F,
                            D,
                            G,
                            C,
                            H;q && (a[q] = f);if (ra(f)) G = f, n = x || y;else for (H in n = x || v, G = [], f) {
                            ua.call(f, H) && "$" !== H.charAt(0) && G.push(H);
                        }A = G.length;H = Array(A);for (g = 0; g < A; g++) {
                            if (E = f === G ? g : G[g], F = f[E], D = n(E, F, g), m[D]) C = m[D], delete m[D], w[D] = C, H[g] = C;else {
                                if (w[D]) throw p(H, function (a) {
                                    a && a.scope && (m[a.id] = a);
                                }), c("dupes", h, D, F);H[g] = { id: D,
                                    scope: void 0, clone: void 0 };w[D] = !0;
                            }
                        }for (t in m) {
                            C = m[t];D = ub(C.clone);b.leave(D);if (D[0].parentNode) for (g = 0, n = D.length; g < n; g++) {
                                D[g].$$NG_REMOVED = !0;
                            }C.scope.$destroy();
                        }for (g = 0; g < A; g++) {
                            if (E = f === G ? g : G[g], F = f[E], C = H[g], C.scope) {
                                t = r;do {
                                    t = t.nextSibling;
                                } while (t && t.$$NG_REMOVED);C.clone[0] !== t && b.move(ub(C.clone), null, r);r = C.clone[C.clone.length - 1];e(C.scope, g, s, F, u, E, A);
                            } else l(function (a, c) {
                                C.scope = c;var d = k.cloneNode(!1);a[a.length++] = d;b.enter(a, null, r);r = d;C.clone = a;w[C.id] = C;e(C.scope, g, s, F, u, E, A);
                            });
                        }m = w;
                    });
                };
            } };
    }],
        $e = ["$animate", function (a) {
        return { restrict: "A", multiElement: !0, link: function link(b, d, c) {
                b.$watch(c.ngShow, function (b) {
                    a[b ? "removeClass" : "addClass"](d, "ng-hide", { tempClasses: "ng-hide-animate" });
                });
            } };
    }],
        Te = ["$animate", function (a) {
        return { restrict: "A", multiElement: !0, link: function link(b, d, c) {
                b.$watch(c.ngHide, function (b) {
                    a[b ? "addClass" : "removeClass"](d, "ng-hide", { tempClasses: "ng-hide-animate" });
                });
            } };
    }],
        af = Qa(function (a, b, d) {
        a.$watch(d.ngStyle, function (a, d) {
            d && a !== d && p(d, function (a, c) {
                b.css(c, "");
            });a && b.css(a);
        }, !0);
    }),
        bf = ["$animate", "$compile", function (a, b) {
        return { require: "ngSwitch", controller: ["$scope", function () {
                this.cases = {};
            }], link: function link(d, c, e, f) {
                var g = [],
                    h = [],
                    k = [],
                    l = [],
                    m = function m(a, b) {
                    return function (c) {
                        !1 !== c && a.splice(b, 1);
                    };
                };d.$watch(e.ngSwitch || e.on, function (c) {
                    for (var d, e; k.length;) {
                        a.cancel(k.pop());
                    }d = 0;for (e = l.length; d < e; ++d) {
                        var s = ub(h[d].clone);l[d].$destroy();(k[d] = a.leave(s)).done(m(k, d));
                    }h.length = 0;l.length = 0;(g = f.cases["!" + c] || f.cases["?"]) && p(g, function (c) {
                        c.transclude(function (d, e) {
                            l.push(e);
                            var f = c.element;d[d.length++] = b.$$createComment("end ngSwitchWhen");h.push({ clone: d });a.enter(d, f.parent(), f);
                        });
                    });
                });
            } };
    }],
        cf = Qa({ transclude: "element", priority: 1200, require: "^ngSwitch", multiElement: !0, link: function link(a, b, d, c, e) {
            a = d.ngSwitchWhen.split(d.ngSwitchWhenSeparator).sort().filter(function (a, b, c) {
                return c[b - 1] !== a;
            });p(a, function (a) {
                c.cases["!" + a] = c.cases["!" + a] || [];c.cases["!" + a].push({ transclude: e, element: b });
            });
        } }),
        df = Qa({ transclude: "element", priority: 1200, require: "^ngSwitch", multiElement: !0, link: function link(a, b, d, c, e) {
            c.cases["?"] = c.cases["?"] || [];c.cases["?"].push({ transclude: e, element: b });
        } }),
        hh = M("ngTransclude"),
        ff = ["$compile", function (a) {
        return { restrict: "EAC", terminal: !0, compile: function compile(b) {
                var d = a(b.contents());b.empty();return function (a, b, f, g, h) {
                    function k() {
                        d(a, function (a) {
                            b.append(a);
                        });
                    }if (!h) throw hh("orphan", xa(b));f.ngTransclude === f.$attr.ngTransclude && (f.ngTransclude = "");f = f.ngTransclude || f.ngTranscludeSlot;h(function (a, c) {
                        var d;if (d = a.length) a: {
                            d = 0;for (var f = a.length; d < f; d++) {
                                var g = a[d];if (g.nodeType !== Ia || g.nodeValue.trim()) {
                                    d = !0;break a;
                                }
                            }d = void 0;
                        }d ? b.append(a) : (k(), c.$destroy());
                    }, null, f);f && !h.isSlotFilled(f) && k();
                };
            } };
    }],
        He = ["$templateCache", function (a) {
        return { restrict: "E", terminal: !0, compile: function compile(b, d) {
                "text/ng-template" === d.type && a.put(d.id, b[0].text);
            } };
    }],
        ih = { $setViewValue: A, $render: A },
        jh = ["$element", "$scope", function (a, b) {
        function d() {
            g || (g = !0, b.$$postDigest(function () {
                g = !1;e.ngModelCtrl.$render();
            }));
        }function c(a) {
            h || (h = !0, b.$$postDigest(function () {
                b.$$destroyed || (h = !1, e.ngModelCtrl.$setViewValue(e.readValue()), a && e.ngModelCtrl.$render());
            }));
        }var e = this,
            f = new Hb();e.selectValueMap = {};e.ngModelCtrl = ih;e.multiple = !1;e.unknownOption = F(w.document.createElement("option"));e.hasEmptyOption = !1;e.emptyOption = void 0;e.renderUnknownOption = function (b) {
            b = e.generateUnknownOptionValue(b);e.unknownOption.val(b);a.prepend(e.unknownOption);Ta(e.unknownOption, !0);a.val(b);
        };e.updateUnknownOption = function (b) {
            b = e.generateUnknownOptionValue(b);e.unknownOption.val(b);Ta(e.unknownOption, !0);a.val(b);
        };e.generateUnknownOptionValue = function (a) {
            return "? " + Pa(a) + " ?";
        };e.removeUnknownOption = function () {
            e.unknownOption.parent() && e.unknownOption.remove();
        };e.selectEmptyOption = function () {
            e.emptyOption && (a.val(""), Ta(e.emptyOption, !0));
        };e.unselectEmptyOption = function () {
            e.hasEmptyOption && e.emptyOption.removeAttr("selected");
        };b.$on("$destroy", function () {
            e.renderUnknownOption = A;
        });e.readValue = function () {
            var b = a.val(),
                b = b in e.selectValueMap ? e.selectValueMap[b] : b;return e.hasOption(b) ? b : null;
        };e.writeValue = function (b) {
            var c = a[0].options[a[0].selectedIndex];
            c && Ta(F(c), !1);e.hasOption(b) ? (e.removeUnknownOption(), c = Pa(b), a.val(c in e.selectValueMap ? c : b), Ta(F(a[0].options[a[0].selectedIndex]), !0)) : null == b && e.emptyOption ? (e.removeUnknownOption(), e.selectEmptyOption()) : e.unknownOption.parent().length ? e.updateUnknownOption(b) : e.renderUnknownOption(b);
        };e.addOption = function (a, b) {
            if (8 !== b[0].nodeType) {
                Ka(a, '"option value"');"" === a && (e.hasEmptyOption = !0, e.emptyOption = b);var c = f.get(a) || 0;f.set(a, c + 1);d();
            }
        };e.removeOption = function (a) {
            var b = f.get(a);b && (1 === b ? (f.delete(a), "" === a && (e.hasEmptyOption = !1, e.emptyOption = void 0)) : f.set(a, b - 1));
        };e.hasOption = function (a) {
            return !!f.get(a);
        };var g = !1,
            h = !1;e.registerOption = function (a, b, f, g, h) {
            if (f.$attr.ngValue) {
                var p,
                    s = NaN;f.$observe("value", function (a) {
                    var d,
                        f = b.prop("selected");u(s) && (e.removeOption(p), delete e.selectValueMap[s], d = !0);s = Pa(a);p = a;e.selectValueMap[s] = a;e.addOption(a, b);b.attr("value", s);d && f && c();
                });
            } else g ? f.$observe("value", function (a) {
                e.readValue();var d,
                    f = b.prop("selected");u(p) && (e.removeOption(p), d = !0);p = a;e.addOption(a, b);d && f && c();
            }) : h ? a.$watch(h, function (a, d) {
                f.$set("value", a);var g = b.prop("selected");d !== a && e.removeOption(d);e.addOption(a, b);d && g && c();
            }) : e.addOption(f.value, b);f.$observe("disabled", function (a) {
                if ("true" === a || a && b.prop("selected")) e.multiple ? c(!0) : (e.ngModelCtrl.$setViewValue(null), e.ngModelCtrl.$render());
            });b.on("$destroy", function () {
                var a = e.readValue(),
                    b = f.value;e.removeOption(b);d();(e.multiple && a && -1 !== a.indexOf(b) || a === b) && c(!0);
            });
        };
    }],
        Ie = function Ie() {
        return { restrict: "E", require: ["select", "?ngModel"], controller: jh, priority: 1, link: { pre: function pre(a, b, d, c) {
                    var e = c[0],
                        f = c[1];if (f) {
                        if (e.ngModelCtrl = f, b.on("change", function () {
                            e.removeUnknownOption();a.$apply(function () {
                                f.$setViewValue(e.readValue());
                            });
                        }), d.multiple) {
                            e.multiple = !0;e.readValue = function () {
                                var a = [];p(b.find("option"), function (b) {
                                    b.selected && !b.disabled && (b = b.value, a.push(b in e.selectValueMap ? e.selectValueMap[b] : b));
                                });return a;
                            };e.writeValue = function (a) {
                                p(b.find("option"), function (b) {
                                    var c = !!a && (-1 !== Array.prototype.indexOf.call(a, b.value) || -1 !== Array.prototype.indexOf.call(a, e.selectValueMap[b.value]));c !== b.selected && Ta(F(b), c);
                                });
                            };var g,
                                h = NaN;a.$watch(function () {
                                h !== f.$viewValue || pa(g, f.$viewValue) || (g = qa(f.$viewValue), f.$render());h = f.$viewValue;
                            });f.$isEmpty = function (a) {
                                return !a || 0 === a.length;
                            };
                        }
                    } else e.registerOption = A;
                }, post: function post(a, b, d, c) {
                    var e = c[1];if (e) {
                        var f = c[0];e.$render = function () {
                            f.writeValue(e.$viewValue);
                        };
                    }
                } } };
    },
        Je = ["$interpolate", function (a) {
        return { restrict: "E", priority: 100, compile: function compile(b, d) {
                var c, e;u(d.ngValue) || (u(d.value) ? c = a(d.value, !0) : (e = a(b.text(), !0)) || d.$set("value", b.text()));return function (a, b, d) {
                    var k = b.parent();(k = k.data("$selectController") || k.parent().data("$selectController")) && k.registerOption(a, b, d, c, e);
                };
            } };
    }],
        Wc = function Wc() {
        return { restrict: "A", require: "?ngModel", link: function link(a, b, d, c) {
                c && (d.required = !0, c.$validators.required = function (a, b) {
                    return !d.required || !c.$isEmpty(b);
                }, d.$observe("required", function () {
                    c.$validate();
                }));
            } };
    },
        Vc = function Vc() {
        return { restrict: "A", require: "?ngModel", link: function link(a, b, d, c) {
                if (c) {
                    var e,
                        f = d.ngPattern || d.pattern;d.$observe("pattern", function (a) {
                        D(a) && 0 < a.length && (a = new RegExp("^" + a + "$"));if (a && !a.test) throw M("ngPattern")("noregexp", f, a, xa(b));e = a || void 0;c.$validate();
                    });c.$validators.pattern = function (a, b) {
                        return c.$isEmpty(b) || x(e) || e.test(b);
                    };
                }
            } };
    },
        Yc = function Yc() {
        return { restrict: "A", require: "?ngModel", link: function link(a, b, d, c) {
                if (c) {
                    var e = -1;d.$observe("maxlength", function (a) {
                        a = Z(a);e = da(a) ? -1 : a;c.$validate();
                    });c.$validators.maxlength = function (a, b) {
                        return 0 > e || c.$isEmpty(b) || b.length <= e;
                    };
                }
            } };
    },
        Xc = function Xc() {
        return { restrict: "A", require: "?ngModel", link: function link(a, b, d, c) {
                if (c) {
                    var e = 0;d.$observe("minlength", function (a) {
                        e = Z(a) || 0;c.$validate();
                    });c.$validators.minlength = function (a, b) {
                        return c.$isEmpty(b) || b.length >= e;
                    };
                }
            } };
    };w.angular.bootstrap ? w.console && console.log("WARNING: Tried to load angular more than once.") : (ze(), Ce(ea), ea.module("ngLocale", [], ["$provide", function (a) {
        function b(a) {
            a += "";var b = a.indexOf(".");return -1 == b ? 0 : a.length - b - 1;
        }a.value("$locale", { DATETIME_FORMATS: { AMPMS: ["AM", "PM"], DAY: "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), ERANAMES: ["Before Christ", "Anno Domini"], ERAS: ["BC", "AD"], FIRSTDAYOFWEEK: 6, MONTH: "January February March April May June July August September October November December".split(" "), SHORTDAY: "Sun Mon Tue Wed Thu Fri Sat".split(" "), SHORTMONTH: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), STANDALONEMONTH: "January February March April May June July August September October November December".split(" "), WEEKENDRANGE: [5, 6], fullDate: "EEEE, MMMM d, y", longDate: "MMMM d, y", medium: "MMM d, y h:mm:ss a", mediumDate: "MMM d, y", mediumTime: "h:mm:ss a", "short": "M/d/yy h:mm a", shortDate: "M/d/yy", shortTime: "h:mm a" }, NUMBER_FORMATS: { CURRENCY_SYM: "$", DECIMAL_SEP: ".", GROUP_SEP: ",", PATTERNS: [{ gSize: 3, lgSize: 3, maxFrac: 3, minFrac: 0, minInt: 1, negPre: "-", negSuf: "", posPre: "", posSuf: "" }, { gSize: 3, lgSize: 3, maxFrac: 2, minFrac: 2, minInt: 1, negPre: "-\xA4", negSuf: "", posPre: "\xA4", posSuf: "" }] }, id: "en-us", localeID: "en_US", pluralCat: function pluralCat(a, c) {
                var e = a | 0,
                    f = c;void 0 === f && (f = Math.min(b(a), 3));Math.pow(10, f);return 1 == e && 0 == f ? "one" : "other";
            } });
    }]), F(function () {
        ue(w.document, Pc);
    }));
})(window);!window.angular.$$csp().noInlineStyle && window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
//# sourceMappingURL=angular.min.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function e(r, n, o) {
  function t(i, u) {
    if (!n[i]) {
      if (!r[i]) {
        var a = "function" == typeof require && require;if (!u && a) return require(i, !0);if (s) return s(i, !0);var c = new Error("Cannot find module '" + i + "'");throw c.code = "MODULE_NOT_FOUND", c;
      }var l = n[i] = { exports: {} };r[i][0].call(l.exports, function (e) {
        var n = r[i][1][e];return t(n ? n : e);
      }, l, l.exports, e, r, n, o);
    }return n[i].exports;
  }for (var s = "function" == typeof require && require, i = 0; i < o.length; i++) {
    t(o[i]);
  }return t;
}({ 1: [function (e, r, n) {
    angular.module("nemLogging", []), angular.module("nemLogging").provider("nemDebug", function () {
      var r = null;return r = e("debug"), this.$get = function () {
        return r;
      }, this.debug = r, this;
    });var o = function o(e, r) {
      return function () {
        return e.apply(r, arguments);
      };
    },
        t = [].slice;angular.module("nemLogging").provider("nemSimpleLogger", ["nemDebugProvider", function (e) {
      var r, n, s, i, u, a, c, l, f, g, d, h;for (d = e.debug, s = {}, i = ["debug", "info", "warn", "error", "log"], r = {}, f = l = 0, g = i.length; g > l; f = ++l) {
        h = i[f], r[h] = f;
      }return a = function a(e, r, n) {
        return e >= r ? n() : void 0;
      }, u = function u(e) {
        var r, n, o;if (r = !1, !e) return r;for (n = 0, o = i.length; o > n && (h = i[n], r = null != e[h] && "function" == typeof e[h], r); n++) {}return r;
      }, c = function c(e, r) {
        var n, o, t, u;for (null == s[e] && (s[e] = d(e)), n = s[e], u = {}, o = 0, t = i.length; t > o; o++) {
          h = i[o], u[h] = "debug" === h ? n : r[h];
        }return u;
      }, n = function () {
        function e(e) {
          var n, s, c, l, f;if (this.$log = e, this.spawn = o(this.spawn, this), !this.$log) throw "internalLogger undefined";if (!u(this.$log)) throw "@$log is invalid";for (this.doLog = !0, f = {}, n = function (e) {
            return function (n) {
              return f[n] = function () {
                var o;return o = 1 <= arguments.length ? t.call(arguments, 0) : [], e.doLog ? a(r[n], e.currentLevel, function () {
                  var r;return (r = e.$log)[n].apply(r, o);
                }) : void 0;
              }, e[n] = f[n];
            };
          }(this), s = 0, c = i.length; c > s; s++) {
            l = i[s], n(l);
          }this.LEVELS = r, this.currentLevel = r.error;
        }return e.prototype.spawn = function (r) {
          if ("string" == typeof r) {
            if (!u(this.$log)) throw "@$log is invalid";if (!d) throw "nemDebug is undefined this is probably the light version of this library sep debug logggers is not supported!";return c(r, this.$log);
          }return new e(r || this.$log);
        }, e;
      }(), this.decorator = ["$log", function (e) {
        var o;return o = new n(e), o.currentLevel = r.debug, o;
      }], this.$get = ["$log", function (e) {
        return new n(e);
      }], this;
    }]);
  }, { debug: 2 }], 2: [function (e, r, n) {
    function o() {
      return "WebkitAppearance" in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31;
    }function t() {
      var e = arguments,
          r = this.useColors;if (e[0] = (r ? "%c" : "") + this.namespace + (r ? " %c" : " ") + e[0] + (r ? "%c " : " ") + "+" + n.humanize(this.diff), !r) return e;var o = "color: " + this.color;e = [e[0], o, "color: inherit"].concat(Array.prototype.slice.call(e, 1));var t = 0,
          s = 0;return e[0].replace(/%[a-z%]/g, function (e) {
        "%%" !== e && (t++, "%c" === e && (s = t));
      }), e.splice(s, 0, o), e;
    }function s() {
      return "object" == (typeof console === "undefined" ? "undefined" : _typeof(console)) && console.log && Function.prototype.apply.call(console.log, console, arguments);
    }function i(e) {
      try {
        null == e ? n.storage.removeItem("debug") : n.storage.debug = e;
      } catch (r) {}
    }function u() {
      var e;try {
        e = n.storage.debug;
      } catch (r) {}return e;
    }function a() {
      try {
        return window.localStorage;
      } catch (e) {}
    }n = r.exports = e("./debug"), n.log = s, n.formatArgs = t, n.save = i, n.load = u, n.useColors = o, n.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : a(), n.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"], n.formatters.j = function (e) {
      return JSON.stringify(e);
    }, n.enable(u());
  }, { "./debug": 3 }], 3: [function (e, r, n) {
    function o() {
      return n.colors[l++ % n.colors.length];
    }function t(e) {
      function r() {}function t() {
        var e = t,
            r = +new Date(),
            s = r - (c || r);e.diff = s, e.prev = c, e.curr = r, c = r, null == e.useColors && (e.useColors = n.useColors()), null == e.color && e.useColors && (e.color = o());var i = Array.prototype.slice.call(arguments);i[0] = n.coerce(i[0]), "string" != typeof i[0] && (i = ["%o"].concat(i));var u = 0;i[0] = i[0].replace(/%([a-z%])/g, function (r, o) {
          if ("%%" === r) return r;u++;var t = n.formatters[o];if ("function" == typeof t) {
            var s = i[u];r = t.call(e, s), i.splice(u, 1), u--;
          }return r;
        }), "function" == typeof n.formatArgs && (i = n.formatArgs.apply(e, i));var a = t.log || n.log || console.log.bind(console);a.apply(e, i);
      }r.enabled = !1, t.enabled = !0;var s = n.enabled(e) ? t : r;return s.namespace = e, s;
    }function s(e) {
      n.save(e);for (var r = (e || "").split(/[\s,]+/), o = r.length, t = 0; o > t; t++) {
        r[t] && (e = r[t].replace(/\*/g, ".*?"), "-" === e[0] ? n.skips.push(new RegExp("^" + e.substr(1) + "$")) : n.names.push(new RegExp("^" + e + "$")));
      }
    }function i() {
      n.enable("");
    }function u(e) {
      var r, o;for (r = 0, o = n.skips.length; o > r; r++) {
        if (n.skips[r].test(e)) return !1;
      }for (r = 0, o = n.names.length; o > r; r++) {
        if (n.names[r].test(e)) return !0;
      }return !1;
    }function a(e) {
      return e instanceof Error ? e.stack || e.message : e;
    }n = r.exports = t, n.coerce = a, n.disable = i, n.enable = s, n.enabled = u, n.humanize = e("ms"), n.names = [], n.skips = [], n.formatters = {};var c,
        l = 0;
  }, { ms: 4 }], 4: [function (e, r, n) {
    function o(e) {
      if (e = "" + e, !(e.length > 1e4)) {
        var r = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if (r) {
          var n = parseFloat(r[1]),
              o = (r[2] || "ms").toLowerCase();switch (o) {case "years":case "year":case "yrs":case "yr":case "y":
              return n * f;case "days":case "day":case "d":
              return n * l;case "hours":case "hour":case "hrs":case "hr":case "h":
              return n * c;case "minutes":case "minute":case "mins":case "min":case "m":
              return n * a;case "seconds":case "second":case "secs":case "sec":case "s":
              return n * u;case "milliseconds":case "millisecond":case "msecs":case "msec":case "ms":
              return n;}
        }
      }
    }function t(e) {
      return e >= l ? Math.round(e / l) + "d" : e >= c ? Math.round(e / c) + "h" : e >= a ? Math.round(e / a) + "m" : e >= u ? Math.round(e / u) + "s" : e + "ms";
    }function s(e) {
      return i(e, l, "day") || i(e, c, "hour") || i(e, a, "minute") || i(e, u, "second") || e + " ms";
    }function i(e, r, n) {
      return r > e ? void 0 : 1.5 * r > e ? Math.floor(e / r) + " " + n : Math.ceil(e / r) + " " + n + "s";
    }var u = 1e3,
        a = 60 * u,
        c = 60 * a,
        l = 24 * c,
        f = 365.25 * l;r.exports = function (e, r) {
      return r = r || {}, "string" == typeof e ? o(e) : r["long"] ? s(e) : t(e);
    };
  }, {}] }, {}, [1]);

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * @license
 * Lodash lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE
 */
;(function () {
    function n(n, t) {
        return n.set(t[0], t[1]), n;
    }function t(n, t) {
        return n.add(t), n;
    }function r(n, t, r) {
        switch (r.length) {case 0:
                return n.call(t);case 1:
                return n.call(t, r[0]);case 2:
                return n.call(t, r[0], r[1]);case 3:
                return n.call(t, r[0], r[1], r[2]);}return n.apply(t, r);
    }function e(n, t, r, e) {
        for (var u = -1, i = null == n ? 0 : n.length; ++u < i;) {
            var o = n[u];t(e, o, r(o), n);
        }return e;
    }function u(n, t) {
        for (var r = -1, e = null == n ? 0 : n.length; ++r < e && false !== t(n[r], r, n);) {}return n;
    }function i(n, t) {
        for (var r = null == n ? 0 : n.length; r-- && false !== t(n[r], r, n);) {}
        return n;
    }function o(n, t) {
        for (var r = -1, e = null == n ? 0 : n.length; ++r < e;) {
            if (!t(n[r], r, n)) return false;
        }return true;
    }function f(n, t) {
        for (var r = -1, e = null == n ? 0 : n.length, u = 0, i = []; ++r < e;) {
            var o = n[r];t(o, r, n) && (i[u++] = o);
        }return i;
    }function c(n, t) {
        return !(null == n || !n.length) && -1 < d(n, t, 0);
    }function a(n, t, r) {
        for (var e = -1, u = null == n ? 0 : n.length; ++e < u;) {
            if (r(t, n[e])) return true;
        }return false;
    }function l(n, t) {
        for (var r = -1, e = null == n ? 0 : n.length, u = Array(e); ++r < e;) {
            u[r] = t(n[r], r, n);
        }return u;
    }function s(n, t) {
        for (var r = -1, e = t.length, u = n.length; ++r < e;) {
            n[u + r] = t[r];
        }return n;
    }function h(n, t, r, e) {
        var u = -1,
            i = null == n ? 0 : n.length;for (e && i && (r = n[++u]); ++u < i;) {
            r = t(r, n[u], u, n);
        }return r;
    }function p(n, t, r, e) {
        var u = null == n ? 0 : n.length;for (e && u && (r = n[--u]); u--;) {
            r = t(r, n[u], u, n);
        }return r;
    }function _(n, t) {
        for (var r = -1, e = null == n ? 0 : n.length; ++r < e;) {
            if (t(n[r], r, n)) return true;
        }return false;
    }function v(n, t, r) {
        var e;return r(n, function (n, r, u) {
            if (t(n, r, u)) return e = r, false;
        }), e;
    }function g(n, t, r, e) {
        var u = n.length;for (r += e ? 1 : -1; e ? r-- : ++r < u;) {
            if (t(n[r], r, n)) return r;
        }return -1;
    }function d(n, t, r) {
        if (t === t) n: {
            --r;for (var e = n.length; ++r < e;) {
                if (n[r] === t) {
                    n = r;break n;
                }
            }n = -1;
        } else n = g(n, b, r);return n;
    }function y(n, t, r, e) {
        --r;for (var u = n.length; ++r < u;) {
            if (e(n[r], t)) return r;
        }return -1;
    }function b(n) {
        return n !== n;
    }function x(n, t) {
        var r = null == n ? 0 : n.length;return r ? k(n, t) / r : P;
    }function j(n) {
        return function (t) {
            return null == t ? F : t[n];
        };
    }function w(n) {
        return function (t) {
            return null == n ? F : n[t];
        };
    }function m(n, t, r, e, u) {
        return u(n, function (n, u, i) {
            r = e ? (e = false, n) : t(r, n, u, i);
        }), r;
    }function A(n, t) {
        var r = n.length;for (n.sort(t); r--;) {
            n[r] = n[r].c;
        }return n;
    }function k(n, t) {
        for (var r, e = -1, u = n.length; ++e < u;) {
            var i = t(n[e]);i !== F && (r = r === F ? i : r + i);
        }return r;
    }function E(n, t) {
        for (var r = -1, e = Array(n); ++r < n;) {
            e[r] = t(r);
        }return e;
    }function O(n, t) {
        return l(t, function (t) {
            return [t, n[t]];
        });
    }function S(n) {
        return function (t) {
            return n(t);
        };
    }function I(n, t) {
        return l(t, function (t) {
            return n[t];
        });
    }function R(n, t) {
        return n.has(t);
    }function z(n, t) {
        for (var r = -1, e = n.length; ++r < e && -1 < d(t, n[r], 0);) {}return r;
    }function W(n, t) {
        for (var r = n.length; r-- && -1 < d(t, n[r], 0);) {}return r;
    }function B(n) {
        return "\\" + Tn[n];
    }function L(n) {
        var t = -1,
            r = Array(n.size);return n.forEach(function (n, e) {
            r[++t] = [e, n];
        }), r;
    }function U(n, t) {
        return function (r) {
            return n(t(r));
        };
    }function C(n, t) {
        for (var r = -1, e = n.length, u = 0, i = []; ++r < e;) {
            var o = n[r];o !== t && "__lodash_placeholder__" !== o || (n[r] = "__lodash_placeholder__", i[u++] = r);
        }return i;
    }function D(n) {
        var t = -1,
            r = Array(n.size);return n.forEach(function (n) {
            r[++t] = n;
        }), r;
    }function M(n) {
        var t = -1,
            r = Array(n.size);return n.forEach(function (n) {
            r[++t] = [n, n];
        }), r;
    }function T(n) {
        if (Bn.test(n)) {
            for (var t = zn.lastIndex = 0; zn.test(n);) {
                ++t;
            }n = t;
        } else n = tt(n);return n;
    }function $(n) {
        return Bn.test(n) ? n.match(zn) || [] : n.split("");
    }var F,
        N = 1 / 0,
        P = NaN,
        Z = [["ary", 128], ["bind", 1], ["bindKey", 2], ["curry", 8], ["curryRight", 16], ["flip", 512], ["partial", 32], ["partialRight", 64], ["rearg", 256]],
        q = /\b__p\+='';/g,
        V = /\b(__p\+=)''\+/g,
        K = /(__e\(.*?\)|\b__t\))\+'';/g,
        G = /&(?:amp|lt|gt|quot|#39);/g,
        H = /[&<>"']/g,
        J = RegExp(G.source),
        Y = RegExp(H.source),
        Q = /<%-([\s\S]+?)%>/g,
        X = /<%([\s\S]+?)%>/g,
        nn = /<%=([\s\S]+?)%>/g,
        tn = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        rn = /^\w*$/,
        en = /^\./,
        un = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
        on = /[\\^$.*+?()[\]{}|]/g,
        fn = RegExp(on.source),
        cn = /^\s+|\s+$/g,
        an = /^\s+/,
        ln = /\s+$/,
        sn = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
        hn = /\{\n\/\* \[wrapped with (.+)\] \*/,
        pn = /,? & /,
        _n = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
        vn = /\\(\\)?/g,
        gn = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
        dn = /\w*$/,
        yn = /^[-+]0x[0-9a-f]+$/i,
        bn = /^0b[01]+$/i,
        xn = /^\[object .+?Constructor\]$/,
        jn = /^0o[0-7]+$/i,
        wn = /^(?:0|[1-9]\d*)$/,
        mn = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
        An = /($^)/,
        kn = /['\n\r\u2028\u2029\\]/g,
        En = "[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*",
        On = "(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])" + En,
        Sn = "(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]?|[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])",
        In = RegExp("['\u2019]", "g"),
        Rn = RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]", "g"),
        zn = RegExp("\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|" + Sn + En, "g"),
        Wn = RegExp(["[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['\u2019](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?|\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)|\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)|\\d+", On].join("|"), "g"),
        Bn = RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]"),
        Ln = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
        Un = "Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ clearTimeout isFinite parseInt setTimeout".split(" "),
        Cn = {};
    Cn["[object Float32Array]"] = Cn["[object Float64Array]"] = Cn["[object Int8Array]"] = Cn["[object Int16Array]"] = Cn["[object Int32Array]"] = Cn["[object Uint8Array]"] = Cn["[object Uint8ClampedArray]"] = Cn["[object Uint16Array]"] = Cn["[object Uint32Array]"] = true, Cn["[object Arguments]"] = Cn["[object Array]"] = Cn["[object ArrayBuffer]"] = Cn["[object Boolean]"] = Cn["[object DataView]"] = Cn["[object Date]"] = Cn["[object Error]"] = Cn["[object Function]"] = Cn["[object Map]"] = Cn["[object Number]"] = Cn["[object Object]"] = Cn["[object RegExp]"] = Cn["[object Set]"] = Cn["[object String]"] = Cn["[object WeakMap]"] = false;
    var Dn = {};Dn["[object Arguments]"] = Dn["[object Array]"] = Dn["[object ArrayBuffer]"] = Dn["[object DataView]"] = Dn["[object Boolean]"] = Dn["[object Date]"] = Dn["[object Float32Array]"] = Dn["[object Float64Array]"] = Dn["[object Int8Array]"] = Dn["[object Int16Array]"] = Dn["[object Int32Array]"] = Dn["[object Map]"] = Dn["[object Number]"] = Dn["[object Object]"] = Dn["[object RegExp]"] = Dn["[object Set]"] = Dn["[object String]"] = Dn["[object Symbol]"] = Dn["[object Uint8Array]"] = Dn["[object Uint8ClampedArray]"] = Dn["[object Uint16Array]"] = Dn["[object Uint32Array]"] = true, Dn["[object Error]"] = Dn["[object Function]"] = Dn["[object WeakMap]"] = false;var Mn,
        Tn = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" },
        $n = parseFloat,
        Fn = parseInt,
        Nn = (typeof global === "undefined" ? "undefined" : _typeof(global)) == "object" && global && global.Object === Object && global,
        Pn = (typeof self === "undefined" ? "undefined" : _typeof(self)) == "object" && self && self.Object === Object && self,
        Zn = Nn || Pn || Function("return this")(),
        qn = ( false ? "undefined" : _typeof(exports)) == "object" && exports && !exports.nodeType && exports,
        Vn = qn && ( false ? "undefined" : _typeof(module)) == "object" && module && !module.nodeType && module,
        Kn = Vn && Vn.exports === qn,
        Gn = Kn && Nn.process;
    n: {
        try {
            Mn = Gn && Gn.binding && Gn.binding("util");break n;
        } catch (n) {}Mn = void 0;
    }var Hn = Mn && Mn.isArrayBuffer,
        Jn = Mn && Mn.isDate,
        Yn = Mn && Mn.isMap,
        Qn = Mn && Mn.isRegExp,
        Xn = Mn && Mn.isSet,
        nt = Mn && Mn.isTypedArray,
        tt = j("length"),
        rt = w({ "\xc0": "A", "\xc1": "A", "\xc2": "A", "\xc3": "A", "\xc4": "A", "\xc5": "A", "\xe0": "a", "\xe1": "a", "\xe2": "a", "\xe3": "a", "\xe4": "a", "\xe5": "a", "\xc7": "C", "\xe7": "c", "\xd0": "D", "\xf0": "d", "\xc8": "E", "\xc9": "E", "\xca": "E", "\xcb": "E", "\xe8": "e", "\xe9": "e", "\xea": "e", "\xeb": "e", "\xcc": "I", "\xcd": "I", "\xce": "I",
        "\xcf": "I", "\xec": "i", "\xed": "i", "\xee": "i", "\xef": "i", "\xd1": "N", "\xf1": "n", "\xd2": "O", "\xd3": "O", "\xd4": "O", "\xd5": "O", "\xd6": "O", "\xd8": "O", "\xf2": "o", "\xf3": "o", "\xf4": "o", "\xf5": "o", "\xf6": "o", "\xf8": "o", "\xd9": "U", "\xda": "U", "\xdb": "U", "\xdc": "U", "\xf9": "u", "\xfa": "u", "\xfb": "u", "\xfc": "u", "\xdd": "Y", "\xfd": "y", "\xff": "y", "\xc6": "Ae", "\xe6": "ae", "\xde": "Th", "\xfe": "th", "\xdf": "ss", "\u0100": "A", "\u0102": "A", "\u0104": "A", "\u0101": "a", "\u0103": "a", "\u0105": "a", "\u0106": "C", "\u0108": "C", "\u010A": "C",
        "\u010C": "C", "\u0107": "c", "\u0109": "c", "\u010B": "c", "\u010D": "c", "\u010E": "D", "\u0110": "D", "\u010F": "d", "\u0111": "d", "\u0112": "E", "\u0114": "E", "\u0116": "E", "\u0118": "E", "\u011A": "E", "\u0113": "e", "\u0115": "e", "\u0117": "e", "\u0119": "e", "\u011B": "e", "\u011C": "G", "\u011E": "G", "\u0120": "G", "\u0122": "G", "\u011D": "g", "\u011F": "g", "\u0121": "g", "\u0123": "g", "\u0124": "H", "\u0126": "H", "\u0125": "h", "\u0127": "h", "\u0128": "I", "\u012A": "I", "\u012C": "I", "\u012E": "I", "\u0130": "I", "\u0129": "i", "\u012B": "i", "\u012D": "i",
        "\u012F": "i", "\u0131": "i", "\u0134": "J", "\u0135": "j", "\u0136": "K", "\u0137": "k", "\u0138": "k", "\u0139": "L", "\u013B": "L", "\u013D": "L", "\u013F": "L", "\u0141": "L", "\u013A": "l", "\u013C": "l", "\u013E": "l", "\u0140": "l", "\u0142": "l", "\u0143": "N", "\u0145": "N", "\u0147": "N", "\u014A": "N", "\u0144": "n", "\u0146": "n", "\u0148": "n", "\u014B": "n", "\u014C": "O", "\u014E": "O", "\u0150": "O", "\u014D": "o", "\u014F": "o", "\u0151": "o", "\u0154": "R", "\u0156": "R", "\u0158": "R", "\u0155": "r", "\u0157": "r", "\u0159": "r", "\u015A": "S", "\u015C": "S",
        "\u015E": "S", "\u0160": "S", "\u015B": "s", "\u015D": "s", "\u015F": "s", "\u0161": "s", "\u0162": "T", "\u0164": "T", "\u0166": "T", "\u0163": "t", "\u0165": "t", "\u0167": "t", "\u0168": "U", "\u016A": "U", "\u016C": "U", "\u016E": "U", "\u0170": "U", "\u0172": "U", "\u0169": "u", "\u016B": "u", "\u016D": "u", "\u016F": "u", "\u0171": "u", "\u0173": "u", "\u0174": "W", "\u0175": "w", "\u0176": "Y", "\u0177": "y", "\u0178": "Y", "\u0179": "Z", "\u017B": "Z", "\u017D": "Z", "\u017A": "z", "\u017C": "z", "\u017E": "z", "\u0132": "IJ", "\u0133": "ij", "\u0152": "Oe", "\u0153": "oe",
        "\u0149": "'n", "\u017F": "s" }),
        et = w({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }),
        ut = w({ "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" }),
        it = function w(En) {
        function On(n) {
            if (xu(n) && !af(n) && !(n instanceof Mn)) {
                if (n instanceof zn) return n;if (ci.call(n, "__wrapped__")) return Pe(n);
            }return new zn(n);
        }function Sn() {}function zn(n, t) {
            this.__wrapped__ = n, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = F;
        }function Mn(n) {
            this.__wrapped__ = n, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, this.__iteratees__ = [], this.__takeCount__ = 4294967295, this.__views__ = [];
        }function Tn(n) {
            var t = -1,
                r = null == n ? 0 : n.length;for (this.clear(); ++t < r;) {
                var e = n[t];this.set(e[0], e[1]);
            }
        }function Nn(n) {
            var t = -1,
                r = null == n ? 0 : n.length;for (this.clear(); ++t < r;) {
                var e = n[t];this.set(e[0], e[1]);
            }
        }function Pn(n) {
            var t = -1,
                r = null == n ? 0 : n.length;for (this.clear(); ++t < r;) {
                var e = n[t];this.set(e[0], e[1]);
            }
        }function qn(n) {
            var t = -1,
                r = null == n ? 0 : n.length;for (this.__data__ = new Pn(); ++t < r;) {
                this.add(n[t]);
            }
        }function Vn(n) {
            this.size = (this.__data__ = new Nn(n)).size;
        }function Gn(n, t) {
            var r,
                e = af(n),
                u = !e && cf(n),
                i = !e && !u && sf(n),
                o = !e && !u && !i && gf(n),
                u = (e = e || u || i || o) ? E(n.length, ri) : [],
                f = u.length;for (r in n) {
                !t && !ci.call(n, r) || e && ("length" == r || i && ("offset" == r || "parent" == r) || o && ("buffer" == r || "byteLength" == r || "byteOffset" == r) || Re(r, f)) || u.push(r);
            }return u;
        }function tt(n) {
            var t = n.length;return t ? n[cr(0, t - 1)] : F;
        }function ot(n, t) {
            return Te(Mr(n), gt(t, 0, n.length));
        }function ft(n) {
            return Te(Mr(n));
        }function ct(n, t, r) {
            (r === F || hu(n[t], r)) && (r !== F || t in n) || _t(n, t, r);
        }function at(n, t, r) {
            var e = n[t];ci.call(n, t) && hu(e, r) && (r !== F || t in n) || _t(n, t, r);
        }function lt(n, t) {
            for (var r = n.length; r--;) {
                if (hu(n[r][0], t)) return r;
            }return -1;
        }function st(n, t, r, e) {
            return oo(n, function (n, u, i) {
                t(e, n, r(n), i);
            }), e;
        }function ht(n, t) {
            return n && Tr(t, Lu(t), n);
        }function pt(n, t) {
            return n && Tr(t, Uu(t), n);
        }function _t(n, t, r) {
            "__proto__" == t && Ei ? Ei(n, t, { configurable: true, enumerable: true, value: r, writable: true }) : n[t] = r;
        }function vt(n, t) {
            for (var r = -1, e = t.length, u = Hu(e), i = null == n; ++r < e;) {
                u[r] = i ? F : Wu(n, t[r]);
            }return u;
        }function gt(n, t, r) {
            return n === n && (r !== F && (n = n <= r ? n : r), t !== F && (n = n >= t ? n : t)), n;
        }function dt(n, t, r, e, i, o) {
            var f,
                c = 1 & t,
                a = 2 & t,
                l = 4 & t;if (r && (f = i ? r(n, e, i, o) : r(n)), f !== F) return f;if (!bu(n)) return n;if (e = af(n)) {
                if (f = Ee(n), !c) return Mr(n, f);
            } else {
                var s = yo(n),
                    h = "[object Function]" == s || "[object GeneratorFunction]" == s;if (sf(n)) return Wr(n, c);if ("[object Object]" == s || "[object Arguments]" == s || h && !i) {
                    if (f = a || h ? {} : Oe(n), !c) return a ? Fr(n, pt(f, n)) : $r(n, ht(f, n));
                } else {
                    if (!Dn[s]) return i ? n : {};f = Se(n, s, dt, c);
                }
            }if (o || (o = new Vn()), i = o.get(n)) return i;o.set(n, f);var a = l ? a ? ye : de : a ? Uu : Lu,
                p = e ? F : a(n);return u(p || n, function (e, u) {
                p && (u = e, e = n[u]), at(f, u, dt(e, t, r, u, n, o));
            }), f;
        }function yt(n) {
            var t = Lu(n);return function (r) {
                return bt(r, n, t);
            };
        }function bt(n, t, r) {
            var e = r.length;if (null == n) return !e;for (n = ni(n); e--;) {
                var u = r[e],
                    i = t[u],
                    o = n[u];if (o === F && !(u in n) || !i(o)) return false;
            }return true;
        }function xt(n, t, r) {
            if (typeof n != "function") throw new ei("Expected a function");return jo(function () {
                n.apply(F, r);
            }, t);
        }function jt(n, t, r, e) {
            var u = -1,
                i = c,
                o = true,
                f = n.length,
                s = [],
                h = t.length;
            if (!f) return s;r && (t = l(t, S(r))), e ? (i = a, o = false) : 200 <= t.length && (i = R, o = false, t = new qn(t));n: for (; ++u < f;) {
                var p = n[u],
                    _ = null == r ? p : r(p),
                    p = e || 0 !== p ? p : 0;if (o && _ === _) {
                    for (var v = h; v--;) {
                        if (t[v] === _) continue n;
                    }s.push(p);
                } else i(t, _, e) || s.push(p);
            }return s;
        }function wt(n, t) {
            var r = true;return oo(n, function (n, e, u) {
                return r = !!t(n, e, u);
            }), r;
        }function mt(n, t, r) {
            for (var e = -1, u = n.length; ++e < u;) {
                var i = n[e],
                    o = t(i);if (null != o && (f === F ? o === o && !Au(o) : r(o, f))) var f = o,
                    c = i;
            }return c;
        }function At(n, t) {
            var r = [];return oo(n, function (n, e, u) {
                t(n, e, u) && r.push(n);
            }), r;
        }function kt(n, t, r, e, u) {
            var i = -1,
                o = n.length;for (r || (r = Ie), u || (u = []); ++i < o;) {
                var f = n[i];0 < t && r(f) ? 1 < t ? kt(f, t - 1, r, e, u) : s(u, f) : e || (u[u.length] = f);
            }return u;
        }function Et(n, t) {
            return n && co(n, t, Lu);
        }function Ot(n, t) {
            return n && ao(n, t, Lu);
        }function St(n, t) {
            return f(t, function (t) {
                return gu(n[t]);
            });
        }function It(n, t) {
            t = Rr(t, n);for (var r = 0, e = t.length; null != n && r < e;) {
                n = n[$e(t[r++])];
            }return r && r == e ? n : F;
        }function Rt(n, t, r) {
            return t = t(n), af(n) ? t : s(t, r(n));
        }function zt(n) {
            if (null == n) n = n === F ? "[object Undefined]" : "[object Null]";else if (ki && ki in ni(n)) {
                var t = ci.call(n, ki),
                    r = n[ki];try {
                    n[ki] = F;var e = true;
                } catch (n) {}var u = si.call(n);e && (t ? n[ki] = r : delete n[ki]), n = u;
            } else n = si.call(n);return n;
        }function Wt(n, t) {
            return n > t;
        }function Bt(n, t) {
            return null != n && ci.call(n, t);
        }function Lt(n, t) {
            return null != n && t in ni(n);
        }function Ut(n, t, r) {
            for (var e = r ? a : c, u = n[0].length, i = n.length, o = i, f = Hu(i), s = 1 / 0, h = []; o--;) {
                var p = n[o];o && t && (p = l(p, S(t))), s = Mi(p.length, s), f[o] = !r && (t || 120 <= u && 120 <= p.length) ? new qn(o && p) : F;
            }var p = n[0],
                _ = -1,
                v = f[0];n: for (; ++_ < u && h.length < s;) {
                var g = p[_],
                    d = t ? t(g) : g,
                    g = r || 0 !== g ? g : 0;
                if (v ? !R(v, d) : !e(h, d, r)) {
                    for (o = i; --o;) {
                        var y = f[o];if (y ? !R(y, d) : !e(n[o], d, r)) continue n;
                    }v && v.push(d), h.push(g);
                }
            }return h;
        }function Ct(n, t, r) {
            var e = {};return Et(n, function (n, u, i) {
                t(e, r(n), u, i);
            }), e;
        }function Dt(n, t, e) {
            return t = Rr(t, n), n = 2 > t.length ? n : It(n, vr(t, 0, -1)), t = null == n ? n : n[$e(Ge(t))], null == t ? F : r(t, n, e);
        }function Mt(n) {
            return xu(n) && "[object Arguments]" == zt(n);
        }function Tt(n) {
            return xu(n) && "[object ArrayBuffer]" == zt(n);
        }function $t(n) {
            return xu(n) && "[object Date]" == zt(n);
        }function Ft(n, t, r, e, u) {
            if (n === t) t = true;else if (null == n || null == t || !xu(n) && !xu(t)) t = n !== n && t !== t;else n: {
                var i = af(n),
                    o = af(t),
                    f = i ? "[object Array]" : yo(n),
                    c = o ? "[object Array]" : yo(t),
                    f = "[object Arguments]" == f ? "[object Object]" : f,
                    c = "[object Arguments]" == c ? "[object Object]" : c,
                    a = "[object Object]" == f,
                    o = "[object Object]" == c;if ((c = f == c) && sf(n)) {
                    if (!sf(t)) {
                        t = false;break n;
                    }i = true, a = false;
                }if (c && !a) u || (u = new Vn()), t = i || gf(n) ? _e(n, t, r, e, Ft, u) : ve(n, t, f, r, e, Ft, u);else {
                    if (!(1 & r) && (i = a && ci.call(n, "__wrapped__"), f = o && ci.call(t, "__wrapped__"), i || f)) {
                        n = i ? n.value() : n, t = f ? t.value() : t, u || (u = new Vn()), t = Ft(n, t, r, e, u);break n;
                    }if (c) {
                        t: if (u || (u = new Vn()), i = 1 & r, f = de(n), o = f.length, c = de(t).length, o == c || i) {
                            for (a = o; a--;) {
                                var l = f[a];if (!(i ? l in t : ci.call(t, l))) {
                                    t = false;break t;
                                }
                            }if ((c = u.get(n)) && u.get(t)) t = c == t;else {
                                c = true, u.set(n, t), u.set(t, n);for (var s = i; ++a < o;) {
                                    var l = f[a],
                                        h = n[l],
                                        p = t[l];if (e) var _ = i ? e(p, h, l, t, n, u) : e(h, p, l, n, t, u);if (_ === F ? h !== p && !Ft(h, p, r, e, u) : !_) {
                                        c = false;break;
                                    }s || (s = "constructor" == l);
                                }c && !s && (r = n.constructor, e = t.constructor, r != e && "constructor" in n && "constructor" in t && !(typeof r == "function" && r instanceof r && typeof e == "function" && e instanceof e) && (c = false)), u.delete(n), u.delete(t), t = c;
                            }
                        } else t = false;
                    } else t = false;
                }
            }return t;
        }function Nt(n) {
            return xu(n) && "[object Map]" == yo(n);
        }function Pt(n, t, r, e) {
            var u = r.length,
                i = u,
                o = !e;if (null == n) return !i;for (n = ni(n); u--;) {
                var f = r[u];if (o && f[2] ? f[1] !== n[f[0]] : !(f[0] in n)) return false;
            }for (; ++u < i;) {
                var f = r[u],
                    c = f[0],
                    a = n[c],
                    l = f[1];if (o && f[2]) {
                    if (a === F && !(c in n)) return false;
                } else {
                    if (f = new Vn(), e) var s = e(a, l, c, n, t, f);if (s === F ? !Ft(l, a, 3, e, f) : !s) return false;
                }
            }return true;
        }function Zt(n) {
            return !(!bu(n) || li && li in n) && (gu(n) ? _i : xn).test(Fe(n));
        }function qt(n) {
            return xu(n) && "[object RegExp]" == zt(n);
        }function Vt(n) {
            return xu(n) && "[object Set]" == yo(n);
        }function Kt(n) {
            return xu(n) && yu(n.length) && !!Cn[zt(n)];
        }function Gt(n) {
            return typeof n == "function" ? n : null == n ? Nu : (typeof n === "undefined" ? "undefined" : _typeof(n)) == "object" ? af(n) ? Xt(n[0], n[1]) : Qt(n) : Vu(n);
        }function Ht(n) {
            if (!Le(n)) return Ci(n);var t,
                r = [];for (t in ni(n)) {
                ci.call(n, t) && "constructor" != t && r.push(t);
            }return r;
        }function Jt(n, t) {
            return n < t;
        }function Yt(n, t) {
            var r = -1,
                e = pu(n) ? Hu(n.length) : [];return oo(n, function (n, u, i) {
                e[++r] = t(n, u, i);
            }), e;
        }function Qt(n) {
            var t = me(n);return 1 == t.length && t[0][2] ? Ue(t[0][0], t[0][1]) : function (r) {
                return r === n || Pt(r, n, t);
            };
        }function Xt(n, t) {
            return We(n) && t === t && !bu(t) ? Ue($e(n), t) : function (r) {
                var e = Wu(r, n);return e === F && e === t ? Bu(r, n) : Ft(t, e, 3);
            };
        }function nr(n, t, r, e, u) {
            n !== t && co(t, function (i, o) {
                if (bu(i)) {
                    u || (u = new Vn());var f = u,
                        c = n[o],
                        a = t[o],
                        l = f.get(a);if (l) ct(n, o, l);else {
                        var l = e ? e(c, a, o + "", n, t, f) : F,
                            s = l === F;if (s) {
                            var h = af(a),
                                p = !h && sf(a),
                                _ = !h && !p && gf(a),
                                l = a;h || p || _ ? af(c) ? l = c : _u(c) ? l = Mr(c) : p ? (s = false, l = Wr(a, true)) : _ ? (s = false, l = Lr(a, true)) : l = [] : wu(a) || cf(a) ? (l = c, cf(c) ? l = Ru(c) : (!bu(c) || r && gu(c)) && (l = Oe(a))) : s = false;
                        }s && (f.set(a, l), nr(l, a, r, e, f), f.delete(a)), ct(n, o, l);
                    }
                } else f = e ? e(n[o], i, o + "", n, t, u) : F, f === F && (f = i), ct(n, o, f);
            }, Uu);
        }function tr(n, t) {
            var r = n.length;if (r) return t += 0 > t ? r : 0, Re(t, r) ? n[t] : F;
        }function rr(n, t, r) {
            var e = -1;return t = l(t.length ? t : [Nu], S(je())), n = Yt(n, function (n) {
                return { a: l(t, function (t) {
                        return t(n);
                    }), b: ++e, c: n };
            }), A(n, function (n, t) {
                var e;n: {
                    e = -1;for (var u = n.a, i = t.a, o = u.length, f = r.length; ++e < o;) {
                        var c = Ur(u[e], i[e]);if (c) {
                            e = e >= f ? c : c * ("desc" == r[e] ? -1 : 1);
                            break n;
                        }
                    }e = n.b - t.b;
                }return e;
            });
        }function er(n, t) {
            return ur(n, t, function (t, r) {
                return Bu(n, r);
            });
        }function ur(n, t, r) {
            for (var e = -1, u = t.length, i = {}; ++e < u;) {
                var o = t[e],
                    f = It(n, o);r(f, o) && pr(i, Rr(o, n), f);
            }return i;
        }function ir(n) {
            return function (t) {
                return It(t, n);
            };
        }function or(n, t, r, e) {
            var u = e ? y : d,
                i = -1,
                o = t.length,
                f = n;for (n === t && (t = Mr(t)), r && (f = l(n, S(r))); ++i < o;) {
                for (var c = 0, a = t[i], a = r ? r(a) : a; -1 < (c = u(f, a, c, e));) {
                    f !== n && wi.call(f, c, 1), wi.call(n, c, 1);
                }
            }return n;
        }function fr(n, t) {
            for (var r = n ? t.length : 0, e = r - 1; r--;) {
                var u = t[r];
                if (r == e || u !== i) {
                    var i = u;Re(u) ? wi.call(n, u, 1) : mr(n, u);
                }
            }
        }function cr(n, t) {
            return n + zi(Fi() * (t - n + 1));
        }function ar(n, t) {
            var r = "";if (!n || 1 > t || 9007199254740991 < t) return r;do {
                t % 2 && (r += n), (t = zi(t / 2)) && (n += n);
            } while (t);return r;
        }function lr(n, t) {
            return wo(Ce(n, t, Nu), n + "");
        }function sr(n) {
            return tt(Du(n));
        }function hr(n, t) {
            var r = Du(n);return Te(r, gt(t, 0, r.length));
        }function pr(n, t, r, e) {
            if (!bu(n)) return n;t = Rr(t, n);for (var u = -1, i = t.length, o = i - 1, f = n; null != f && ++u < i;) {
                var c = $e(t[u]),
                    a = r;if (u != o) {
                    var l = f[c],
                        a = e ? e(l, c, f) : F;
                    a === F && (a = bu(l) ? l : Re(t[u + 1]) ? [] : {});
                }at(f, c, a), f = f[c];
            }return n;
        }function _r(n) {
            return Te(Du(n));
        }function vr(n, t, r) {
            var e = -1,
                u = n.length;for (0 > t && (t = -t > u ? 0 : u + t), r = r > u ? u : r, 0 > r && (r += u), u = t > r ? 0 : r - t >>> 0, t >>>= 0, r = Hu(u); ++e < u;) {
                r[e] = n[e + t];
            }return r;
        }function gr(n, t) {
            var r;return oo(n, function (n, e, u) {
                return r = t(n, e, u), !r;
            }), !!r;
        }function dr(n, t, r) {
            var e = 0,
                u = null == n ? e : n.length;if (typeof t == "number" && t === t && 2147483647 >= u) {
                for (; e < u;) {
                    var i = e + u >>> 1,
                        o = n[i];null !== o && !Au(o) && (r ? o <= t : o < t) ? e = i + 1 : u = i;
                }return u;
            }return yr(n, t, Nu, r);
        }function yr(n, t, r, e) {
            t = r(t);for (var u = 0, i = null == n ? 0 : n.length, o = t !== t, f = null === t, c = Au(t), a = t === F; u < i;) {
                var l = zi((u + i) / 2),
                    s = r(n[l]),
                    h = s !== F,
                    p = null === s,
                    _ = s === s,
                    v = Au(s);(o ? e || _ : a ? _ && (e || h) : f ? _ && h && (e || !p) : c ? _ && h && !p && (e || !v) : p || v ? 0 : e ? s <= t : s < t) ? u = l + 1 : i = l;
            }return Mi(i, 4294967294);
        }function br(n, t) {
            for (var r = -1, e = n.length, u = 0, i = []; ++r < e;) {
                var o = n[r],
                    f = t ? t(o) : o;if (!r || !hu(f, c)) {
                    var c = f;i[u++] = 0 === o ? 0 : o;
                }
            }return i;
        }function xr(n) {
            return typeof n == "number" ? n : Au(n) ? P : +n;
        }function jr(n) {
            if (typeof n == "string") return n;
            if (af(n)) return l(n, jr) + "";if (Au(n)) return uo ? uo.call(n) : "";var t = n + "";return "0" == t && 1 / n == -N ? "-0" : t;
        }function wr(n, t, r) {
            var e = -1,
                u = c,
                i = n.length,
                o = true,
                f = [],
                l = f;if (r) o = false, u = a;else if (200 <= i) {
                if (u = t ? null : po(n)) return D(u);o = false, u = R, l = new qn();
            } else l = t ? [] : f;n: for (; ++e < i;) {
                var s = n[e],
                    h = t ? t(s) : s,
                    s = r || 0 !== s ? s : 0;if (o && h === h) {
                    for (var p = l.length; p--;) {
                        if (l[p] === h) continue n;
                    }t && l.push(h), f.push(s);
                } else u(l, h, r) || (l !== f && l.push(h), f.push(s));
            }return f;
        }function mr(n, t) {
            return t = Rr(t, n), n = 2 > t.length ? n : It(n, vr(t, 0, -1)), null == n || delete n[$e(Ge(t))];
        }function Ar(n, t, r, e) {
            for (var u = n.length, i = e ? u : -1; (e ? i-- : ++i < u) && t(n[i], i, n);) {}return r ? vr(n, e ? 0 : i, e ? i + 1 : u) : vr(n, e ? i + 1 : 0, e ? u : i);
        }function kr(n, t) {
            var r = n;return r instanceof Mn && (r = r.value()), h(t, function (n, t) {
                return t.func.apply(t.thisArg, s([n], t.args));
            }, r);
        }function Er(n, t, r) {
            var e = n.length;if (2 > e) return e ? wr(n[0]) : [];for (var u = -1, i = Hu(e); ++u < e;) {
                for (var o = n[u], f = -1; ++f < e;) {
                    f != u && (i[u] = jt(i[u] || o, n[f], t, r));
                }
            }return wr(kt(i, 1), t, r);
        }function Or(n, t, r) {
            for (var e = -1, u = n.length, i = t.length, o = {}; ++e < u;) {
                r(o, n[e], e < i ? t[e] : F);
            }return o;
        }function Sr(n) {
            return _u(n) ? n : [];
        }function Ir(n) {
            return typeof n == "function" ? n : Nu;
        }function Rr(n, t) {
            return af(n) ? n : We(n, t) ? [n] : mo(zu(n));
        }function zr(n, t, r) {
            var e = n.length;return r = r === F ? e : r, !t && r >= e ? n : vr(n, t, r);
        }function Wr(n, t) {
            if (t) return n.slice();var r = n.length,
                r = yi ? yi(r) : new n.constructor(r);return n.copy(r), r;
        }function Br(n) {
            var t = new n.constructor(n.byteLength);return new di(t).set(new di(n)), t;
        }function Lr(n, t) {
            return new n.constructor(t ? Br(n.buffer) : n.buffer, n.byteOffset, n.length);
        }function Ur(n, t) {
            if (n !== t) {
                var r = n !== F,
                    e = null === n,
                    u = n === n,
                    i = Au(n),
                    o = t !== F,
                    f = null === t,
                    c = t === t,
                    a = Au(t);if (!f && !a && !i && n > t || i && o && c && !f && !a || e && o && c || !r && c || !u) return 1;if (!e && !i && !a && n < t || a && r && u && !e && !i || f && r && u || !o && u || !c) return -1;
            }return 0;
        }function Cr(n, t, r, e) {
            var u = -1,
                i = n.length,
                o = r.length,
                f = -1,
                c = t.length,
                a = Di(i - o, 0),
                l = Hu(c + a);for (e = !e; ++f < c;) {
                l[f] = t[f];
            }for (; ++u < o;) {
                (e || u < i) && (l[r[u]] = n[u]);
            }for (; a--;) {
                l[f++] = n[u++];
            }return l;
        }function Dr(n, t, r, e) {
            var u = -1,
                i = n.length,
                o = -1,
                f = r.length,
                c = -1,
                a = t.length,
                l = Di(i - f, 0),
                s = Hu(l + a);
            for (e = !e; ++u < l;) {
                s[u] = n[u];
            }for (l = u; ++c < a;) {
                s[l + c] = t[c];
            }for (; ++o < f;) {
                (e || u < i) && (s[l + r[o]] = n[u++]);
            }return s;
        }function Mr(n, t) {
            var r = -1,
                e = n.length;for (t || (t = Hu(e)); ++r < e;) {
                t[r] = n[r];
            }return t;
        }function Tr(n, t, r, e) {
            var u = !r;r || (r = {});for (var i = -1, o = t.length; ++i < o;) {
                var f = t[i],
                    c = e ? e(r[f], n[f], f, r, n) : F;c === F && (c = n[f]), u ? _t(r, f, c) : at(r, f, c);
            }return r;
        }function $r(n, t) {
            return Tr(n, vo(n), t);
        }function Fr(n, t) {
            return Tr(n, go(n), t);
        }function Nr(n, t) {
            return function (r, u) {
                var i = af(r) ? e : st,
                    o = t ? t() : {};return i(r, n, je(u, 2), o);
            };
        }function Pr(n) {
            return lr(function (t, r) {
                var e = -1,
                    u = r.length,
                    i = 1 < u ? r[u - 1] : F,
                    o = 2 < u ? r[2] : F,
                    i = 3 < n.length && typeof i == "function" ? (u--, i) : F;for (o && ze(r[0], r[1], o) && (i = 3 > u ? F : i, u = 1), t = ni(t); ++e < u;) {
                    (o = r[e]) && n(t, o, e, i);
                }return t;
            });
        }function Zr(n, t) {
            return function (r, e) {
                if (null == r) return r;if (!pu(r)) return n(r, e);for (var u = r.length, i = t ? u : -1, o = ni(r); (t ? i-- : ++i < u) && false !== e(o[i], i, o);) {}return r;
            };
        }function qr(n) {
            return function (t, r, e) {
                var u = -1,
                    i = ni(t);e = e(t);for (var o = e.length; o--;) {
                    var f = e[n ? o : ++u];if (false === r(i[f], f, i)) break;
                }return t;
            };
        }function Vr(n, t, r) {
            function e() {
                return (this && this !== Zn && this instanceof e ? i : n).apply(u ? r : this, arguments);
            }var u = 1 & t,
                i = Hr(n);return e;
        }function Kr(n) {
            return function (t) {
                t = zu(t);var r = Bn.test(t) ? $(t) : F,
                    e = r ? r[0] : t.charAt(0);return t = r ? zr(r, 1).join("") : t.slice(1), e[n]() + t;
            };
        }function Gr(n) {
            return function (t) {
                return h($u(Tu(t).replace(In, "")), n, "");
            };
        }function Hr(n) {
            return function () {
                var t = arguments;switch (t.length) {case 0:
                        return new n();case 1:
                        return new n(t[0]);case 2:
                        return new n(t[0], t[1]);case 3:
                        return new n(t[0], t[1], t[2]);case 4:
                        return new n(t[0], t[1], t[2], t[3]);case 5:
                        return new n(t[0], t[1], t[2], t[3], t[4]);case 6:
                        return new n(t[0], t[1], t[2], t[3], t[4], t[5]);case 7:
                        return new n(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);}var r = io(n.prototype),
                    t = n.apply(r, t);return bu(t) ? t : r;
            };
        }function Jr(n, t, e) {
            function u() {
                for (var o = arguments.length, f = Hu(o), c = o, a = xe(u); c--;) {
                    f[c] = arguments[c];
                }return c = 3 > o && f[0] !== a && f[o - 1] !== a ? [] : C(f, a), o -= c.length, o < e ? fe(n, t, Xr, u.placeholder, F, f, c, F, F, e - o) : r(this && this !== Zn && this instanceof u ? i : n, this, f);
            }var i = Hr(n);return u;
        }function Yr(n) {
            return function (t, r, e) {
                var u = ni(t);if (!pu(t)) {
                    var i = je(r, 3);t = Lu(t), r = function r(n) {
                        return i(u[n], n, u);
                    };
                }return r = n(t, r, e), -1 < r ? u[i ? t[r] : r] : F;
            };
        }function Qr(n) {
            return ge(function (t) {
                var r = t.length,
                    e = r,
                    u = zn.prototype.thru;for (n && t.reverse(); e--;) {
                    var i = t[e];if (typeof i != "function") throw new ei("Expected a function");if (u && !o && "wrapper" == be(i)) var o = new zn([], true);
                }for (e = o ? e : r; ++e < r;) {
                    var i = t[e],
                        u = be(i),
                        f = "wrapper" == u ? _o(i) : F,
                        o = f && Be(f[0]) && 424 == f[1] && !f[4].length && 1 == f[9] ? o[be(f[0])].apply(o, f[3]) : 1 == i.length && Be(i) ? o[u]() : o.thru(i);
                }return function () {
                    var n = arguments,
                        e = n[0];if (o && 1 == n.length && af(e)) return o.plant(e).value();for (var u = 0, n = r ? t[u].apply(this, n) : e; ++u < r;) {
                        n = t[u].call(this, n);
                    }return n;
                };
            });
        }function Xr(n, t, r, e, u, i, o, f, c, a) {
            function l() {
                for (var d = arguments.length, y = Hu(d), b = d; b--;) {
                    y[b] = arguments[b];
                }if (_) {
                    var x,
                        j = xe(l),
                        b = y.length;for (x = 0; b--;) {
                        y[b] === j && ++x;
                    }
                }if (e && (y = Cr(y, e, u, _)), i && (y = Dr(y, i, o, _)), d -= x, _ && d < a) return j = C(y, j), fe(n, t, Xr, l.placeholder, r, y, j, f, c, a - d);if (j = h ? r : this, b = p ? j[n] : n, d = y.length, f) {
                    x = y.length;for (var w = Mi(f.length, x), m = Mr(y); w--;) {
                        var A = f[w];y[w] = Re(A, x) ? m[A] : F;
                    }
                } else v && 1 < d && y.reverse();return s && c < d && (y.length = c), this && this !== Zn && this instanceof l && (b = g || Hr(b)), b.apply(j, y);
            }var s = 128 & t,
                h = 1 & t,
                p = 2 & t,
                _ = 24 & t,
                v = 512 & t,
                g = p ? F : Hr(n);return l;
        }function ne(n, t) {
            return function (r, e) {
                return Ct(r, n, t(e));
            };
        }function te(n, t) {
            return function (r, e) {
                var u;if (r === F && e === F) return t;if (r !== F && (u = r), e !== F) {
                    if (u === F) return e;typeof r == "string" || typeof e == "string" ? (r = jr(r), e = jr(e)) : (r = xr(r), e = xr(e)), u = n(r, e);
                }return u;
            };
        }function re(n) {
            return ge(function (t) {
                return t = l(t, S(je())), lr(function (e) {
                    var u = this;return n(t, function (n) {
                        return r(n, u, e);
                    });
                });
            });
        }function ee(n, t) {
            t = t === F ? " " : jr(t);var r = t.length;return 2 > r ? r ? ar(t, n) : t : (r = ar(t, Ri(n / T(t))), Bn.test(t) ? zr($(r), 0, n).join("") : r.slice(0, n));
        }function ue(n, t, e, u) {
            function i() {
                for (var t = -1, c = arguments.length, a = -1, l = u.length, s = Hu(l + c), h = this && this !== Zn && this instanceof i ? f : n; ++a < l;) {
                    s[a] = u[a];
                }for (; c--;) {
                    s[a++] = arguments[++t];
                }return r(h, o ? e : this, s);
            }var o = 1 & t,
                f = Hr(n);return i;
        }function ie(n) {
            return function (t, r, e) {
                e && typeof e != "number" && ze(t, r, e) && (r = e = F), t = Eu(t), r === F ? (r = t, t = 0) : r = Eu(r), e = e === F ? t < r ? 1 : -1 : Eu(e);var u = -1;r = Di(Ri((r - t) / (e || 1)), 0);for (var i = Hu(r); r--;) {
                    i[n ? r : ++u] = t, t += e;
                }return i;
            };
        }function oe(n) {
            return function (t, r) {
                return typeof t == "string" && typeof r == "string" || (t = Iu(t), r = Iu(r)), n(t, r);
            };
        }function fe(n, t, r, e, u, i, o, f, c, a) {
            var l = 8 & t,
                s = l ? o : F;o = l ? F : o;var h = l ? i : F;return i = l ? F : i, t = (t | (l ? 32 : 64)) & ~(l ? 64 : 32), 4 & t || (t &= -4), u = [n, t, u, h, s, i, o, f, c, a], r = r.apply(F, u), Be(n) && xo(r, u), r.placeholder = e, De(r, n, t);
        }function ce(n) {
            var t = Xu[n];return function (n, r) {
                if (n = Iu(n), r = null == r ? 0 : Mi(Ou(r), 292)) {
                    var e = (zu(n) + "e").split("e"),
                        e = t(e[0] + "e" + (+e[1] + r)),
                        e = (zu(e) + "e").split("e");return +(e[0] + "e" + (+e[1] - r));
                }return t(n);
            };
        }function ae(n) {
            return function (t) {
                var r = yo(t);return "[object Map]" == r ? L(t) : "[object Set]" == r ? M(t) : O(t, n(t));
            };
        }function le(n, t, r, e, u, i, o, f) {
            var c = 2 & t;if (!c && typeof n != "function") throw new ei("Expected a function");var a = e ? e.length : 0;if (a || (t &= -97, e = u = F), o = o === F ? o : Di(Ou(o), 0), f = f === F ? f : Ou(f), a -= u ? u.length : 0, 64 & t) {
                var l = e,
                    s = u;e = u = F;
            }var h = c ? F : _o(n);return i = [n, t, r, e, u, l, s, i, o, f], h && (r = i[1], n = h[1], t = r | n, e = 128 == n && 8 == r || 128 == n && 256 == r && i[7].length <= h[8] || 384 == n && h[7].length <= h[8] && 8 == r, 131 > t || e) && (1 & n && (i[2] = h[2], t |= 1 & r ? 0 : 4), (r = h[3]) && (e = i[3], i[3] = e ? Cr(e, r, h[4]) : r, i[4] = e ? C(i[3], "__lodash_placeholder__") : h[4]), (r = h[5]) && (e = i[5], i[5] = e ? Dr(e, r, h[6]) : r, i[6] = e ? C(i[5], "__lodash_placeholder__") : h[6]), (r = h[7]) && (i[7] = r), 128 & n && (i[8] = null == i[8] ? h[8] : Mi(i[8], h[8])), null == i[9] && (i[9] = h[9]), i[0] = h[0], i[1] = t), n = i[0], t = i[1], r = i[2], e = i[3], u = i[4], f = i[9] = i[9] === F ? c ? 0 : n.length : Di(i[9] - a, 0), !f && 24 & t && (t &= -25), De((h ? lo : xo)(t && 1 != t ? 8 == t || 16 == t ? Jr(n, t, f) : 32 != t && 33 != t || u.length ? Xr.apply(F, i) : ue(n, t, r, e) : Vr(n, t, r), i), n, t);
        }function se(n, t, r, e) {
            return n === F || hu(n, ii[r]) && !ci.call(e, r) ? t : n;
        }function he(n, t, r, e, u, i) {
            return bu(n) && bu(t) && (i.set(t, n), nr(n, t, F, he, i), i.delete(t)), n;
        }function pe(n) {
            return wu(n) ? F : n;
        }function _e(n, t, r, e, u, i) {
            var o = 1 & r,
                f = n.length,
                c = t.length;if (f != c && !(o && c > f)) return false;if ((c = i.get(n)) && i.get(t)) return c == t;var c = -1,
                a = true,
                l = 2 & r ? new qn() : F;
            for (i.set(n, t), i.set(t, n); ++c < f;) {
                var s = n[c],
                    h = t[c];if (e) var p = o ? e(h, s, c, t, n, i) : e(s, h, c, n, t, i);if (p !== F) {
                    if (p) continue;a = false;break;
                }if (l) {
                    if (!_(t, function (n, t) {
                        if (!R(l, t) && (s === n || u(s, n, r, e, i))) return l.push(t);
                    })) {
                        a = false;break;
                    }
                } else if (s !== h && !u(s, h, r, e, i)) {
                    a = false;break;
                }
            }return i.delete(n), i.delete(t), a;
        }function ve(n, t, r, e, u, i, o) {
            switch (r) {case "[object DataView]":
                    if (n.byteLength != t.byteLength || n.byteOffset != t.byteOffset) break;n = n.buffer, t = t.buffer;case "[object ArrayBuffer]":
                    if (n.byteLength != t.byteLength || !i(new di(n), new di(t))) break;
                    return true;case "[object Boolean]":case "[object Date]":case "[object Number]":
                    return hu(+n, +t);case "[object Error]":
                    return n.name == t.name && n.message == t.message;case "[object RegExp]":case "[object String]":
                    return n == t + "";case "[object Map]":
                    var f = L;case "[object Set]":
                    if (f || (f = D), n.size != t.size && !(1 & e)) break;return (r = o.get(n)) ? r == t : (e |= 2, o.set(n, t), t = _e(f(n), f(t), e, u, i, o), o.delete(n), t);case "[object Symbol]":
                    if (eo) return eo.call(n) == eo.call(t);}return false;
        }function ge(n) {
            return wo(Ce(n, F, Ve), n + "");
        }function de(n) {
            return Rt(n, Lu, vo);
        }function ye(n) {
            return Rt(n, Uu, go);
        }function be(n) {
            for (var t = n.name + "", r = Ji[t], e = ci.call(Ji, t) ? r.length : 0; e--;) {
                var u = r[e],
                    i = u.func;if (null == i || i == n) return u.name;
            }return t;
        }function xe(n) {
            return (ci.call(On, "placeholder") ? On : n).placeholder;
        }function je() {
            var n = On.iteratee || Pu,
                n = n === Pu ? Gt : n;return arguments.length ? n(arguments[0], arguments[1]) : n;
        }function we(n, t) {
            var r = n.__data__,
                e = typeof t === "undefined" ? "undefined" : _typeof(t);return ("string" == e || "number" == e || "symbol" == e || "boolean" == e ? "__proto__" !== t : null === t) ? r[typeof t == "string" ? "string" : "hash"] : r.map;
        }function me(n) {
            for (var t = Lu(n), r = t.length; r--;) {
                var e = t[r],
                    u = n[e];t[r] = [e, u, u === u && !bu(u)];
            }return t;
        }function Ae(n, t) {
            var r = null == n ? F : n[t];return Zt(r) ? r : F;
        }function ke(n, t, r) {
            t = Rr(t, n);for (var e = -1, u = t.length, i = false; ++e < u;) {
                var o = $e(t[e]);if (!(i = null != n && r(n, o))) break;n = n[o];
            }return i || ++e != u ? i : (u = null == n ? 0 : n.length, !!u && yu(u) && Re(o, u) && (af(n) || cf(n)));
        }function Ee(n) {
            var t = n.length,
                r = n.constructor(t);return t && "string" == typeof n[0] && ci.call(n, "index") && (r.index = n.index, r.input = n.input), r;
        }function Oe(n) {
            return typeof n.constructor != "function" || Le(n) ? {} : io(bi(n));
        }function Se(r, e, u, i) {
            var o = r.constructor;switch (e) {case "[object ArrayBuffer]":
                    return Br(r);case "[object Boolean]":case "[object Date]":
                    return new o(+r);case "[object DataView]":
                    return e = i ? Br(r.buffer) : r.buffer, new r.constructor(e, r.byteOffset, r.byteLength);case "[object Float32Array]":case "[object Float64Array]":case "[object Int8Array]":case "[object Int16Array]":case "[object Int32Array]":case "[object Uint8Array]":case "[object Uint8ClampedArray]":
                case "[object Uint16Array]":case "[object Uint32Array]":
                    return Lr(r, i);case "[object Map]":
                    return e = i ? u(L(r), 1) : L(r), h(e, n, new r.constructor());case "[object Number]":case "[object String]":
                    return new o(r);case "[object RegExp]":
                    return e = new r.constructor(r.source, dn.exec(r)), e.lastIndex = r.lastIndex, e;case "[object Set]":
                    return e = i ? u(D(r), 1) : D(r), h(e, t, new r.constructor());case "[object Symbol]":
                    return eo ? ni(eo.call(r)) : {};}
        }function Ie(n) {
            return af(n) || cf(n) || !!(mi && n && n[mi]);
        }function Re(n, t) {
            return t = null == t ? 9007199254740991 : t, !!t && (typeof n == "number" || wn.test(n)) && -1 < n && 0 == n % 1 && n < t;
        }function ze(n, t, r) {
            if (!bu(r)) return false;var e = typeof t === "undefined" ? "undefined" : _typeof(t);return !!("number" == e ? pu(r) && Re(t, r.length) : "string" == e && t in r) && hu(r[t], n);
        }function We(n, t) {
            if (af(n)) return false;var r = typeof n === "undefined" ? "undefined" : _typeof(n);return !("number" != r && "symbol" != r && "boolean" != r && null != n && !Au(n)) || rn.test(n) || !tn.test(n) || null != t && n in ni(t);
        }function Be(n) {
            var t = be(n),
                r = On[t];return typeof r == "function" && t in Mn.prototype && (n === r || (t = _o(r), !!t && n === t[0]));
        }function Le(n) {
            var t = n && n.constructor;
            return n === (typeof t == "function" && t.prototype || ii);
        }function Ue(n, t) {
            return function (r) {
                return null != r && r[n] === t && (t !== F || n in ni(r));
            };
        }function Ce(n, t, e) {
            return t = Di(t === F ? n.length - 1 : t, 0), function () {
                for (var u = arguments, i = -1, o = Di(u.length - t, 0), f = Hu(o); ++i < o;) {
                    f[i] = u[t + i];
                }for (i = -1, o = Hu(t + 1); ++i < t;) {
                    o[i] = u[i];
                }return o[t] = e(f), r(n, this, o);
            };
        }function De(n, t, r) {
            var e = t + "";t = wo;var u,
                i = Ne;return u = (u = e.match(hn)) ? u[1].split(pn) : [], r = i(u, r), (i = r.length) && (u = i - 1, r[u] = (1 < i ? "& " : "") + r[u], r = r.join(2 < i ? ", " : " "), e = e.replace(sn, "{\n/* [wrapped with " + r + "] */\n")), t(n, e);
        }function Me(n) {
            var t = 0,
                r = 0;return function () {
                var e = Ti(),
                    u = 16 - (e - r);if (r = e, 0 < u) {
                    if (800 <= ++t) return arguments[0];
                } else t = 0;return n.apply(F, arguments);
            };
        }function Te(n, t) {
            var r = -1,
                e = n.length,
                u = e - 1;for (t = t === F ? e : t; ++r < t;) {
                var e = cr(r, u),
                    i = n[e];n[e] = n[r], n[r] = i;
            }return n.length = t, n;
        }function $e(n) {
            if (typeof n == "string" || Au(n)) return n;var t = n + "";return "0" == t && 1 / n == -N ? "-0" : t;
        }function Fe(n) {
            if (null != n) {
                try {
                    return fi.call(n);
                } catch (n) {}return n + "";
            }return "";
        }function Ne(n, t) {
            return u(Z, function (r) {
                var e = "_." + r[0];t & r[1] && !c(n, e) && n.push(e);
            }), n.sort();
        }function Pe(n) {
            if (n instanceof Mn) return n.clone();var t = new zn(n.__wrapped__, n.__chain__);return t.__actions__ = Mr(n.__actions__), t.__index__ = n.__index__, t.__values__ = n.__values__, t;
        }function Ze(n, t, r) {
            var e = null == n ? 0 : n.length;return e ? (r = null == r ? 0 : Ou(r), 0 > r && (r = Di(e + r, 0)), g(n, je(t, 3), r)) : -1;
        }function qe(n, t, r) {
            var e = null == n ? 0 : n.length;if (!e) return -1;var u = e - 1;return r !== F && (u = Ou(r), u = 0 > r ? Di(e + u, 0) : Mi(u, e - 1)), g(n, je(t, 3), u, true);
        }function Ve(n) {
            return (null == n ? 0 : n.length) ? kt(n, 1) : [];
        }function Ke(n) {
            return n && n.length ? n[0] : F;
        }function Ge(n) {
            var t = null == n ? 0 : n.length;return t ? n[t - 1] : F;
        }function He(n, t) {
            return n && n.length && t && t.length ? or(n, t) : n;
        }function Je(n) {
            return null == n ? n : Ni.call(n);
        }function Ye(n) {
            if (!n || !n.length) return [];var t = 0;return n = f(n, function (n) {
                if (_u(n)) return t = Di(n.length, t), true;
            }), E(t, function (t) {
                return l(n, j(t));
            });
        }function Qe(n, t) {
            if (!n || !n.length) return [];var e = Ye(n);return null == t ? e : l(e, function (n) {
                return r(t, F, n);
            });
        }function Xe(n) {
            return n = On(n), n.__chain__ = true, n;
        }function nu(n, t) {
            return t(n);
        }function tu() {
            return this;
        }function ru(n, t) {
            return (af(n) ? u : oo)(n, je(t, 3));
        }function eu(n, t) {
            return (af(n) ? i : fo)(n, je(t, 3));
        }function uu(n, t) {
            return (af(n) ? l : Yt)(n, je(t, 3));
        }function iu(n, t, r) {
            return t = r ? F : t, t = n && null == t ? n.length : t, le(n, 128, F, F, F, F, t);
        }function ou(n, t) {
            var r;if (typeof t != "function") throw new ei("Expected a function");return n = Ou(n), function () {
                return 0 < --n && (r = t.apply(this, arguments)), 1 >= n && (t = F), r;
            };
        }function fu(n, t, r) {
            return t = r ? F : t, n = le(n, 8, F, F, F, F, F, t), n.placeholder = fu.placeholder, n;
        }function cu(n, t, r) {
            return t = r ? F : t, n = le(n, 16, F, F, F, F, F, t), n.placeholder = cu.placeholder, n;
        }function au(n, t, r) {
            function e(t) {
                var r = c,
                    e = a;return c = a = F, _ = t, s = n.apply(e, r);
            }function u(n) {
                var r = n - p;return n -= _, p === F || r >= t || 0 > r || g && n >= l;
            }function i() {
                var n = Jo();if (u(n)) return o(n);var r,
                    e = jo;r = n - _, n = t - (n - p), r = g ? Mi(n, l - r) : n, h = e(i, r);
            }function o(n) {
                return h = F, d && c ? e(n) : (c = a = F, s);
            }function f() {
                var n = Jo(),
                    r = u(n);if (c = arguments, a = this, p = n, r) {
                    if (h === F) return _ = n = p, h = jo(i, t), v ? e(n) : s;if (g) return h = jo(i, t), e(p);
                }return h === F && (h = jo(i, t)), s;
            }var c,
                a,
                l,
                s,
                h,
                p,
                _ = 0,
                v = false,
                g = false,
                d = true;if (typeof n != "function") throw new ei("Expected a function");return t = Iu(t) || 0, bu(r) && (v = !!r.leading, l = (g = "maxWait" in r) ? Di(Iu(r.maxWait) || 0, t) : l, d = "trailing" in r ? !!r.trailing : d), f.cancel = function () {
                h !== F && ho(h), _ = 0, c = p = a = h = F;
            }, f.flush = function () {
                return h === F ? s : o(Jo());
            }, f;
        }function lu(n, t) {
            function r() {
                var e = arguments,
                    u = t ? t.apply(this, e) : e[0],
                    i = r.cache;return i.has(u) ? i.get(u) : (e = n.apply(this, e), r.cache = i.set(u, e) || i, e);
            }if (typeof n != "function" || null != t && typeof t != "function") throw new ei("Expected a function");return r.cache = new (lu.Cache || Pn)(), r;
        }function su(n) {
            if (typeof n != "function") throw new ei("Expected a function");return function () {
                var t = arguments;switch (t.length) {case 0:
                        return !n.call(this);case 1:
                        return !n.call(this, t[0]);case 2:
                        return !n.call(this, t[0], t[1]);case 3:
                        return !n.call(this, t[0], t[1], t[2]);}return !n.apply(this, t);
            };
        }function hu(n, t) {
            return n === t || n !== n && t !== t;
        }function pu(n) {
            return null != n && yu(n.length) && !gu(n);
        }function _u(n) {
            return xu(n) && pu(n);
        }function vu(n) {
            if (!xu(n)) return false;var t = zt(n);return "[object Error]" == t || "[object DOMException]" == t || typeof n.message == "string" && typeof n.name == "string" && !wu(n);
        }function gu(n) {
            return !!bu(n) && (n = zt(n), "[object Function]" == n || "[object GeneratorFunction]" == n || "[object AsyncFunction]" == n || "[object Proxy]" == n);
        }function du(n) {
            return typeof n == "number" && n == Ou(n);
        }function yu(n) {
            return typeof n == "number" && -1 < n && 0 == n % 1 && 9007199254740991 >= n;
        }function bu(n) {
            var t = typeof n === "undefined" ? "undefined" : _typeof(n);return null != n && ("object" == t || "function" == t);
        }function xu(n) {
            return null != n && (typeof n === "undefined" ? "undefined" : _typeof(n)) == "object";
        }function ju(n) {
            return typeof n == "number" || xu(n) && "[object Number]" == zt(n);
        }function wu(n) {
            return !(!xu(n) || "[object Object]" != zt(n)) && (n = bi(n), null === n || (n = ci.call(n, "constructor") && n.constructor, typeof n == "function" && n instanceof n && fi.call(n) == hi));
        }function mu(n) {
            return typeof n == "string" || !af(n) && xu(n) && "[object String]" == zt(n);
        }function Au(n) {
            return (typeof n === "undefined" ? "undefined" : _typeof(n)) == "symbol" || xu(n) && "[object Symbol]" == zt(n);
        }function ku(n) {
            if (!n) return [];if (pu(n)) return mu(n) ? $(n) : Mr(n);
            if (Ai && n[Ai]) {
                n = n[Ai]();for (var t, r = []; !(t = n.next()).done;) {
                    r.push(t.value);
                }return r;
            }return t = yo(n), ("[object Map]" == t ? L : "[object Set]" == t ? D : Du)(n);
        }function Eu(n) {
            return n ? (n = Iu(n), n === N || n === -N ? 1.7976931348623157e308 * (0 > n ? -1 : 1) : n === n ? n : 0) : 0 === n ? n : 0;
        }function Ou(n) {
            n = Eu(n);var t = n % 1;return n === n ? t ? n - t : n : 0;
        }function Su(n) {
            return n ? gt(Ou(n), 0, 4294967295) : 0;
        }function Iu(n) {
            if (typeof n == "number") return n;if (Au(n)) return P;if (bu(n) && (n = typeof n.valueOf == "function" ? n.valueOf() : n, n = bu(n) ? n + "" : n), typeof n != "string") return 0 === n ? n : +n;
            n = n.replace(cn, "");var t = bn.test(n);return t || jn.test(n) ? Fn(n.slice(2), t ? 2 : 8) : yn.test(n) ? P : +n;
        }function Ru(n) {
            return Tr(n, Uu(n));
        }function zu(n) {
            return null == n ? "" : jr(n);
        }function Wu(n, t, r) {
            return n = null == n ? F : It(n, t), n === F ? r : n;
        }function Bu(n, t) {
            return null != n && ke(n, t, Lt);
        }function Lu(n) {
            return pu(n) ? Gn(n) : Ht(n);
        }function Uu(n) {
            if (pu(n)) n = Gn(n, true);else if (bu(n)) {
                var t,
                    r = Le(n),
                    e = [];for (t in n) {
                    ("constructor" != t || !r && ci.call(n, t)) && e.push(t);
                }n = e;
            } else {
                if (t = [], null != n) for (r in ni(n)) {
                    t.push(r);
                }n = t;
            }return n;
        }function Cu(n, t) {
            if (null == n) return {};var r = l(ye(n), function (n) {
                return [n];
            });return t = je(t), ur(n, r, function (n, r) {
                return t(n, r[0]);
            });
        }function Du(n) {
            return null == n ? [] : I(n, Lu(n));
        }function Mu(n) {
            return Nf(zu(n).toLowerCase());
        }function Tu(n) {
            return (n = zu(n)) && n.replace(mn, rt).replace(Rn, "");
        }function $u(n, t, r) {
            return n = zu(n), t = r ? F : t, t === F ? Ln.test(n) ? n.match(Wn) || [] : n.match(_n) || [] : n.match(t) || [];
        }function Fu(n) {
            return function () {
                return n;
            };
        }function Nu(n) {
            return n;
        }function Pu(n) {
            return Gt(typeof n == "function" ? n : dt(n, 1));
        }function Zu(n, t, r) {
            var e = Lu(t),
                i = St(t, e);null != r || bu(t) && (i.length || !e.length) || (r = t, t = n, n = this, i = St(t, Lu(t)));var o = !(bu(r) && "chain" in r && !r.chain),
                f = gu(n);return u(i, function (r) {
                var e = t[r];n[r] = e, f && (n.prototype[r] = function () {
                    var t = this.__chain__;if (o || t) {
                        var r = n(this.__wrapped__);return (r.__actions__ = Mr(this.__actions__)).push({ func: e, args: arguments, thisArg: n }), r.__chain__ = t, r;
                    }return e.apply(n, s([this.value()], arguments));
                });
            }), n;
        }function qu() {}function Vu(n) {
            return We(n) ? j($e(n)) : ir(n);
        }function Ku() {
            return [];
        }function Gu() {
            return false;
        }En = null == En ? Zn : it.defaults(Zn.Object(), En, it.pick(Zn, Un));var Hu = En.Array,
            Ju = En.Date,
            Yu = En.Error,
            Qu = En.Function,
            Xu = En.Math,
            ni = En.Object,
            ti = En.RegExp,
            ri = En.String,
            ei = En.TypeError,
            ui = Hu.prototype,
            ii = ni.prototype,
            oi = En["__core-js_shared__"],
            fi = Qu.prototype.toString,
            ci = ii.hasOwnProperty,
            ai = 0,
            li = function () {
            var n = /[^.]+$/.exec(oi && oi.keys && oi.keys.IE_PROTO || "");return n ? "Symbol(src)_1." + n : "";
        }(),
            si = ii.toString,
            hi = fi.call(ni),
            pi = Zn._,
            _i = ti("^" + fi.call(ci).replace(on, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
            vi = Kn ? En.Buffer : F,
            gi = En.Symbol,
            di = En.Uint8Array,
            yi = vi ? vi.f : F,
            bi = U(ni.getPrototypeOf, ni),
            xi = ni.create,
            ji = ii.propertyIsEnumerable,
            wi = ui.splice,
            mi = gi ? gi.isConcatSpreadable : F,
            Ai = gi ? gi.iterator : F,
            ki = gi ? gi.toStringTag : F,
            Ei = function () {
            try {
                var n = Ae(ni, "defineProperty");return n({}, "", {}), n;
            } catch (n) {}
        }(),
            Oi = En.clearTimeout !== Zn.clearTimeout && En.clearTimeout,
            Si = Ju && Ju.now !== Zn.Date.now && Ju.now,
            Ii = En.setTimeout !== Zn.setTimeout && En.setTimeout,
            Ri = Xu.ceil,
            zi = Xu.floor,
            Wi = ni.getOwnPropertySymbols,
            Bi = vi ? vi.isBuffer : F,
            Li = En.isFinite,
            Ui = ui.join,
            Ci = U(ni.keys, ni),
            Di = Xu.max,
            Mi = Xu.min,
            Ti = Ju.now,
            $i = En.parseInt,
            Fi = Xu.random,
            Ni = ui.reverse,
            Pi = Ae(En, "DataView"),
            Zi = Ae(En, "Map"),
            qi = Ae(En, "Promise"),
            Vi = Ae(En, "Set"),
            Ki = Ae(En, "WeakMap"),
            Gi = Ae(ni, "create"),
            Hi = Ki && new Ki(),
            Ji = {},
            Yi = Fe(Pi),
            Qi = Fe(Zi),
            Xi = Fe(qi),
            no = Fe(Vi),
            to = Fe(Ki),
            ro = gi ? gi.prototype : F,
            eo = ro ? ro.valueOf : F,
            uo = ro ? ro.toString : F,
            io = function () {
            function n() {}return function (t) {
                return bu(t) ? xi ? xi(t) : (n.prototype = t, t = new n(), n.prototype = F, t) : {};
            };
        }();On.templateSettings = { escape: Q, evaluate: X, interpolate: nn, variable: "", imports: { _: On } }, On.prototype = Sn.prototype, On.prototype.constructor = On, zn.prototype = io(Sn.prototype), zn.prototype.constructor = zn, Mn.prototype = io(Sn.prototype), Mn.prototype.constructor = Mn, Tn.prototype.clear = function () {
            this.__data__ = Gi ? Gi(null) : {}, this.size = 0;
        }, Tn.prototype.delete = function (n) {
            return n = this.has(n) && delete this.__data__[n], this.size -= n ? 1 : 0, n;
        }, Tn.prototype.get = function (n) {
            var t = this.__data__;return Gi ? (n = t[n], "__lodash_hash_undefined__" === n ? F : n) : ci.call(t, n) ? t[n] : F;
        }, Tn.prototype.has = function (n) {
            var t = this.__data__;return Gi ? t[n] !== F : ci.call(t, n);
        }, Tn.prototype.set = function (n, t) {
            var r = this.__data__;return this.size += this.has(n) ? 0 : 1, r[n] = Gi && t === F ? "__lodash_hash_undefined__" : t, this;
        }, Nn.prototype.clear = function () {
            this.__data__ = [], this.size = 0;
        }, Nn.prototype.delete = function (n) {
            var t = this.__data__;return n = lt(t, n), !(0 > n) && (n == t.length - 1 ? t.pop() : wi.call(t, n, 1), --this.size, true);
        }, Nn.prototype.get = function (n) {
            var t = this.__data__;return n = lt(t, n), 0 > n ? F : t[n][1];
        }, Nn.prototype.has = function (n) {
            return -1 < lt(this.__data__, n);
        }, Nn.prototype.set = function (n, t) {
            var r = this.__data__,
                e = lt(r, n);return 0 > e ? (++this.size, r.push([n, t])) : r[e][1] = t, this;
        }, Pn.prototype.clear = function () {
            this.size = 0, this.__data__ = { hash: new Tn(), map: new (Zi || Nn)(), string: new Tn() };
        }, Pn.prototype.delete = function (n) {
            return n = we(this, n).delete(n), this.size -= n ? 1 : 0, n;
        }, Pn.prototype.get = function (n) {
            return we(this, n).get(n);
        }, Pn.prototype.has = function (n) {
            return we(this, n).has(n);
        }, Pn.prototype.set = function (n, t) {
            var r = we(this, n),
                e = r.size;return r.set(n, t), this.size += r.size == e ? 0 : 1, this;
        }, qn.prototype.add = qn.prototype.push = function (n) {
            return this.__data__.set(n, "__lodash_hash_undefined__"), this;
        }, qn.prototype.has = function (n) {
            return this.__data__.has(n);
        }, Vn.prototype.clear = function () {
            this.__data__ = new Nn(), this.size = 0;
        }, Vn.prototype.delete = function (n) {
            var t = this.__data__;return n = t.delete(n), this.size = t.size, n;
        }, Vn.prototype.get = function (n) {
            return this.__data__.get(n);
        }, Vn.prototype.has = function (n) {
            return this.__data__.has(n);
        }, Vn.prototype.set = function (n, t) {
            var r = this.__data__;if (r instanceof Nn) {
                var e = r.__data__;if (!Zi || 199 > e.length) return e.push([n, t]), this.size = ++r.size, this;r = this.__data__ = new Pn(e);
            }return r.set(n, t), this.size = r.size, this;
        };var oo = Zr(Et),
            fo = Zr(Ot, true),
            co = qr(),
            ao = qr(true),
            lo = Hi ? function (n, t) {
            return Hi.set(n, t), n;
        } : Nu,
            so = Ei ? function (n, t) {
            return Ei(n, "toString", { configurable: true, enumerable: false, value: Fu(t), writable: true });
        } : Nu,
            ho = Oi || function (n) {
            return Zn.clearTimeout(n);
        },
            po = Vi && 1 / D(new Vi([, -0]))[1] == N ? function (n) {
            return new Vi(n);
        } : qu,
            _o = Hi ? function (n) {
            return Hi.get(n);
        } : qu,
            vo = Wi ? function (n) {
            return null == n ? [] : (n = ni(n), f(Wi(n), function (t) {
                return ji.call(n, t);
            }));
        } : Ku,
            go = Wi ? function (n) {
            for (var t = []; n;) {
                s(t, vo(n)), n = bi(n);
            }return t;
        } : Ku,
            yo = zt;(Pi && "[object DataView]" != yo(new Pi(new ArrayBuffer(1))) || Zi && "[object Map]" != yo(new Zi()) || qi && "[object Promise]" != yo(qi.resolve()) || Vi && "[object Set]" != yo(new Vi()) || Ki && "[object WeakMap]" != yo(new Ki())) && (yo = function yo(n) {
            var t = zt(n);if (n = (n = "[object Object]" == t ? n.constructor : F) ? Fe(n) : "") switch (n) {case Yi:
                    return "[object DataView]";case Qi:
                    return "[object Map]";case Xi:
                    return "[object Promise]";case no:
                    return "[object Set]";case to:
                    return "[object WeakMap]";}return t;
        });var bo = oi ? gu : Gu,
            xo = Me(lo),
            jo = Ii || function (n, t) {
            return Zn.setTimeout(n, t);
        },
            wo = Me(so),
            mo = function (n) {
            n = lu(n, function (n) {
                return 500 === t.size && t.clear(), n;
            });var t = n.cache;return n;
        }(function (n) {
            var t = [];return en.test(n) && t.push(""), n.replace(un, function (n, r, e, u) {
                t.push(e ? u.replace(vn, "$1") : r || n);
            }), t;
        }),
            Ao = lr(function (n, t) {
            return _u(n) ? jt(n, kt(t, 1, _u, true)) : [];
        }),
            ko = lr(function (n, t) {
            var r = Ge(t);return _u(r) && (r = F), _u(n) ? jt(n, kt(t, 1, _u, true), je(r, 2)) : [];
        }),
            Eo = lr(function (n, t) {
            var r = Ge(t);return _u(r) && (r = F), _u(n) ? jt(n, kt(t, 1, _u, true), F, r) : [];
        }),
            Oo = lr(function (n) {
            var t = l(n, Sr);return t.length && t[0] === n[0] ? Ut(t) : [];
        }),
            So = lr(function (n) {
            var t = Ge(n),
                r = l(n, Sr);return t === Ge(r) ? t = F : r.pop(), r.length && r[0] === n[0] ? Ut(r, je(t, 2)) : [];
        }),
            Io = lr(function (n) {
            var t = Ge(n),
                r = l(n, Sr);return (t = typeof t == "function" ? t : F) && r.pop(), r.length && r[0] === n[0] ? Ut(r, F, t) : [];
        }),
            Ro = lr(He),
            zo = ge(function (n, t) {
            var r = null == n ? 0 : n.length,
                e = vt(n, t);return fr(n, l(t, function (n) {
                return Re(n, r) ? +n : n;
            }).sort(Ur)), e;
        }),
            Wo = lr(function (n) {
            return wr(kt(n, 1, _u, true));
        }),
            Bo = lr(function (n) {
            var t = Ge(n);return _u(t) && (t = F), wr(kt(n, 1, _u, true), je(t, 2));
        }),
            Lo = lr(function (n) {
            var t = Ge(n),
                t = typeof t == "function" ? t : F;return wr(kt(n, 1, _u, true), F, t);
        }),
            Uo = lr(function (n, t) {
            return _u(n) ? jt(n, t) : [];
        }),
            Co = lr(function (n) {
            return Er(f(n, _u));
        }),
            Do = lr(function (n) {
            var t = Ge(n);return _u(t) && (t = F), Er(f(n, _u), je(t, 2));
        }),
            Mo = lr(function (n) {
            var t = Ge(n),
                t = typeof t == "function" ? t : F;return Er(f(n, _u), F, t);
        }),
            To = lr(Ye),
            $o = lr(function (n) {
            var t = n.length,
                t = 1 < t ? n[t - 1] : F,
                t = typeof t == "function" ? (n.pop(), t) : F;return Qe(n, t);
        }),
            Fo = ge(function (n) {
            function t(t) {
                return vt(t, n);
            }var r = n.length,
                e = r ? n[0] : 0,
                u = this.__wrapped__;return !(1 < r || this.__actions__.length) && u instanceof Mn && Re(e) ? (u = u.slice(e, +e + (r ? 1 : 0)), u.__actions__.push({ func: nu, args: [t], thisArg: F }), new zn(u, this.__chain__).thru(function (n) {
                return r && !n.length && n.push(F), n;
            })) : this.thru(t);
        }),
            No = Nr(function (n, t, r) {
            ci.call(n, r) ? ++n[r] : _t(n, r, 1);
        }),
            Po = Yr(Ze),
            Zo = Yr(qe),
            qo = Nr(function (n, t, r) {
            ci.call(n, r) ? n[r].push(t) : _t(n, r, [t]);
        }),
            Vo = lr(function (n, t, e) {
            var u = -1,
                i = typeof t == "function",
                o = pu(n) ? Hu(n.length) : [];return oo(n, function (n) {
                o[++u] = i ? r(t, n, e) : Dt(n, t, e);
            }), o;
        }),
            Ko = Nr(function (n, t, r) {
            _t(n, r, t);
        }),
            Go = Nr(function (n, t, r) {
            n[r ? 0 : 1].push(t);
        }, function () {
            return [[], []];
        }),
            Ho = lr(function (n, t) {
            if (null == n) return [];var r = t.length;return 1 < r && ze(n, t[0], t[1]) ? t = [] : 2 < r && ze(t[0], t[1], t[2]) && (t = [t[0]]), rr(n, kt(t, 1), []);
        }),
            Jo = Si || function () {
            return Zn.Date.now();
        },
            Yo = lr(function (n, t, r) {
            var e = 1;if (r.length) var u = C(r, xe(Yo)),
                e = 32 | e;return le(n, e, t, r, u);
        }),
            Qo = lr(function (n, t, r) {
            var e = 3;if (r.length) var u = C(r, xe(Qo)),
                e = 32 | e;return le(t, e, n, r, u);
        }),
            Xo = lr(function (n, t) {
            return xt(n, 1, t);
        }),
            nf = lr(function (n, t, r) {
            return xt(n, Iu(t) || 0, r);
        });lu.Cache = Pn;var tf = lr(function (n, t) {
            t = 1 == t.length && af(t[0]) ? l(t[0], S(je())) : l(kt(t, 1), S(je()));var e = t.length;return lr(function (u) {
                for (var i = -1, o = Mi(u.length, e); ++i < o;) {
                    u[i] = t[i].call(this, u[i]);
                }return r(n, this, u);
            });
        }),
            rf = lr(function (n, t) {
            return le(n, 32, F, t, C(t, xe(rf)));
        }),
            ef = lr(function (n, t) {
            return le(n, 64, F, t, C(t, xe(ef)));
        }),
            uf = ge(function (n, t) {
            return le(n, 256, F, F, F, t);
        }),
            of = oe(Wt),
            ff = oe(function (n, t) {
            return n >= t;
        }),
            cf = Mt(function () {
            return arguments;
        }()) ? Mt : function (n) {
            return xu(n) && ci.call(n, "callee") && !ji.call(n, "callee");
        },
            af = Hu.isArray,
            lf = Hn ? S(Hn) : Tt,
            sf = Bi || Gu,
            hf = Jn ? S(Jn) : $t,
            pf = Yn ? S(Yn) : Nt,
            _f = Qn ? S(Qn) : qt,
            vf = Xn ? S(Xn) : Vt,
            gf = nt ? S(nt) : Kt,
            df = oe(Jt),
            yf = oe(function (n, t) {
            return n <= t;
        }),
            bf = Pr(function (n, t) {
            if (Le(t) || pu(t)) Tr(t, Lu(t), n);else for (var r in t) {
                ci.call(t, r) && at(n, r, t[r]);
            }
        }),
            xf = Pr(function (n, t) {
            Tr(t, Uu(t), n);
        }),
            jf = Pr(function (n, t, r, e) {
            Tr(t, Uu(t), n, e);
        }),
            wf = Pr(function (n, t, r, e) {
            Tr(t, Lu(t), n, e);
        }),
            mf = ge(vt),
            Af = lr(function (n) {
            return n.push(F, se), r(jf, F, n);
        }),
            kf = lr(function (n) {
            return n.push(F, he), r(Rf, F, n);
        }),
            Ef = ne(function (n, t, r) {
            n[t] = r;
        }, Fu(Nu)),
            Of = ne(function (n, t, r) {
            ci.call(n, t) ? n[t].push(r) : n[t] = [r];
        }, je),
            Sf = lr(Dt),
            If = Pr(function (n, t, r) {
            nr(n, t, r);
        }),
            Rf = Pr(function (n, t, r, e) {
            nr(n, t, r, e);
        }),
            zf = ge(function (n, t) {
            var r = {};if (null == n) return r;var e = false;t = l(t, function (t) {
                return t = Rr(t, n), e || (e = 1 < t.length), t;
            }), Tr(n, ye(n), r), e && (r = dt(r, 7, pe));for (var u = t.length; u--;) {
                mr(r, t[u]);
            }return r;
        }),
            Wf = ge(function (n, t) {
            return null == n ? {} : er(n, t);
        }),
            Bf = ae(Lu),
            Lf = ae(Uu),
            Uf = Gr(function (n, t, r) {
            return t = t.toLowerCase(), n + (r ? Mu(t) : t);
        }),
            Cf = Gr(function (n, t, r) {
            return n + (r ? "-" : "") + t.toLowerCase();
        }),
            Df = Gr(function (n, t, r) {
            return n + (r ? " " : "") + t.toLowerCase();
        }),
            Mf = Kr("toLowerCase"),
            Tf = Gr(function (n, t, r) {
            return n + (r ? "_" : "") + t.toLowerCase();
        }),
            $f = Gr(function (n, t, r) {
            return n + (r ? " " : "") + Nf(t);
        }),
            Ff = Gr(function (n, t, r) {
            return n + (r ? " " : "") + t.toUpperCase();
        }),
            Nf = Kr("toUpperCase"),
            Pf = lr(function (n, t) {
            try {
                return r(n, F, t);
            } catch (n) {
                return vu(n) ? n : new Yu(n);
            }
        }),
            Zf = ge(function (n, t) {
            return u(t, function (t) {
                t = $e(t), _t(n, t, Yo(n[t], n));
            }), n;
        }),
            qf = Qr(),
            Vf = Qr(true),
            Kf = lr(function (n, t) {
            return function (r) {
                return Dt(r, n, t);
            };
        }),
            Gf = lr(function (n, t) {
            return function (r) {
                return Dt(n, r, t);
            };
        }),
            Hf = re(l),
            Jf = re(o),
            Yf = re(_),
            Qf = ie(),
            Xf = ie(true),
            nc = te(function (n, t) {
            return n + t;
        }, 0),
            tc = ce("ceil"),
            rc = te(function (n, t) {
            return n / t;
        }, 1),
            ec = ce("floor"),
            uc = te(function (n, t) {
            return n * t;
        }, 1),
            ic = ce("round"),
            oc = te(function (n, t) {
            return n - t;
        }, 0);return On.after = function (n, t) {
            if (typeof t != "function") throw new ei("Expected a function");return n = Ou(n), function () {
                if (1 > --n) return t.apply(this, arguments);
            };
        }, On.ary = iu, On.assign = bf, On.assignIn = xf, On.assignInWith = jf, On.assignWith = wf, On.at = mf, On.before = ou, On.bind = Yo, On.bindAll = Zf, On.bindKey = Qo, On.castArray = function () {
            if (!arguments.length) return [];var n = arguments[0];return af(n) ? n : [n];
        }, On.chain = Xe, On.chunk = function (n, t, r) {
            if (t = (r ? ze(n, t, r) : t === F) ? 1 : Di(Ou(t), 0), r = null == n ? 0 : n.length, !r || 1 > t) return [];for (var e = 0, u = 0, i = Hu(Ri(r / t)); e < r;) {
                i[u++] = vr(n, e, e += t);
            }return i;
        }, On.compact = function (n) {
            for (var t = -1, r = null == n ? 0 : n.length, e = 0, u = []; ++t < r;) {
                var i = n[t];i && (u[e++] = i);
            }return u;
        }, On.concat = function () {
            var n = arguments.length;if (!n) return [];for (var t = Hu(n - 1), r = arguments[0]; n--;) {
                t[n - 1] = arguments[n];
            }return s(af(r) ? Mr(r) : [r], kt(t, 1));
        }, On.cond = function (n) {
            var t = null == n ? 0 : n.length,
                e = je();return n = t ? l(n, function (n) {
                if ("function" != typeof n[1]) throw new ei("Expected a function");return [e(n[0]), n[1]];
            }) : [], lr(function (e) {
                for (var u = -1; ++u < t;) {
                    var i = n[u];if (r(i[0], this, e)) return r(i[1], this, e);
                }
            });
        }, On.conforms = function (n) {
            return yt(dt(n, 1));
        }, On.constant = Fu, On.countBy = No, On.create = function (n, t) {
            var r = io(n);return null == t ? r : ht(r, t);
        }, On.curry = fu, On.curryRight = cu, On.debounce = au, On.defaults = Af, On.defaultsDeep = kf, On.defer = Xo, On.delay = nf, On.difference = Ao, On.differenceBy = ko, On.differenceWith = Eo, On.drop = function (n, t, r) {
            var e = null == n ? 0 : n.length;
            return e ? (t = r || t === F ? 1 : Ou(t), vr(n, 0 > t ? 0 : t, e)) : [];
        }, On.dropRight = function (n, t, r) {
            var e = null == n ? 0 : n.length;return e ? (t = r || t === F ? 1 : Ou(t), t = e - t, vr(n, 0, 0 > t ? 0 : t)) : [];
        }, On.dropRightWhile = function (n, t) {
            return n && n.length ? Ar(n, je(t, 3), true, true) : [];
        }, On.dropWhile = function (n, t) {
            return n && n.length ? Ar(n, je(t, 3), true) : [];
        }, On.fill = function (n, t, r, e) {
            var u = null == n ? 0 : n.length;if (!u) return [];for (r && typeof r != "number" && ze(n, t, r) && (r = 0, e = u), u = n.length, r = Ou(r), 0 > r && (r = -r > u ? 0 : u + r), e = e === F || e > u ? u : Ou(e), 0 > e && (e += u), e = r > e ? 0 : Su(e); r < e;) {
                n[r++] = t;
            }return n;
        }, On.filter = function (n, t) {
            return (af(n) ? f : At)(n, je(t, 3));
        }, On.flatMap = function (n, t) {
            return kt(uu(n, t), 1);
        }, On.flatMapDeep = function (n, t) {
            return kt(uu(n, t), N);
        }, On.flatMapDepth = function (n, t, r) {
            return r = r === F ? 1 : Ou(r), kt(uu(n, t), r);
        }, On.flatten = Ve, On.flattenDeep = function (n) {
            return (null == n ? 0 : n.length) ? kt(n, N) : [];
        }, On.flattenDepth = function (n, t) {
            return null != n && n.length ? (t = t === F ? 1 : Ou(t), kt(n, t)) : [];
        }, On.flip = function (n) {
            return le(n, 512);
        }, On.flow = qf, On.flowRight = Vf, On.fromPairs = function (n) {
            for (var t = -1, r = null == n ? 0 : n.length, e = {}; ++t < r;) {
                var u = n[t];e[u[0]] = u[1];
            }return e;
        }, On.functions = function (n) {
            return null == n ? [] : St(n, Lu(n));
        }, On.functionsIn = function (n) {
            return null == n ? [] : St(n, Uu(n));
        }, On.groupBy = qo, On.initial = function (n) {
            return (null == n ? 0 : n.length) ? vr(n, 0, -1) : [];
        }, On.intersection = Oo, On.intersectionBy = So, On.intersectionWith = Io, On.invert = Ef, On.invertBy = Of, On.invokeMap = Vo, On.iteratee = Pu, On.keyBy = Ko, On.keys = Lu, On.keysIn = Uu, On.map = uu, On.mapKeys = function (n, t) {
            var r = {};return t = je(t, 3), Et(n, function (n, e, u) {
                _t(r, t(n, e, u), n);
            }), r;
        }, On.mapValues = function (n, t) {
            var r = {};return t = je(t, 3), Et(n, function (n, e, u) {
                _t(r, e, t(n, e, u));
            }), r;
        }, On.matches = function (n) {
            return Qt(dt(n, 1));
        }, On.matchesProperty = function (n, t) {
            return Xt(n, dt(t, 1));
        }, On.memoize = lu, On.merge = If, On.mergeWith = Rf, On.method = Kf, On.methodOf = Gf, On.mixin = Zu, On.negate = su, On.nthArg = function (n) {
            return n = Ou(n), lr(function (t) {
                return tr(t, n);
            });
        }, On.omit = zf, On.omitBy = function (n, t) {
            return Cu(n, su(je(t)));
        }, On.once = function (n) {
            return ou(2, n);
        }, On.orderBy = function (n, t, r, e) {
            return null == n ? [] : (af(t) || (t = null == t ? [] : [t]), r = e ? F : r, af(r) || (r = null == r ? [] : [r]), rr(n, t, r));
        }, On.over = Hf, On.overArgs = tf, On.overEvery = Jf, On.overSome = Yf, On.partial = rf, On.partialRight = ef, On.partition = Go, On.pick = Wf, On.pickBy = Cu, On.property = Vu, On.propertyOf = function (n) {
            return function (t) {
                return null == n ? F : It(n, t);
            };
        }, On.pull = Ro, On.pullAll = He, On.pullAllBy = function (n, t, r) {
            return n && n.length && t && t.length ? or(n, t, je(r, 2)) : n;
        }, On.pullAllWith = function (n, t, r) {
            return n && n.length && t && t.length ? or(n, t, F, r) : n;
        }, On.pullAt = zo, On.range = Qf, On.rangeRight = Xf, On.rearg = uf, On.reject = function (n, t) {
            return (af(n) ? f : At)(n, su(je(t, 3)));
        }, On.remove = function (n, t) {
            var r = [];if (!n || !n.length) return r;var e = -1,
                u = [],
                i = n.length;for (t = je(t, 3); ++e < i;) {
                var o = n[e];t(o, e, n) && (r.push(o), u.push(e));
            }return fr(n, u), r;
        }, On.rest = function (n, t) {
            if (typeof n != "function") throw new ei("Expected a function");return t = t === F ? t : Ou(t), lr(n, t);
        }, On.reverse = Je, On.sampleSize = function (n, t, r) {
            return t = (r ? ze(n, t, r) : t === F) ? 1 : Ou(t), (af(n) ? ot : hr)(n, t);
        }, On.set = function (n, t, r) {
            return null == n ? n : pr(n, t, r);
        }, On.setWith = function (n, t, r, e) {
            return e = typeof e == "function" ? e : F, null == n ? n : pr(n, t, r, e);
        }, On.shuffle = function (n) {
            return (af(n) ? ft : _r)(n);
        }, On.slice = function (n, t, r) {
            var e = null == n ? 0 : n.length;return e ? (r && typeof r != "number" && ze(n, t, r) ? (t = 0, r = e) : (t = null == t ? 0 : Ou(t), r = r === F ? e : Ou(r)), vr(n, t, r)) : [];
        }, On.sortBy = Ho, On.sortedUniq = function (n) {
            return n && n.length ? br(n) : [];
        }, On.sortedUniqBy = function (n, t) {
            return n && n.length ? br(n, je(t, 2)) : [];
        }, On.split = function (n, t, r) {
            return r && typeof r != "number" && ze(n, t, r) && (t = r = F), r = r === F ? 4294967295 : r >>> 0, r ? (n = zu(n)) && (typeof t == "string" || null != t && !_f(t)) && (t = jr(t), !t && Bn.test(n)) ? zr($(n), 0, r) : n.split(t, r) : [];
        }, On.spread = function (n, t) {
            if (typeof n != "function") throw new ei("Expected a function");return t = null == t ? 0 : Di(Ou(t), 0), lr(function (e) {
                var u = e[t];return e = zr(e, 0, t), u && s(e, u), r(n, this, e);
            });
        }, On.tail = function (n) {
            var t = null == n ? 0 : n.length;return t ? vr(n, 1, t) : [];
        }, On.take = function (n, t, r) {
            return n && n.length ? (t = r || t === F ? 1 : Ou(t), vr(n, 0, 0 > t ? 0 : t)) : [];
        }, On.takeRight = function (n, t, r) {
            var e = null == n ? 0 : n.length;return e ? (t = r || t === F ? 1 : Ou(t), t = e - t, vr(n, 0 > t ? 0 : t, e)) : [];
        }, On.takeRightWhile = function (n, t) {
            return n && n.length ? Ar(n, je(t, 3), false, true) : [];
        }, On.takeWhile = function (n, t) {
            return n && n.length ? Ar(n, je(t, 3)) : [];
        }, On.tap = function (n, t) {
            return t(n), n;
        }, On.throttle = function (n, t, r) {
            var e = true,
                u = true;if (typeof n != "function") throw new ei("Expected a function");return bu(r) && (e = "leading" in r ? !!r.leading : e, u = "trailing" in r ? !!r.trailing : u), au(n, t, { leading: e, maxWait: t, trailing: u });
        }, On.thru = nu, On.toArray = ku, On.toPairs = Bf, On.toPairsIn = Lf, On.toPath = function (n) {
            return af(n) ? l(n, $e) : Au(n) ? [n] : Mr(mo(zu(n)));
        }, On.toPlainObject = Ru, On.transform = function (n, t, r) {
            var e = af(n),
                i = e || sf(n) || gf(n);if (t = je(t, 4), null == r) {
                var o = n && n.constructor;r = i ? e ? new o() : [] : bu(n) && gu(o) ? io(bi(n)) : {};
            }return (i ? u : Et)(n, function (n, e, u) {
                return t(r, n, e, u);
            }), r;
        }, On.unary = function (n) {
            return iu(n, 1);
        }, On.union = Wo, On.unionBy = Bo, On.unionWith = Lo, On.uniq = function (n) {
            return n && n.length ? wr(n) : [];
        }, On.uniqBy = function (n, t) {
            return n && n.length ? wr(n, je(t, 2)) : [];
        }, On.uniqWith = function (n, t) {
            return t = typeof t == "function" ? t : F, n && n.length ? wr(n, F, t) : [];
        }, On.unset = function (n, t) {
            return null == n || mr(n, t);
        }, On.unzip = Ye, On.unzipWith = Qe, On.update = function (n, t, r) {
            return null == n ? n : pr(n, t, Ir(r)(It(n, t)), void 0);
        }, On.updateWith = function (n, t, r, e) {
            return e = typeof e == "function" ? e : F, null != n && (n = pr(n, t, Ir(r)(It(n, t)), e)), n;
        }, On.values = Du, On.valuesIn = function (n) {
            return null == n ? [] : I(n, Uu(n));
        }, On.without = Uo, On.words = $u, On.wrap = function (n, t) {
            return rf(Ir(t), n);
        }, On.xor = Co, On.xorBy = Do, On.xorWith = Mo, On.zip = To, On.zipObject = function (n, t) {
            return Or(n || [], t || [], at);
        }, On.zipObjectDeep = function (n, t) {
            return Or(n || [], t || [], pr);
        }, On.zipWith = $o, On.entries = Bf, On.entriesIn = Lf, On.extend = xf, On.extendWith = jf, Zu(On, On), On.add = nc, On.attempt = Pf, On.camelCase = Uf, On.capitalize = Mu, On.ceil = tc, On.clamp = function (n, t, r) {
            return r === F && (r = t, t = F), r !== F && (r = Iu(r), r = r === r ? r : 0), t !== F && (t = Iu(t), t = t === t ? t : 0), gt(Iu(n), t, r);
        }, On.clone = function (n) {
            return dt(n, 4);
        }, On.cloneDeep = function (n) {
            return dt(n, 5);
        }, On.cloneDeepWith = function (n, t) {
            return t = typeof t == "function" ? t : F, dt(n, 5, t);
        }, On.cloneWith = function (n, t) {
            return t = typeof t == "function" ? t : F, dt(n, 4, t);
        }, On.conformsTo = function (n, t) {
            return null == t || bt(n, t, Lu(t));
        }, On.deburr = Tu, On.defaultTo = function (n, t) {
            return null == n || n !== n ? t : n;
        }, On.divide = rc, On.endsWith = function (n, t, r) {
            n = zu(n), t = jr(t);var e = n.length,
                e = r = r === F ? e : gt(Ou(r), 0, e);return r -= t.length, 0 <= r && n.slice(r, e) == t;
        }, On.eq = hu, On.escape = function (n) {
            return (n = zu(n)) && Y.test(n) ? n.replace(H, et) : n;
        }, On.escapeRegExp = function (n) {
            return (n = zu(n)) && fn.test(n) ? n.replace(on, "\\$&") : n;
        }, On.every = function (n, t, r) {
            var e = af(n) ? o : wt;return r && ze(n, t, r) && (t = F), e(n, je(t, 3));
        }, On.find = Po, On.findIndex = Ze, On.findKey = function (n, t) {
            return v(n, je(t, 3), Et);
        }, On.findLast = Zo, On.findLastIndex = qe, On.findLastKey = function (n, t) {
            return v(n, je(t, 3), Ot);
        }, On.floor = ec, On.forEach = ru, On.forEachRight = eu, On.forIn = function (n, t) {
            return null == n ? n : co(n, je(t, 3), Uu);
        }, On.forInRight = function (n, t) {
            return null == n ? n : ao(n, je(t, 3), Uu);
        }, On.forOwn = function (n, t) {
            return n && Et(n, je(t, 3));
        }, On.forOwnRight = function (n, t) {
            return n && Ot(n, je(t, 3));
        }, On.get = Wu, On.gt = of, On.gte = ff, On.has = function (n, t) {
            return null != n && ke(n, t, Bt);
        }, On.hasIn = Bu, On.head = Ke, On.identity = Nu, On.includes = function (n, t, r, e) {
            return n = pu(n) ? n : Du(n), r = r && !e ? Ou(r) : 0, e = n.length, 0 > r && (r = Di(e + r, 0)), mu(n) ? r <= e && -1 < n.indexOf(t, r) : !!e && -1 < d(n, t, r);
        }, On.indexOf = function (n, t, r) {
            var e = null == n ? 0 : n.length;return e ? (r = null == r ? 0 : Ou(r), 0 > r && (r = Di(e + r, 0)), d(n, t, r)) : -1;
        }, On.inRange = function (n, t, r) {
            return t = Eu(t), r === F ? (r = t, t = 0) : r = Eu(r), n = Iu(n), n >= Mi(t, r) && n < Di(t, r);
        }, On.invoke = Sf, On.isArguments = cf, On.isArray = af, On.isArrayBuffer = lf, On.isArrayLike = pu, On.isArrayLikeObject = _u, On.isBoolean = function (n) {
            return true === n || false === n || xu(n) && "[object Boolean]" == zt(n);
        }, On.isBuffer = sf, On.isDate = hf, On.isElement = function (n) {
            return xu(n) && 1 === n.nodeType && !wu(n);
        }, On.isEmpty = function (n) {
            if (null == n) return true;if (pu(n) && (af(n) || typeof n == "string" || typeof n.splice == "function" || sf(n) || gf(n) || cf(n))) return !n.length;var t = yo(n);if ("[object Map]" == t || "[object Set]" == t) return !n.size;if (Le(n)) return !Ht(n).length;for (var r in n) {
                if (ci.call(n, r)) return false;
            }return true;
        }, On.isEqual = function (n, t) {
            return Ft(n, t);
        }, On.isEqualWith = function (n, t, r) {
            var e = (r = typeof r == "function" ? r : F) ? r(n, t) : F;return e === F ? Ft(n, t, F, r) : !!e;
        }, On.isError = vu, On.isFinite = function (n) {
            return typeof n == "number" && Li(n);
        }, On.isFunction = gu, On.isInteger = du, On.isLength = yu, On.isMap = pf, On.isMatch = function (n, t) {
            return n === t || Pt(n, t, me(t));
        }, On.isMatchWith = function (n, t, r) {
            return r = typeof r == "function" ? r : F, Pt(n, t, me(t), r);
        }, On.isNaN = function (n) {
            return ju(n) && n != +n;
        }, On.isNative = function (n) {
            if (bo(n)) throw new Yu("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");
            return Zt(n);
        }, On.isNil = function (n) {
            return null == n;
        }, On.isNull = function (n) {
            return null === n;
        }, On.isNumber = ju, On.isObject = bu, On.isObjectLike = xu, On.isPlainObject = wu, On.isRegExp = _f, On.isSafeInteger = function (n) {
            return du(n) && -9007199254740991 <= n && 9007199254740991 >= n;
        }, On.isSet = vf, On.isString = mu, On.isSymbol = Au, On.isTypedArray = gf, On.isUndefined = function (n) {
            return n === F;
        }, On.isWeakMap = function (n) {
            return xu(n) && "[object WeakMap]" == yo(n);
        }, On.isWeakSet = function (n) {
            return xu(n) && "[object WeakSet]" == zt(n);
        }, On.join = function (n, t) {
            return null == n ? "" : Ui.call(n, t);
        }, On.kebabCase = Cf, On.last = Ge, On.lastIndexOf = function (n, t, r) {
            var e = null == n ? 0 : n.length;if (!e) return -1;var u = e;if (r !== F && (u = Ou(r), u = 0 > u ? Di(e + u, 0) : Mi(u, e - 1)), t === t) {
                for (r = u + 1; r-- && n[r] !== t;) {}n = r;
            } else n = g(n, b, u, true);return n;
        }, On.lowerCase = Df, On.lowerFirst = Mf, On.lt = df, On.lte = yf, On.max = function (n) {
            return n && n.length ? mt(n, Nu, Wt) : F;
        }, On.maxBy = function (n, t) {
            return n && n.length ? mt(n, je(t, 2), Wt) : F;
        }, On.mean = function (n) {
            return x(n, Nu);
        }, On.meanBy = function (n, t) {
            return x(n, je(t, 2));
        }, On.min = function (n) {
            return n && n.length ? mt(n, Nu, Jt) : F;
        }, On.minBy = function (n, t) {
            return n && n.length ? mt(n, je(t, 2), Jt) : F;
        }, On.stubArray = Ku, On.stubFalse = Gu, On.stubObject = function () {
            return {};
        }, On.stubString = function () {
            return "";
        }, On.stubTrue = function () {
            return true;
        }, On.multiply = uc, On.nth = function (n, t) {
            return n && n.length ? tr(n, Ou(t)) : F;
        }, On.noConflict = function () {
            return Zn._ === this && (Zn._ = pi), this;
        }, On.noop = qu, On.now = Jo, On.pad = function (n, t, r) {
            n = zu(n);var e = (t = Ou(t)) ? T(n) : 0;return !t || e >= t ? n : (t = (t - e) / 2, ee(zi(t), r) + n + ee(Ri(t), r));
        }, On.padEnd = function (n, t, r) {
            n = zu(n);var e = (t = Ou(t)) ? T(n) : 0;return t && e < t ? n + ee(t - e, r) : n;
        }, On.padStart = function (n, t, r) {
            n = zu(n);var e = (t = Ou(t)) ? T(n) : 0;return t && e < t ? ee(t - e, r) + n : n;
        }, On.parseInt = function (n, t, r) {
            return r || null == t ? t = 0 : t && (t = +t), $i(zu(n).replace(an, ""), t || 0);
        }, On.random = function (n, t, r) {
            if (r && typeof r != "boolean" && ze(n, t, r) && (t = r = F), r === F && (typeof t == "boolean" ? (r = t, t = F) : typeof n == "boolean" && (r = n, n = F)), n === F && t === F ? (n = 0, t = 1) : (n = Eu(n), t === F ? (t = n, n = 0) : t = Eu(t)), n > t) {
                var e = n;n = t, t = e;
            }return r || n % 1 || t % 1 ? (r = Fi(), Mi(n + r * (t - n + $n("1e-" + ((r + "").length - 1))), t)) : cr(n, t);
        }, On.reduce = function (n, t, r) {
            var e = af(n) ? h : m,
                u = 3 > arguments.length;return e(n, je(t, 4), r, u, oo);
        }, On.reduceRight = function (n, t, r) {
            var e = af(n) ? p : m,
                u = 3 > arguments.length;return e(n, je(t, 4), r, u, fo);
        }, On.repeat = function (n, t, r) {
            return t = (r ? ze(n, t, r) : t === F) ? 1 : Ou(t), ar(zu(n), t);
        }, On.replace = function () {
            var n = arguments,
                t = zu(n[0]);return 3 > n.length ? t : t.replace(n[1], n[2]);
        }, On.result = function (n, t, r) {
            t = Rr(t, n);var e = -1,
                u = t.length;for (u || (u = 1, n = F); ++e < u;) {
                var i = null == n ? F : n[$e(t[e])];i === F && (e = u, i = r), n = gu(i) ? i.call(n) : i;
            }return n;
        }, On.round = ic, On.runInContext = w, On.sample = function (n) {
            return (af(n) ? tt : sr)(n);
        }, On.size = function (n) {
            if (null == n) return 0;if (pu(n)) return mu(n) ? T(n) : n.length;var t = yo(n);return "[object Map]" == t || "[object Set]" == t ? n.size : Ht(n).length;
        }, On.snakeCase = Tf, On.some = function (n, t, r) {
            var e = af(n) ? _ : gr;return r && ze(n, t, r) && (t = F), e(n, je(t, 3));
        }, On.sortedIndex = function (n, t) {
            return dr(n, t);
        }, On.sortedIndexBy = function (n, t, r) {
            return yr(n, t, je(r, 2));
        }, On.sortedIndexOf = function (n, t) {
            var r = null == n ? 0 : n.length;if (r) {
                var e = dr(n, t);if (e < r && hu(n[e], t)) return e;
            }return -1;
        }, On.sortedLastIndex = function (n, t) {
            return dr(n, t, true);
        }, On.sortedLastIndexBy = function (n, t, r) {
            return yr(n, t, je(r, 2), true);
        }, On.sortedLastIndexOf = function (n, t) {
            if (null == n ? 0 : n.length) {
                var r = dr(n, t, true) - 1;if (hu(n[r], t)) return r;
            }return -1;
        }, On.startCase = $f, On.startsWith = function (n, t, r) {
            return n = zu(n), r = null == r ? 0 : gt(Ou(r), 0, n.length), t = jr(t), n.slice(r, r + t.length) == t;
        }, On.subtract = oc, On.sum = function (n) {
            return n && n.length ? k(n, Nu) : 0;
        }, On.sumBy = function (n, t) {
            return n && n.length ? k(n, je(t, 2)) : 0;
        }, On.template = function (n, t, r) {
            var e = On.templateSettings;r && ze(n, t, r) && (t = F), n = zu(n), t = jf({}, t, e, se), r = jf({}, t.imports, e.imports, se);var u,
                i,
                o = Lu(r),
                f = I(r, o),
                c = 0;r = t.interpolate || An;var a = "__p+='";r = ti((t.escape || An).source + "|" + r.source + "|" + (r === nn ? gn : An).source + "|" + (t.evaluate || An).source + "|$", "g");var l = "sourceURL" in t ? "//# sourceURL=" + t.sourceURL + "\n" : "";if (n.replace(r, function (t, r, e, o, f, l) {
                return e || (e = o), a += n.slice(c, l).replace(kn, B), r && (u = true, a += "'+__e(" + r + ")+'"), f && (i = true, a += "';" + f + ";\n__p+='"), e && (a += "'+((__t=(" + e + "))==null?'':__t)+'"), c = l + t.length, t;
            }), a += "';", (t = t.variable) || (a = "with(obj){" + a + "}"), a = (i ? a.replace(q, "") : a).replace(V, "$1").replace(K, "$1;"), a = "function(" + (t || "obj") + "){" + (t ? "" : "obj||(obj={});") + "var __t,__p=''" + (u ? ",__e=_.escape" : "") + (i ? ",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}" : ";") + a + "return __p}", t = Pf(function () {
                return Qu(o, l + "return " + a).apply(F, f);
            }), t.source = a, vu(t)) throw t;return t;
        }, On.times = function (n, t) {
            if (n = Ou(n), 1 > n || 9007199254740991 < n) return [];
            var r = 4294967295,
                e = Mi(n, 4294967295);for (t = je(t), n -= 4294967295, e = E(e, t); ++r < n;) {
                t(r);
            }return e;
        }, On.toFinite = Eu, On.toInteger = Ou, On.toLength = Su, On.toLower = function (n) {
            return zu(n).toLowerCase();
        }, On.toNumber = Iu, On.toSafeInteger = function (n) {
            return n ? gt(Ou(n), -9007199254740991, 9007199254740991) : 0 === n ? n : 0;
        }, On.toString = zu, On.toUpper = function (n) {
            return zu(n).toUpperCase();
        }, On.trim = function (n, t, r) {
            return (n = zu(n)) && (r || t === F) ? n.replace(cn, "") : n && (t = jr(t)) ? (n = $(n), r = $(t), t = z(n, r), r = W(n, r) + 1, zr(n, t, r).join("")) : n;
        }, On.trimEnd = function (n, t, r) {
            return (n = zu(n)) && (r || t === F) ? n.replace(ln, "") : n && (t = jr(t)) ? (n = $(n), t = W(n, $(t)) + 1, zr(n, 0, t).join("")) : n;
        }, On.trimStart = function (n, t, r) {
            return (n = zu(n)) && (r || t === F) ? n.replace(an, "") : n && (t = jr(t)) ? (n = $(n), t = z(n, $(t)), zr(n, t).join("")) : n;
        }, On.truncate = function (n, t) {
            var r = 30,
                e = "...";if (bu(t)) var u = "separator" in t ? t.separator : u,
                r = "length" in t ? Ou(t.length) : r,
                e = "omission" in t ? jr(t.omission) : e;n = zu(n);var i = n.length;if (Bn.test(n)) var o = $(n),
                i = o.length;if (r >= i) return n;if (i = r - T(e), 1 > i) return e;
            if (r = o ? zr(o, 0, i).join("") : n.slice(0, i), u === F) return r + e;if (o && (i += r.length - i), _f(u)) {
                if (n.slice(i).search(u)) {
                    var f = r;for (u.global || (u = ti(u.source, zu(dn.exec(u)) + "g")), u.lastIndex = 0; o = u.exec(f);) {
                        var c = o.index;
                    }r = r.slice(0, c === F ? i : c);
                }
            } else n.indexOf(jr(u), i) != i && (u = r.lastIndexOf(u), -1 < u && (r = r.slice(0, u)));return r + e;
        }, On.unescape = function (n) {
            return (n = zu(n)) && J.test(n) ? n.replace(G, ut) : n;
        }, On.uniqueId = function (n) {
            var t = ++ai;return zu(n) + t;
        }, On.upperCase = Ff, On.upperFirst = Nf, On.each = ru, On.eachRight = eu, On.first = Ke, Zu(On, function () {
            var n = {};return Et(On, function (t, r) {
                ci.call(On.prototype, r) || (n[r] = t);
            }), n;
        }(), { chain: false }), On.VERSION = "4.17.4", u("bind bindKey curry curryRight partial partialRight".split(" "), function (n) {
            On[n].placeholder = On;
        }), u(["drop", "take"], function (n, t) {
            Mn.prototype[n] = function (r) {
                r = r === F ? 1 : Di(Ou(r), 0);var e = this.__filtered__ && !t ? new Mn(this) : this.clone();return e.__filtered__ ? e.__takeCount__ = Mi(r, e.__takeCount__) : e.__views__.push({ size: Mi(r, 4294967295), type: n + (0 > e.__dir__ ? "Right" : "") }), e;
            }, Mn.prototype[n + "Right"] = function (t) {
                return this.reverse()[n](t).reverse();
            };
        }), u(["filter", "map", "takeWhile"], function (n, t) {
            var r = t + 1,
                e = 1 == r || 3 == r;Mn.prototype[n] = function (n) {
                var t = this.clone();return t.__iteratees__.push({ iteratee: je(n, 3), type: r }), t.__filtered__ = t.__filtered__ || e, t;
            };
        }), u(["head", "last"], function (n, t) {
            var r = "take" + (t ? "Right" : "");Mn.prototype[n] = function () {
                return this[r](1).value()[0];
            };
        }), u(["initial", "tail"], function (n, t) {
            var r = "drop" + (t ? "" : "Right");Mn.prototype[n] = function () {
                return this.__filtered__ ? new Mn(this) : this[r](1);
            };
        }), Mn.prototype.compact = function () {
            return this.filter(Nu);
        }, Mn.prototype.find = function (n) {
            return this.filter(n).head();
        }, Mn.prototype.findLast = function (n) {
            return this.reverse().find(n);
        }, Mn.prototype.invokeMap = lr(function (n, t) {
            return typeof n == "function" ? new Mn(this) : this.map(function (r) {
                return Dt(r, n, t);
            });
        }), Mn.prototype.reject = function (n) {
            return this.filter(su(je(n)));
        }, Mn.prototype.slice = function (n, t) {
            n = Ou(n);var r = this;return r.__filtered__ && (0 < n || 0 > t) ? new Mn(r) : (0 > n ? r = r.takeRight(-n) : n && (r = r.drop(n)), t !== F && (t = Ou(t), r = 0 > t ? r.dropRight(-t) : r.take(t - n)), r);
        }, Mn.prototype.takeRightWhile = function (n) {
            return this.reverse().takeWhile(n).reverse();
        }, Mn.prototype.toArray = function () {
            return this.take(4294967295);
        }, Et(Mn.prototype, function (n, t) {
            var r = /^(?:filter|find|map|reject)|While$/.test(t),
                e = /^(?:head|last)$/.test(t),
                u = On[e ? "take" + ("last" == t ? "Right" : "") : t],
                i = e || /^find/.test(t);u && (On.prototype[t] = function () {
                function t(n) {
                    return n = u.apply(On, s([n], f)), e && h ? n[0] : n;
                }var o = this.__wrapped__,
                    f = e ? [1] : arguments,
                    c = o instanceof Mn,
                    a = f[0],
                    l = c || af(o);
                l && r && typeof a == "function" && 1 != a.length && (c = l = false);var h = this.__chain__,
                    p = !!this.__actions__.length,
                    a = i && !h,
                    c = c && !p;return !i && l ? (o = c ? o : new Mn(this), o = n.apply(o, f), o.__actions__.push({ func: nu, args: [t], thisArg: F }), new zn(o, h)) : a && c ? n.apply(this, f) : (o = this.thru(t), a ? e ? o.value()[0] : o.value() : o);
            });
        }), u("pop push shift sort splice unshift".split(" "), function (n) {
            var t = ui[n],
                r = /^(?:push|sort|unshift)$/.test(n) ? "tap" : "thru",
                e = /^(?:pop|shift)$/.test(n);On.prototype[n] = function () {
                var n = arguments;if (e && !this.__chain__) {
                    var u = this.value();return t.apply(af(u) ? u : [], n);
                }return this[r](function (r) {
                    return t.apply(af(r) ? r : [], n);
                });
            };
        }), Et(Mn.prototype, function (n, t) {
            var r = On[t];if (r) {
                var e = r.name + "";(Ji[e] || (Ji[e] = [])).push({ name: t, func: r });
            }
        }), Ji[Xr(F, 2).name] = [{ name: "wrapper", func: F }], Mn.prototype.clone = function () {
            var n = new Mn(this.__wrapped__);return n.__actions__ = Mr(this.__actions__), n.__dir__ = this.__dir__, n.__filtered__ = this.__filtered__, n.__iteratees__ = Mr(this.__iteratees__), n.__takeCount__ = this.__takeCount__, n.__views__ = Mr(this.__views__), n;
        }, Mn.prototype.reverse = function () {
            if (this.__filtered__) {
                var n = new Mn(this);n.__dir__ = -1, n.__filtered__ = true;
            } else n = this.clone(), n.__dir__ *= -1;return n;
        }, Mn.prototype.value = function () {
            var n,
                t = this.__wrapped__.value(),
                r = this.__dir__,
                e = af(t),
                u = 0 > r,
                i = e ? t.length : 0;n = i;for (var o = this.__views__, f = 0, c = -1, a = o.length; ++c < a;) {
                var l = o[c],
                    s = l.size;switch (l.type) {case "drop":
                        f += s;break;case "dropRight":
                        n -= s;break;case "take":
                        n = Mi(n, f + s);break;case "takeRight":
                        f = Di(f, n - s);}
            }if (n = { start: f, end: n }, o = n.start, f = n.end, n = f - o, o = u ? f : o - 1, f = this.__iteratees__, c = f.length, a = 0, l = Mi(n, this.__takeCount__), !e || !u && i == n && l == n) return kr(t, this.__actions__);e = [];n: for (; n-- && a < l;) {
                for (o += r, u = -1, i = t[o]; ++u < c;) {
                    var h = f[u],
                        s = h.type,
                        h = (0, h.iteratee)(i);if (2 == s) i = h;else if (!h) {
                        if (1 == s) continue n;break n;
                    }
                }e[a++] = i;
            }return e;
        }, On.prototype.at = Fo, On.prototype.chain = function () {
            return Xe(this);
        }, On.prototype.commit = function () {
            return new zn(this.value(), this.__chain__);
        }, On.prototype.next = function () {
            this.__values__ === F && (this.__values__ = ku(this.value()));
            var n = this.__index__ >= this.__values__.length;return { done: n, value: n ? F : this.__values__[this.__index__++] };
        }, On.prototype.plant = function (n) {
            for (var t, r = this; r instanceof Sn;) {
                var e = Pe(r);e.__index__ = 0, e.__values__ = F, t ? u.__wrapped__ = e : t = e;var u = e,
                    r = r.__wrapped__;
            }return u.__wrapped__ = n, t;
        }, On.prototype.reverse = function () {
            var n = this.__wrapped__;return n instanceof Mn ? (this.__actions__.length && (n = new Mn(this)), n = n.reverse(), n.__actions__.push({ func: nu, args: [Je], thisArg: F }), new zn(n, this.__chain__)) : this.thru(Je);
        }, On.prototype.toJSON = On.prototype.valueOf = On.prototype.value = function () {
            return kr(this.__wrapped__, this.__actions__);
        }, On.prototype.first = On.prototype.head, Ai && (On.prototype[Ai] = tu), On;
    }();"function" == "function" && _typeof(__webpack_require__(1)) == "object" && __webpack_require__(1) ? (Zn._ = it, !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
        return it;
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))) : Vn ? ((Vn.exports = it)._ = it, qn._ = it) : Zn._ = it;
}).call(this);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3)(module)))

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery) {/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under the MIT license
 */

if (typeof jQuery === 'undefined') {
  throw new Error('Bootstrap\'s JavaScript requires jQuery')
}

+function ($) {
  'use strict';
  var version = $.fn.jquery.split(' ')[0].split('.')
  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {
    throw new Error('Bootstrap\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')
  }
}(jQuery);

/* ========================================================================
 * Bootstrap: transition.js v3.3.7
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      WebkitTransition : 'webkitTransitionEnd',
      MozTransition    : 'transitionend',
      OTransition      : 'oTransitionEnd otransitionend',
      transition       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one('bsTransitionEnd', function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: alert.js v3.3.7
 * http://getbootstrap.com/javascript/#alerts
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.VERSION = '3.3.7'

  Alert.TRANSITION_DURATION = 150

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = $(selector === '#' ? [] : selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.closest('.alert')
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      // detach from parent, fire event then clean up data
      $parent.detach().trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one('bsTransitionEnd', removeElement)
        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.alert

  $.fn.alert             = Plugin
  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(jQuery);

/* ========================================================================
 * Bootstrap: button.js v3.3.7
 * http://getbootstrap.com/javascript/#buttons
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element  = $(element)
    this.options   = $.extend({}, Button.DEFAULTS, options)
    this.isLoading = false
  }

  Button.VERSION  = '3.3.7'

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state += 'Text'

    if (data.resetText == null) $el.data('resetText', $el[val]())

    // push to event loop to allow forms to submit
    setTimeout($.proxy(function () {
      $el[val](data[state] == null ? this.options[state] : data[state])

      if (state == 'loadingText') {
        this.isLoading = true
        $el.addClass(d).attr(d, d).prop(d, true)
      } else if (this.isLoading) {
        this.isLoading = false
        $el.removeClass(d).removeAttr(d).prop(d, false)
      }
    }, this), 0)
  }

  Button.prototype.toggle = function () {
    var changed = true
    var $parent = this.$element.closest('[data-toggle="buttons"]')

    if ($parent.length) {
      var $input = this.$element.find('input')
      if ($input.prop('type') == 'radio') {
        if ($input.prop('checked')) changed = false
        $parent.find('.active').removeClass('active')
        this.$element.addClass('active')
      } else if ($input.prop('type') == 'checkbox') {
        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false
        this.$element.toggleClass('active')
      }
      $input.prop('checked', this.$element.hasClass('active'))
      if (changed) $input.trigger('change')
    } else {
      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))
      this.$element.toggleClass('active')
    }
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  var old = $.fn.button

  $.fn.button             = Plugin
  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document)
    .on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      var $btn = $(e.target).closest('.btn')
      Plugin.call($btn, 'toggle')
      if (!($(e.target).is('input[type="radio"], input[type="checkbox"]'))) {
        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes
        e.preventDefault()
        // The target component still receive the focus
        if ($btn.is('input,button')) $btn.trigger('focus')
        else $btn.find('input:visible,button:visible').first().trigger('focus')
      }
    })
    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))
    })

}(jQuery);

/* ========================================================================
 * Bootstrap: carousel.js v3.3.7
 * http://getbootstrap.com/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      = null
    this.sliding     = null
    this.interval    = null
    this.$active     = null
    this.$items      = null

    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))

    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element
      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))
      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))
  }

  Carousel.VERSION  = '3.3.7'

  Carousel.TRANSITION_DURATION = 600

  Carousel.DEFAULTS = {
    interval: 5000,
    pause: 'hover',
    wrap: true,
    keyboard: true
  }

  Carousel.prototype.keydown = function (e) {
    if (/input|textarea/i.test(e.target.tagName)) return
    switch (e.which) {
      case 37: this.prev(); break
      case 39: this.next(); break
      default: return
    }

    e.preventDefault()
  }

  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getItemIndex = function (item) {
    this.$items = item.parent().children('.item')
    return this.$items.index(item || this.$active)
  }

  Carousel.prototype.getItemForDirection = function (direction, active) {
    var activeIndex = this.getItemIndex(active)
    var willWrap = (direction == 'prev' && activeIndex === 0)
                || (direction == 'next' && activeIndex == (this.$items.length - 1))
    if (willWrap && !this.options.wrap) return active
    var delta = direction == 'prev' ? -1 : 1
    var itemIndex = (activeIndex + delta) % this.$items.length
    return this.$items.eq(itemIndex)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, "slid"
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || this.getItemForDirection(type, $active)
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var that      = this

    if ($next.hasClass('active')) return (this.sliding = false)

    var relatedTarget = $next[0]
    var slideEvent = $.Event('slide.bs.carousel', {
      relatedTarget: relatedTarget,
      direction: direction
    })
    this.$element.trigger(slideEvent)
    if (slideEvent.isDefaultPrevented()) return

    this.sliding = true

    isCycling && this.pause()

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])
      $nextIndicator && $nextIndicator.addClass('active')
    }

    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, "slid"
    if ($.support.transition && this.$element.hasClass('slide')) {
      $next.addClass(type)
      $next[0].offsetWidth // force reflow
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one('bsTransitionEnd', function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () {
            that.$element.trigger(slidEvent)
          }, 0)
        })
        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)
    } else {
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger(slidEvent)
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  var old = $.fn.carousel

  $.fn.carousel             = Plugin
  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  var clickHandler = function (e) {
    var href
    var $this   = $(this)
    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) // strip for ie7
    if (!$target.hasClass('carousel')) return
    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    Plugin.call($target, options)

    if (slideIndex) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  }

  $(document)
    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)
    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      Plugin.call($carousel, $carousel.data())
    })
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: collapse.js v3.3.7
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

/* jshint latedef: false */

+function ($) {
  'use strict';

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.$trigger      = $('[data-toggle="collapse"][href="#' + element.id + '"],' +
                           '[data-toggle="collapse"][data-target="#' + element.id + '"]')
    this.transitioning = null

    if (this.options.parent) {
      this.$parent = this.getParent()
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger)
    }

    if (this.options.toggle) this.toggle()
  }

  Collapse.VERSION  = '3.3.7'

  Collapse.TRANSITION_DURATION = 350

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var activesData
    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')

    if (actives && actives.length) {
      activesData = actives.data('bs.collapse')
      if (activesData && activesData.transitioning) return
    }

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    if (actives && actives.length) {
      Plugin.call(actives, 'hide')
      activesData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')[dimension](0)
      .attr('aria-expanded', true)

    this.$trigger
      .removeClass('collapsed')
      .attr('aria-expanded', true)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('collapse in')[dimension]('')
      this.transitioning = 0
      this.$element
        .trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse in')
      .attr('aria-expanded', false)

    this.$trigger
      .addClass('collapsed')
      .attr('aria-expanded', false)

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .removeClass('collapsing')
        .addClass('collapse')
        .trigger('hidden.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }

  Collapse.prototype.getParent = function () {
    return $(this.options.parent)
      .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')
      .each($.proxy(function (i, element) {
        var $element = $(element)
        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
      }, this))
      .end()
  }

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass('in')

    $element.attr('aria-expanded', isOpen)
    $trigger
      .toggleClass('collapsed', !isOpen)
      .attr('aria-expanded', isOpen)
  }

  function getTargetFromTrigger($trigger) {
    var href
    var target = $trigger.attr('data-target')
      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') // strip for ie7

    return $(target)
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false
      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.collapse

  $.fn.collapse             = Plugin
  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
    var $this   = $(this)

    if (!$this.attr('data-target')) e.preventDefault()

    var $target = getTargetFromTrigger($this)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $this.data()

    Plugin.call($target, option)
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: dropdown.js v3.3.7
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle="dropdown"]'
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.VERSION = '3.3.7'

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = selector && $(selector)

    return $parent && $parent.length ? $parent : $this.parent()
  }

  function clearMenus(e) {
    if (e && e.which === 3) return
    $(backdrop).remove()
    $(toggle).each(function () {
      var $this         = $(this)
      var $parent       = getParent($this)
      var relatedTarget = { relatedTarget: this }

      if (!$parent.hasClass('open')) return

      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return

      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this.attr('aria-expanded', 'false')
      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))
    })
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $(document.createElement('div'))
          .addClass('dropdown-backdrop')
          .insertAfter($(this))
          .on('click', clearMenus)
      }

      var relatedTarget = { relatedTarget: this }
      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this
        .trigger('focus')
        .attr('aria-expanded', 'true')

      $parent
        .toggleClass('open')
        .trigger($.Event('shown.bs.dropdown', relatedTarget))
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if (!isActive && e.which != 27 || isActive && e.which == 27) {
      if (e.which == 27) $parent.find(toggle).trigger('focus')
      return $this.trigger('click')
    }

    var desc = ' li:not(.disabled):visible a'
    var $items = $parent.find('.dropdown-menu' + desc)

    if (!$items.length) return

    var index = $items.index(e.target)

    if (e.which == 38 && index > 0)                 index--         // up
    if (e.which == 40 && index < $items.length - 1) index++         // down
    if (!~index)                                    index = 0

    $items.eq(index).trigger('focus')
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.dropdown')

      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.dropdown

  $.fn.dropdown             = Plugin
  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)
    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)

}(jQuery);

/* ========================================================================
 * Bootstrap: modal.js v3.3.7
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options             = options
    this.$body               = $(document.body)
    this.$element            = $(element)
    this.$dialog             = this.$element.find('.modal-dialog')
    this.$backdrop           = null
    this.isShown             = null
    this.originalBodyPad     = null
    this.scrollbarWidth      = 0
    this.ignoreBackdropClick = false

    if (this.options.remote) {
      this.$element
        .find('.modal-content')
        .load(this.options.remote, $.proxy(function () {
          this.$element.trigger('loaded.bs.modal')
        }, this))
    }
  }

  Modal.VERSION  = '3.3.7'

  Modal.TRANSITION_DURATION = 300
  Modal.BACKDROP_TRANSITION_DURATION = 150

  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.checkScrollbar()
    this.setScrollbar()
    this.$body.addClass('modal-open')

    this.escape()
    this.resize()

    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.$dialog.on('mousedown.dismiss.bs.modal', function () {
      that.$element.one('mouseup.dismiss.bs.modal', function (e) {
        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
      })
    })

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body) // don't move modals dom position
      }

      that.$element
        .show()
        .scrollTop(0)

      that.adjustDialog()

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element.addClass('in')

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$dialog // wait for modal to slide in
          .one('bsTransitionEnd', function () {
            that.$element.trigger('focus').trigger(e)
          })
          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
        that.$element.trigger('focus').trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()
    this.resize()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .off('click.dismiss.bs.modal')
      .off('mouseup.dismiss.bs.modal')

    this.$dialog.off('mousedown.dismiss.bs.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one('bsTransitionEnd', $.proxy(this.hideModal, this))
        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (document !== e.target &&
            this.$element[0] !== e.target &&
            !this.$element.has(e.target).length) {
          this.$element.trigger('focus')
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keydown.dismiss.bs.modal')
    }
  }

  Modal.prototype.resize = function () {
    if (this.isShown) {
      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))
    } else {
      $(window).off('resize.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.$body.removeClass('modal-open')
      that.resetAdjustments()
      that.resetScrollbar()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $(document.createElement('div'))
        .addClass('modal-backdrop ' + animate)
        .appendTo(this.$body)

      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
        if (this.ignoreBackdropClick) {
          this.ignoreBackdropClick = false
          return
        }
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus()
          : this.hide()
      }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one('bsTransitionEnd', callback)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      var callbackRemove = function () {
        that.removeBackdrop()
        callback && callback()
      }
      $.support.transition && this.$element.hasClass('fade') ?
        this.$backdrop
          .one('bsTransitionEnd', callbackRemove)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callbackRemove()

    } else if (callback) {
      callback()
    }
  }

  // these following methods are used to handle overflowing modals

  Modal.prototype.handleUpdate = function () {
    this.adjustDialog()
  }

  Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight

    this.$element.css({
      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
    })
  }

  Modal.prototype.resetAdjustments = function () {
    this.$element.css({
      paddingLeft: '',
      paddingRight: ''
    })
  }

  Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth
    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
      var documentElementRect = document.documentElement.getBoundingClientRect()
      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)
    }
    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth
    this.scrollbarWidth = this.measureScrollbar()
  }

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
    this.originalBodyPad = document.body.style.paddingRight || ''
    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)
  }

  Modal.prototype.resetScrollbar = function () {
    this.$body.css('padding-right', this.originalBodyPad)
  }

  Modal.prototype.measureScrollbar = function () { // thx walsh
    var scrollDiv = document.createElement('div')
    scrollDiv.className = 'modal-scrollbar-measure'
    this.$body.append(scrollDiv)
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
    this.$body[0].removeChild(scrollDiv)
    return scrollbarWidth
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  var old = $.fn.modal

  $.fn.modal             = Plugin
  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) // strip for ie7
    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    if ($this.is('a')) e.preventDefault()

    $target.one('show.bs.modal', function (showEvent) {
      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
      $target.one('hidden.bs.modal', function () {
        $this.is(':visible') && $this.trigger('focus')
      })
    })
    Plugin.call($target, option, this)
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: tooltip.js v3.3.7
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       = null
    this.options    = null
    this.enabled    = null
    this.timeout    = null
    this.hoverState = null
    this.$element   = null
    this.inState    = null

    this.init('tooltip', element, options)
  }

  Tooltip.VERSION  = '3.3.7'

  Tooltip.TRANSITION_DURATION = 150

  Tooltip.DEFAULTS = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false,
    viewport: {
      selector: 'body',
      padding: 0
    }
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled   = true
    this.type      = type
    this.$element  = $(element)
    this.options   = this.getOptions(options)
    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))
    this.inState   = { click: false, hover: false, focus: false }

    if (this.$element[0] instanceof document.constructor && !this.options.selector) {
      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')
    }

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay,
        hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true
    }

    if (self.tip().hasClass('in') || self.hoverState == 'in') {
      self.hoverState = 'in'
      return
    }

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.isInStateTrue = function () {
    for (var key in this.inState) {
      if (this.inState[key]) return true
    }

    return false
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false
    }

    if (self.isInStateTrue()) return

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.' + this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])
      if (e.isDefaultPrevented() || !inDom) return
      var that = this

      var $tip = this.tip()

      var tipId = this.getUID(this.type)

      this.setContent()
      $tip.attr('id', tipId)
      this.$element.attr('aria-describedby', tipId)

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)
        .data('bs.' + this.type, this)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)
      this.$element.trigger('inserted.bs.' + this.type)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var orgPlacement = placement
        var viewportDim = this.getPosition(this.$viewport)

        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :
                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :
                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :
                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)

      var complete = function () {
        var prevHoverState = that.hoverState
        that.$element.trigger('shown.bs.' + that.type)
        that.hoverState = null

        if (prevHoverState == 'out') that.leave(that)
      }

      $.support.transition && this.$tip.hasClass('fade') ?
        $tip
          .one('bsTransitionEnd', complete)
          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
        complete()
    }
  }

  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  += marginTop
    offset.left += marginLeft

    // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0
    $.offset.setOffset($tip[0], $.extend({
      using: function (props) {
        $tip.css({
          top: Math.round(props.top),
          left: Math.round(props.left)
        })
      }
    }, offset), 0)

    $tip.addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      offset.top = offset.top + height - actualHeight
    }

    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)

    if (delta.left) offset.left += delta.left
    else offset.top += delta.top

    var isVertical          = /top|bottom/.test(placement)
    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight
    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'

    $tip.offset(offset)
    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)
  }

  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
    this.arrow()
      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')
      .css(isVertical ? 'top' : 'left', '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function (callback) {
    var that = this
    var $tip = $(this.$tip)
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.
        that.$element
          .removeAttr('aria-describedby')
          .trigger('hidden.bs.' + that.type)
      }
      callback && callback()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && $tip.hasClass('fade') ?
      $tip
        .one('bsTransitionEnd', complete)
        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
      complete()

    this.hoverState = null

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function ($element) {
    $element   = $element || this.$element

    var el     = $element[0]
    var isBody = el.tagName == 'BODY'

    var elRect    = el.getBoundingClientRect()
    if (elRect.width == null) {
      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })
    }
    var isSvg = window.SVGElement && el instanceof window.SVGElement
    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.
    // See https://github.com/twbs/bootstrap/issues/20280
    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())
    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }
    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null

    return $.extend({}, elRect, scroll, outerDims, elOffset)
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }

  }

  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
    var delta = { top: 0, left: 0 }
    if (!this.$viewport) return delta

    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0
    var viewportDimensions = this.getPosition(this.$viewport)

    if (/right|left/.test(placement)) {
      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll
      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight
      if (topEdgeOffset < viewportDimensions.top) { // top overflow
        delta.top = viewportDimensions.top - topEdgeOffset
      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow
        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset
      }
    } else {
      var leftEdgeOffset  = pos.left - viewportPadding
      var rightEdgeOffset = pos.left + viewportPadding + actualWidth
      if (leftEdgeOffset < viewportDimensions.left) { // left overflow
        delta.left = viewportDimensions.left - leftEdgeOffset
      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow
        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset
      }
    }

    return delta
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.getUID = function (prefix) {
    do prefix += ~~(Math.random() * 1000000)
    while (document.getElementById(prefix))
    return prefix
  }

  Tooltip.prototype.tip = function () {
    if (!this.$tip) {
      this.$tip = $(this.options.template)
      if (this.$tip.length != 1) {
        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')
      }
    }
    return this.$tip
  }

  Tooltip.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = this
    if (e) {
      self = $(e.currentTarget).data('bs.' + this.type)
      if (!self) {
        self = new this.constructor(e.currentTarget, this.getDelegateOptions())
        $(e.currentTarget).data('bs.' + this.type, self)
      }
    }

    if (e) {
      self.inState.click = !self.inState.click
      if (self.isInStateTrue()) self.enter(self)
      else self.leave(self)
    } else {
      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
    }
  }

  Tooltip.prototype.destroy = function () {
    var that = this
    clearTimeout(this.timeout)
    this.hide(function () {
      that.$element.off('.' + that.type).removeData('bs.' + that.type)
      if (that.$tip) {
        that.$tip.detach()
      }
      that.$tip = null
      that.$arrow = null
      that.$viewport = null
      that.$element = null
    })
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tooltip

  $.fn.tooltip             = Plugin
  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

/* ========================================================================
 * Bootstrap: popover.js v3.3.7
 * http://getbootstrap.com/javascript/#popovers
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.VERSION  = '3.3.7'

  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events
      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'
    ](content)

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
            o.content.call($e[0]) :
            o.content)
  }

  Popover.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.popover

  $.fn.popover             = Plugin
  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(jQuery);

/* ========================================================================
 * Bootstrap: scrollspy.js v3.3.7
 * http://getbootstrap.com/javascript/#scrollspy
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // SCROLLSPY CLASS DEFINITION
  // ==========================

  function ScrollSpy(element, options) {
    this.$body          = $(document.body)
    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)
    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)
    this.selector       = (this.options.target || '') + ' .nav li > a'
    this.offsets        = []
    this.targets        = []
    this.activeTarget   = null
    this.scrollHeight   = 0

    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))
    this.refresh()
    this.process()
  }

  ScrollSpy.VERSION  = '3.3.7'

  ScrollSpy.DEFAULTS = {
    offset: 10
  }

  ScrollSpy.prototype.getScrollHeight = function () {
    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
  }

  ScrollSpy.prototype.refresh = function () {
    var that          = this
    var offsetMethod  = 'offset'
    var offsetBase    = 0

    this.offsets      = []
    this.targets      = []
    this.scrollHeight = this.getScrollHeight()

    if (!$.isWindow(this.$scrollElement[0])) {
      offsetMethod = 'position'
      offsetBase   = this.$scrollElement.scrollTop()
    }

    this.$body
      .find(this.selector)
      .map(function () {
        var $el   = $(this)
        var href  = $el.data('target') || $el.attr('href')
        var $href = /^#./.test(href) && $(href)

        return ($href
          && $href.length
          && $href.is(':visible')
          && [[$href[offsetMethod]().top + offsetBase, href]]) || null
      })
      .sort(function (a, b) { return a[0] - b[0] })
      .each(function () {
        that.offsets.push(this[0])
        that.targets.push(this[1])
      })
  }

  ScrollSpy.prototype.process = function () {
    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset
    var scrollHeight = this.getScrollHeight()
    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()
    var offsets      = this.offsets
    var targets      = this.targets
    var activeTarget = this.activeTarget
    var i

    if (this.scrollHeight != scrollHeight) {
      this.refresh()
    }

    if (scrollTop >= maxScroll) {
      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)
    }

    if (activeTarget && scrollTop < offsets[0]) {
      this.activeTarget = null
      return this.clear()
    }

    for (i = offsets.length; i--;) {
      activeTarget != targets[i]
        && scrollTop >= offsets[i]
        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])
        && this.activate(targets[i])
    }
  }

  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target

    this.clear()

    var selector = this.selector +
      '[data-target="' + target + '"],' +
      this.selector + '[href="' + target + '"]'

    var active = $(selector)
      .parents('li')
      .addClass('active')

    if (active.parent('.dropdown-menu').length) {
      active = active
        .closest('li.dropdown')
        .addClass('active')
    }

    active.trigger('activate.bs.scrollspy')
  }

  ScrollSpy.prototype.clear = function () {
    $(this.selector)
      .parentsUntil(this.options.target, '.active')
      .removeClass('active')
  }


  // SCROLLSPY PLUGIN DEFINITION
  // ===========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.scrollspy')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.scrollspy

  $.fn.scrollspy             = Plugin
  $.fn.scrollspy.Constructor = ScrollSpy


  // SCROLLSPY NO CONFLICT
  // =====================

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old
    return this
  }


  // SCROLLSPY DATA-API
  // ==================

  $(window).on('load.bs.scrollspy.data-api', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this)
      Plugin.call($spy, $spy.data())
    })
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: tab.js v3.3.7
 * http://getbootstrap.com/javascript/#tabs
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    // jscs:disable requireDollarBeforejQueryAssignment
    this.element = $(element)
    // jscs:enable requireDollarBeforejQueryAssignment
  }

  Tab.VERSION = '3.3.7'

  Tab.TRANSITION_DURATION = 150

  Tab.prototype.show = function () {
    var $this    = this.element
    var $ul      = $this.closest('ul:not(.dropdown-menu)')
    var selector = $this.data('target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    if ($this.parent('li').hasClass('active')) return

    var $previous = $ul.find('.active:last a')
    var hideEvent = $.Event('hide.bs.tab', {
      relatedTarget: $this[0]
    })
    var showEvent = $.Event('show.bs.tab', {
      relatedTarget: $previous[0]
    })

    $previous.trigger(hideEvent)
    $this.trigger(showEvent)

    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return

    var $target = $(selector)

    this.activate($this.closest('li'), $ul)
    this.activate($target, $target.parent(), function () {
      $previous.trigger({
        type: 'hidden.bs.tab',
        relatedTarget: $this[0]
      })
      $this.trigger({
        type: 'shown.bs.tab',
        relatedTarget: $previous[0]
      })
    })
  }

  Tab.prototype.activate = function (element, container, callback) {
    var $active    = container.find('> .active')
    var transition = callback
      && $.support.transition
      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)

    function next() {
      $active
        .removeClass('active')
        .find('> .dropdown-menu > .active')
          .removeClass('active')
        .end()
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', false)

      element
        .addClass('active')
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', true)

      if (transition) {
        element[0].offsetWidth // reflow for transition
        element.addClass('in')
      } else {
        element.removeClass('fade')
      }

      if (element.parent('.dropdown-menu').length) {
        element
          .closest('li.dropdown')
            .addClass('active')
          .end()
          .find('[data-toggle="tab"]')
            .attr('aria-expanded', true)
      }

      callback && callback()
    }

    $active.length && transition ?
      $active
        .one('bsTransitionEnd', next)
        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :
      next()

    $active.removeClass('in')
  }


  // TAB PLUGIN DEFINITION
  // =====================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.tab')

      if (!data) $this.data('bs.tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tab

  $.fn.tab             = Plugin
  $.fn.tab.Constructor = Tab


  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


  // TAB DATA-API
  // ============

  var clickHandler = function (e) {
    e.preventDefault()
    Plugin.call($(this), 'show')
  }

  $(document)
    .on('click.bs.tab.data-api', '[data-toggle="tab"]', clickHandler)
    .on('click.bs.tab.data-api', '[data-toggle="pill"]', clickHandler)

}(jQuery);

/* ========================================================================
 * Bootstrap: affix.js v3.3.7
 * http://getbootstrap.com/javascript/#affix
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)

    this.$target = $(this.options.target)
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element     = $(element)
    this.affixed      = null
    this.unpin        = null
    this.pinnedOffset = null

    this.checkPosition()
  }

  Affix.VERSION  = '3.3.7'

  Affix.RESET    = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0,
    target: window
  }

  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
    var scrollTop    = this.$target.scrollTop()
    var position     = this.$element.offset()
    var targetHeight = this.$target.height()

    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false

    if (this.affixed == 'bottom') {
      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'
      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'
    }

    var initializing   = this.affixed == null
    var colliderTop    = initializing ? scrollTop : position.top
    var colliderHeight = initializing ? targetHeight : height

    if (offsetTop != null && scrollTop <= offsetTop) return 'top'
    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'

    return false
  }

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset
    this.$element.removeClass(Affix.RESET).addClass('affix')
    var scrollTop = this.$target.scrollTop()
    var position  = this.$element.offset()
    return (this.pinnedOffset = position.top - scrollTop)
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var height       = this.$element.height()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom
    var scrollHeight = Math.max($(document).height(), $(document.body).height())

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)

    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)

    if (this.affixed != affix) {
      if (this.unpin != null) this.$element.css('top', '')

      var affixType = 'affix' + (affix ? '-' + affix : '')
      var e         = $.Event(affixType + '.bs.affix')

      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      this.affixed = affix
      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null

      this.$element
        .removeClass(Affix.RESET)
        .addClass(affixType)
        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')
    }

    if (affix == 'bottom') {
      this.$element.offset({
        top: scrollHeight - height - offsetBottom
      })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.affix

  $.fn.affix             = Plugin
  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom
      if (data.offsetTop    != null) data.offset.top    = data.offsetTop

      Plugin.call($spy, data)
    })
  })

}(jQuery);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.4';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `map.set` because it's not chainable in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    // Don't return `set.add` because it's not chainable in IE 11.
    set.add(value);
    return set;
  }

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, baseClone, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `map`.
     *
     * @private
     * @param {Object} map The map to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned map.
     */
    function cloneMap(map, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
      return arrayReduce(array, addMapEntry, new map.constructor);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of `set`.
     *
     * @private
     * @param {Object} set The set to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned set.
     */
    function cloneSet(set, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
      return arrayReduce(array, addSetEntry, new set.constructor);
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, cloneFunc, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return cloneMap(object, isDeep, cloneFunc);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return cloneSet(object, isDeep, cloneFunc);

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length &&
        (typeof value == 'number' || reIsUint.test(value)) &&
        (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (reLeadingDot.test(string)) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(args) {
      args.push(undefined, customDefaultsAssignIn);
      return apply(assignInWith, undefined, args);
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
      return _;
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3)(module)))

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(4);
module.exports = __webpack_require__(5);


/***/ })
/******/ ]);